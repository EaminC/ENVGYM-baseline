{
  "timestamp": "20250902_183703",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756838162",
  "build": {
    "success": true,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.15kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 60B done\n#3 DONE 0.0s\n\n#4 [ 1/19] FROM docker.io/library/ubuntu:22.04@sha256:5e14404dbc9df30fef8460020b99a3c0034241283912189fd4650e446d8d6c92\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 771.56kB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 8/19] RUN apt-get update && apt-get install -y     postgresql-client     default-mysql-client     redis-tools     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [10/19] RUN pip3 install --upgrade pip setuptools wheel\n#7 CACHED\n\n#8 [ 2/19] RUN apt-get update\n#8 CACHED\n\n#9 [ 3/19] RUN apt-get install -y     build-essential     git     curl     wget     vim     nano     ca-certificates     gnupg     lsb-release     software-properties-common     openssh-client     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#9 CACHED\n\n#10 [ 5/19] RUN apt-get update && apt-get install -y     nodejs     npm     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#10 CACHED\n\n#11 [ 4/19] RUN apt-get update && apt-get install -y     python3     python3-pip     python3-dev     python3-venv     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#11 CACHED\n\n#12 [ 6/19] RUN apt-get update && apt-get install -y     default-jdk     maven     gradle     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#12 CACHED\n\n#13 [ 7/19] RUN apt-get update && apt-get install -y     golang-go     ruby     ruby-dev     php     php-cli     composer     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#13 CACHED\n\n#14 [ 9/19] RUN apt-get update && apt-get install -y     docker.io     docker-compose     && apt-get clean     && rm -rf /var/lib/apt/lists/*\n#14 CACHED\n\n#15 [11/19] WORKDIR /workspace\n#15 CACHED\n\n#16 [12/19] COPY . /workspace/\n#16 DONE 0.2s\n\n#17 [13/19] RUN if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi\n#17 DONE 0.3s\n\n#18 [14/19] RUN if [ -f package.json ]; then npm install; fi\n#18 DONE 0.4s\n\n#19 [15/19] RUN if [ -f Gemfile ]; then bundle install; fi\n#19 DONE 0.4s\n\n#20 [16/19] RUN if [ -f composer.json ]; then composer install; fi\n#20 DONE 0.4s\n\n#21 [17/19] RUN if [ -f go.mod ]; then go mod download; fi\n#21 DONE 0.3s\n\n#22 [18/19] RUN if [ -f pom.xml ]; then mvn dependency:resolve; fi\n#22 DONE 0.3s\n\n#23 [19/19] RUN if [ -f build.gradle ] && [ -f gradlew ]; then chmod +x gradlew && ./gradlew dependencies || true; elif [ -f build.gradle ]; then gradle dependencies || true; fi\n#23 0.482 Downloading https://services.gradle.org/distributions/gradle-8.7-bin.zip\n#23 0.967 ............10%.............20%.............30%.............40%............50%.............60%.............70%.............80%.............90%............100%\n#23 16.23 \n#23 16.23 Welcome to Gradle 8.7!\n#23 16.23 \n#23 16.23 Here are the highlights of this release:\n#23 16.23  - Compiling and testing with Java 22\n#23 16.23  - Cacheable Groovy script compilation\n#23 16.23  - New methods in lazy collection properties\n#23 16.23 \n#23 16.23 For more details see https://docs.gradle.org/8.7/release-notes.html\n#23 16.23 \n#23 16.32 To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.7/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.\n#23 17.22 Daemon will be stopped at the end of the build \n#23 21.72 > Task :buildSrc:compileJava NO-SOURCE\n#23 34.42 > Task :buildSrc:compileGroovy\n#23 34.42 > Task :buildSrc:processResources NO-SOURCE\n#23 34.42 > Task :buildSrc:classes\n#23 34.42 > Task :buildSrc:jar\n#23 51.42 \n#23 51.42 > Task :dependencies\n#23 51.42 \n#23 51.42 ------------------------------------------------------------\n#23 51.42 Root project 'logstash'\n#23 51.42 ------------------------------------------------------------\n#23 51.42 \n#23 51.42 annotationProcessor - Annotation processors and their dependencies for source set 'main'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 api - API dependencies for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 apiElements - API elements for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 compileClasspath - Compile classpath for source set 'main'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 compileOnly - Compile-only dependencies for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 compileOnlyApi - Compile-only API dependencies for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 default - Configuration for default artifacts. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 implementation - Implementation dependencies for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 mainSourceElements - List of source directories contained in the Main SourceSet. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 runtimeClasspath - Runtime classpath of source set 'main'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 runtimeElements - Runtime elements for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 runtimeOnly - Runtime-only dependencies for the 'main' feature. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testAnnotationProcessor - Annotation processors and their dependencies for source set 'test'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testCompileClasspath - Compile classpath for source set 'test'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testCompileOnly - Compile only dependencies for source set 'test'. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testImplementation - Implementation only dependencies for source set 'test'. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testRuntimeClasspath - Runtime classpath of source set 'test'.\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 testRuntimeOnly - Runtime only dependencies for source set 'test'. (n)\n#23 51.42 No dependencies\n#23 51.42 \n#23 51.42 A web-based, searchable dependency report is available by adding the --scan option.\n#23 51.52 \n#23 51.52 BUILD SUCCESSFUL in 50s\n#23 51.52 3 actionable tasks: 3 executed\n#23 DONE 52.2s\n\n#24 exporting to image\n#24 exporting layers\n#24 exporting layers 5.3s done\n#24 writing image sha256:b357eab25267633a6939fa8f27d07d88c427abf626f612a0107983d6770e9a86 done\n#24 naming to docker.io/library/envgym_test_1756838162 done\n#24 DONE 5.3s\n"
  },
  "run": {
    "success": true,
    "stdout": "",
    "stderr": ""
  }
}