{
  "timestamp": "20250902_150807",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756825641",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.71kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/21] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 3/21] RUN pip3 install tabulate\n#5 CACHED\n\n#6 [ 9/21] RUN curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&     install minikube-linux-amd64 /usr/local/bin/minikube &&     rm minikube-linux-amd64\n#6 CACHED\n\n#7 [11/21] RUN git clone https://github.com/verus-lang/verus.git /tmp/verus || (echo \"Failed to clone Verus repository\" && exit 1)\n#7 CACHED\n\n#8 [ 8/21] RUN curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" &&     chmod +x kubectl &&     mv kubectl /usr/local/bin/\n#8 CACHED\n\n#9 [ 2/21] RUN apt-get update && apt-get install -y     build-essential     gcc     g++     make     cmake     git     curl     wget     unzip     python3     python3-pip     libssl-dev     pkg-config     openssl     ca-certificates     clang     libclang-dev     && rm -rf /var/lib/apt/lists/*\n#9 CACHED\n\n#10 [ 7/21] RUN go install sigs.k8s.io/kind@v0.23.0\n#10 CACHED\n\n#11 [ 4/21] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.88.0\n#11 CACHED\n\n#12 [12/21] RUN cd /tmp/verus && git checkout 3b6b805ac86cd6640d59468341055c7fa14cff07\n#12 CACHED\n\n#13 [10/21] WORKDIR /anvil\n#13 CACHED\n\n#14 [ 6/21] RUN wget -O go.tar.gz https://go.dev/dl/go1.20.14.linux-amd64.tar.gz &&     tar -C /usr/local -xzf go.tar.gz &&     rm go.tar.gz\n#14 CACHED\n\n#15 [ 5/21] RUN rustup component add rustfmt rust-src\n#15 CACHED\n\n#16 [13/21] RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.12.5/z3-4.12.5-x64-glibc-2.31.zip -O /tmp/z3.zip &&     unzip /tmp/z3.zip -d /tmp/ &&     mv /tmp/z3-4.12.5-x64-glibc-2.31 /tmp/verus/z3 &&     rm /tmp/z3.zip\n#16 CACHED\n\n#17 [internal] load build context\n#17 transferring context: 1.68MB 0.1s done\n#17 DONE 0.1s\n\n#18 [14/21] RUN cd /tmp/verus/source &&     RUST_BACKTRACE=1 cargo build --release --manifest-path vargo/Cargo.toml -v || (echo \"vargo build failed\" && exit 1)\n#18 0.243 info: syncing channel updates for '1.82.0-x86_64-unknown-linux-gnu'\n#18 0.447 info: latest update on 2024-10-17, rust version 1.82.0 (f6e511eec 2024-10-15)\n#18 0.447 info: downloading component 'cargo'\n#18 1.169 info: downloading component 'clippy'\n#18 1.253 info: downloading component 'llvm-tools'\n#18 3.161 info: downloading component 'rust-docs'\n#18 4.517 info: downloading component 'rust-std'\n#18 6.714 info: downloading component 'rustc'\n#18 12.72 info: downloading component 'rustc-dev'\n#18 21.21 info: downloading component 'rustfmt'\n#18 21.29 info: installing component 'cargo'\n#18 21.96 info: installing component 'clippy'\n#18 22.25 info: installing component 'llvm-tools'\n#18 24.54 info: installing component 'rust-docs'\n#18 26.39 info: installing component 'rust-std'\n#18 28.35 info: installing component 'rustc'\n#18 33.04 info: installing component 'rustc-dev'\n#18 40.15 info: installing component 'rustfmt'\n#18 40.52 error: manifest path `vargo/Cargo.toml` does not exist\n#18 40.52 vargo build failed\n#18 ERROR: process \"/bin/sh -c cd /tmp/verus/source &&     RUST_BACKTRACE=1 cargo build --release --manifest-path vargo/Cargo.toml -v || (echo \\\"vargo build failed\\\" && exit 1)\" did not complete successfully: exit code: 1\n------\n > [14/21] RUN cd /tmp/verus/source &&     RUST_BACKTRACE=1 cargo build --release --manifest-path vargo/Cargo.toml -v || (echo \"vargo build failed\" && exit 1):\n21.29 info: installing component 'cargo'\n21.96 info: installing component 'clippy'\n22.25 info: installing component 'llvm-tools'\n24.54 info: installing component 'rust-docs'\n26.39 info: installing component 'rust-std'\n28.35 info: installing component 'rustc'\n33.04 info: installing component 'rustc-dev'\n40.15 info: installing component 'rustfmt'\n40.52 error: manifest path `vargo/Cargo.toml` does not exist\n40.52 vargo build failed\n------\nenvgym.dockerfile:63\n--------------------\n  62 |     \n  63 | >>> RUN cd /tmp/verus/source && \\\n  64 | >>>     RUST_BACKTRACE=1 cargo build --release --manifest-path vargo/Cargo.toml -v || (echo \"vargo build failed\" && exit 1)\n  65 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c cd /tmp/verus/source &&     RUST_BACKTRACE=1 cargo build --release --manifest-path vargo/Cargo.toml -v || (echo \\\"vargo build failed\\\" && exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}