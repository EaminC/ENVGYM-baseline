{
  "timestamp": "20250902_150350",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756825385",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.41kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/20] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 7/20] RUN go install sigs.k8s.io/kind@v0.23.0\n#5 CACHED\n\n#6 [ 2/20] RUN apt-get update && apt-get install -y     build-essential     gcc     g++     make     cmake     git     curl     wget     unzip     python3     python3-pip     libssl-dev     pkg-config     openssl     ca-certificates     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 5/20] RUN rustup component add rustfmt\n#7 CACHED\n\n#8 [ 4/20] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.88.0\n#8 CACHED\n\n#9 [12/20] RUN cd /tmp/verus && git checkout 3b6b805ac86cd6640d59468341055c7fa14cff07\n#9 CACHED\n\n#10 [ 8/20] RUN curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" &&     chmod +x kubectl &&     mv kubectl /usr/local/bin/\n#10 CACHED\n\n#11 [ 9/20] RUN curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&     install minikube-linux-amd64 /usr/local/bin/minikube &&     rm minikube-linux-amd64\n#11 CACHED\n\n#12 [11/20] RUN git clone https://github.com/verus-lang/verus.git /tmp/verus || (echo \"Failed to clone Verus repository\" && exit 1)\n#12 CACHED\n\n#13 [ 6/20] RUN wget -O go.tar.gz https://go.dev/dl/go1.20.14.linux-amd64.tar.gz &&     tar -C /usr/local -xzf go.tar.gz &&     rm go.tar.gz\n#13 CACHED\n\n#14 [ 3/20] RUN pip3 install tabulate\n#14 CACHED\n\n#15 [10/20] WORKDIR /anvil\n#15 CACHED\n\n#16 [13/20] RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.12.5/z3-4.12.5-x64-glibc-2.31.zip -O /tmp/z3.zip &&     unzip /tmp/z3.zip -d /tmp/ &&     mv /tmp/z3-4.12.5-x64-glibc-2.31 /tmp/verus/z3 &&     rm /tmp/z3.zip\n#16 CACHED\n\n#17 [internal] load build context\n#17 transferring context: 567.31kB 0.1s done\n#17 DONE 0.1s\n\n#18 [14/20] RUN cd /tmp/verus/source &&     cargo build --release --manifest-path vargo/Cargo.toml &&     cargo build --release --manifest-path rust-verify/Cargo.toml\n#18 0.240 info: syncing channel updates for '1.82.0-x86_64-unknown-linux-gnu'\n#18 0.445 info: latest update on 2024-10-17, rust version 1.82.0 (f6e511eec 2024-10-15)\n#18 0.445 info: downloading component 'cargo'\n#18 0.663 info: downloading component 'clippy'\n#18 0.746 info: downloading component 'llvm-tools'\n#18 4.083 info: downloading component 'rust-docs'\n#18 5.363 info: downloading component 'rust-std'\n#18 7.025 info: downloading component 'rustc'\n#18 12.63 info: downloading component 'rustc-dev'\n#18 19.77 info: downloading component 'rustfmt'\n#18 19.87 info: installing component 'cargo'\n#18 20.57 info: installing component 'clippy'\n#18 20.87 info: installing component 'llvm-tools'\n#18 23.17 info: installing component 'rust-docs'\n#18 25.30 info: installing component 'rust-std'\n#18 27.31 info: installing component 'rustc'\n#18 32.20 info: installing component 'rustc-dev'\n#18 39.54 info: installing component 'rustfmt'\n#18 39.90 error: manifest path `vargo/Cargo.toml` does not exist\n#18 ERROR: process \"/bin/sh -c cd /tmp/verus/source &&     cargo build --release --manifest-path vargo/Cargo.toml &&     cargo build --release --manifest-path rust-verify/Cargo.toml\" did not complete successfully: exit code: 101\n------\n > [14/20] RUN cd /tmp/verus/source &&     cargo build --release --manifest-path vargo/Cargo.toml &&     cargo build --release --manifest-path rust-verify/Cargo.toml:\n19.77 info: downloading component 'rustfmt'\n19.87 info: installing component 'cargo'\n20.57 info: installing component 'clippy'\n20.87 info: installing component 'llvm-tools'\n23.17 info: installing component 'rust-docs'\n25.30 info: installing component 'rust-std'\n27.31 info: installing component 'rustc'\n32.20 info: installing component 'rustc-dev'\n39.54 info: installing component 'rustfmt'\n39.90 error: manifest path `vargo/Cargo.toml` does not exist\n------\nenvgym.dockerfile:58\n--------------------\n  57 |     \n  58 | >>> RUN cd /tmp/verus/source && \\\n  59 | >>>     cargo build --release --manifest-path vargo/Cargo.toml && \\\n  60 | >>>     cargo build --release --manifest-path rust-verify/Cargo.toml\n  61 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c cd /tmp/verus/source &&     cargo build --release --manifest-path vargo/Cargo.toml &&     cargo build --release --manifest-path rust-verify/Cargo.toml\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}