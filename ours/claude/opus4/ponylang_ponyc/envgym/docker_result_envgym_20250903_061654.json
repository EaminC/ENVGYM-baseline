{
  "timestamp": "20250903_061654",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756880212",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.25kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/18] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 2/18] RUN apt-get update && apt-get clean\n#5 CACHED\n\n#6 [ 7/18] RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&     add-apt-repository \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main\" &&     apt-get update && apt-get install -y --fix-missing     llvm-15     llvm-15-dev     llvm-15-runtime     llvm-15-tools     clang-15     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 9/18] RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - &&     apt-get install -y nodejs &&     apt-get clean && rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [ 8/18] RUN update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-15 100 &&     update-alternatives --install /usr/bin/clang clang /usr/bin/clang-15 100 &&     update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-15 100\n#8 CACHED\n\n#9 [10/18] RUN pip3 install --no-cache-dir     mkdocs     mkdocs-material     pyyaml     yamllint     pandas     matplotlib     jupyter\n#9 CACHED\n\n#10 [12/18] RUN wget https://github.com/rhysd/actionlint/releases/download/v1.6.26/actionlint_1.6.26_linux_amd64.tar.gz &&     tar xzf actionlint_1.6.26_linux_amd64.tar.gz &&     mv actionlint /usr/local/bin/ &&     rm actionlint_1.6.26_linux_amd64.tar.gz\n#10 CACHED\n\n#11 [ 3/18] RUN apt-get install -y --fix-missing     build-essential     cmake     git     wget     curl     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#11 CACHED\n\n#12 [13/18] RUN mkdir -p /tmp/googletest &&     cd /tmp/googletest &&     wget https://github.com/google/googletest/archive/refs/tags/v1.17.0.tar.gz &&     tar xzf v1.17.0.tar.gz &&     cd googletest-1.17.0 &&     cmake . &&     make &&     make install &&     cd / &&     rm -rf /tmp/googletest\n#12 CACHED\n\n#13 [11/18] RUN npm install -g     markdownlint-cli     markdownlint-cli2\n#13 CACHED\n\n#14 [ 6/18] RUN apt-get update && apt-get install -y --fix-missing     netcat     imagemagick     libreadline-dev     libedit-dev     libncurses5-dev     tcpdump     net-tools     lsof     time     htop     sysstat     gnupg     software-properties-common     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#14 CACHED\n\n#15 [ 5/18] RUN apt-get update && apt-get install -y --fix-missing     libssl-dev     libffi-dev     lsb-release     findutils     tar     ca-certificates     systemtap-sdt-dev     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#15 CACHED\n\n#16 [ 4/18] RUN apt-get update && apt-get install -y --fix-missing     python3     python3-pip     python3-dev     clang     g++     gcc     make     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#16 CACHED\n\n#17 [14/18] RUN mkdir -p /tmp/benchmark &&     cd /tmp/benchmark &&     wget https://github.com/google/benchmark/archive/v1.9.1.tar.gz &&     tar xzf v1.9.1.tar.gz &&     cd benchmark-1.9.1 &&     cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release . &&     make &&     make install &&     cd / &&     rm -rf /tmp/benchmark\n#17 CACHED\n\n#18 [15/18] WORKDIR /workspace\n#18 DONE 0.0s\n\n#19 [internal] load build context\n#19 transferring context: 29.04MB 0.3s done\n#19 DONE 0.3s\n\n#20 [16/18] COPY . .\n#20 DONE 0.2s\n\n#21 [17/18] RUN make libs build_flags=\"-j$(nproc)\" &&     make configure build_flags=\"-j$(nproc)\" &&     make build build_flags=\"-j$(nproc)\" &&     make install\n#21 0.323 CMake Error at CMakeLists.txt:1 (cmake_minimum_required):\n#21 0.323   CMake 3.21 or higher is required.  You are running version 3.16.3\n#21 0.323 \n#21 0.323 \n#21 0.323 -- Configuring incomplete, errors occurred!\n#21 0.324 make: *** [Makefile:182: libs] Error 1\n#21 ERROR: process \"/bin/sh -c make libs build_flags=\\\"-j$(nproc)\\\" &&     make configure build_flags=\\\"-j$(nproc)\\\" &&     make build build_flags=\\\"-j$(nproc)\\\" &&     make install\" did not complete successfully: exit code: 2\n------\n > [17/18] RUN make libs build_flags=\"-j$(nproc)\" &&     make configure build_flags=\"-j$(nproc)\" &&     make build build_flags=\"-j$(nproc)\" &&     make install:\n0.323 CMake Error at CMakeLists.txt:1 (cmake_minimum_required):\n0.323   CMake 3.21 or higher is required.  You are running version 3.16.3\n0.323 \n0.323 \n0.323 -- Configuring incomplete, errors occurred!\n0.324 make: *** [Makefile:182: libs] Error 1\n------\nenvgym.dockerfile:117\n--------------------\n 116 |     \n 117 | >>> RUN make libs build_flags=\"-j$(nproc)\" && \\\n 118 | >>>     make configure build_flags=\"-j$(nproc)\" && \\\n 119 | >>>     make build build_flags=\"-j$(nproc)\" && \\\n 120 | >>>     make install\n 121 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c make libs build_flags=\\\"-j$(nproc)\\\" &&     make configure build_flags=\\\"-j$(nproc)\\\" &&     make build build_flags=\\\"-j$(nproc)\\\" &&     make install\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}