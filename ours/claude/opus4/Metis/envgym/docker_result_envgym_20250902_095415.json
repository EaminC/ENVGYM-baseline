{
  "timestamp": "20250902_095415",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756806852",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.99kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/14] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 3/14] RUN apt-get update && apt-get install -y     cmake     git     vim     m4     autoconf     bison     flex     bc     kmod     cpio     && apt-get clean\n#5 CACHED\n\n#6 [ 5/14] RUN apt-get update && apt-get install -y     libnfsidmap-dev     libtirpc-dev     libkrb5-dev     libgssglue1     libdbus-1-3     libattr1-dev     libacl1-dev     dbus     libdbus-1-dev     libcap-dev     && apt-get clean\n#6 CACHED\n\n#7 [ 2/14] RUN apt-get update && apt-get install -y     build-essential     gcc     g++     make     && apt-get clean\n#7 CACHED\n\n#8 [ 4/14] RUN apt-get update && apt-get install -y     libncurses5-dev     libelf-dev     libncurses-dev     libfuse-dev     libssl-dev     libcrypto++-dev     libgoogle-perftools-dev     libxxhash-dev     zlib1g-dev     && apt-get clean\n#8 CACHED\n\n#9 [ 6/14] RUN apt-get update && apt-get install -y     libjemalloc-dev     uuid-dev     libblkid-dev     xfslibs-dev     libwbclient-dev     rpm2cpio     libaio-dev     libibverbs-dev     librdmacm-dev     && apt-get clean\n#9 CACHED\n\n#10 [ 7/14] RUN apt-get update && apt-get install -y     rpcbind     nfs-common     libboost-all-dev     liburcu-dev     nilfs-tools     nfs-kernel-server     xfsprogs     f2fs-tools     jfsutils     btrfs-progs     mtd-utils     && apt-get clean\n#10 CACHED\n\n#11 [internal] load build context\n#11 transferring context: 754.16kB 0.1s done\n#11 DONE 0.1s\n\n#12 [ 8/14] RUN apt-get update && apt-get install -y     tmux     screen     fio     openssh-client     openssh-server     gcov     lcov     && apt-get clean\n#12 0.360 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease\n#12 0.360 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease\n#12 0.367 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease\n#12 0.388 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease\n#12 0.986 Reading package lists...\n#12 1.968 Reading package lists...\n#12 2.900 Building dependency tree...\n#12 3.048 Reading state information...\n#12 3.067 E: Unable to locate package gcov\n#12 ERROR: process \"/bin/sh -c apt-get update && apt-get install -y     tmux     screen     fio     openssh-client     openssh-server     gcov     lcov     && apt-get clean\" did not complete successfully: exit code: 100\n------\n > [ 8/14] RUN apt-get update && apt-get install -y     tmux     screen     fio     openssh-client     openssh-server     gcov     lcov     && apt-get clean:\n0.360 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease\n0.360 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease\n0.367 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease\n0.388 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease\n\n\n\n3.067 E: Unable to locate package gcov\n------\nenvgym.dockerfile:77\n--------------------\n  76 |     \n  77 | >>> RUN apt-get update && apt-get install -y \\\n  78 | >>>     tmux \\\n  79 | >>>     screen \\\n  80 | >>>     fio \\\n  81 | >>>     openssh-client \\\n  82 | >>>     openssh-server \\\n  83 | >>>     gcov \\\n  84 | >>>     lcov \\\n  85 | >>>     && apt-get clean\n  86 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c apt-get update && apt-get install -y     tmux     screen     fio     openssh-client     openssh-server     gcov     lcov     && apt-get clean\" did not complete successfully: exit code: 100\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}