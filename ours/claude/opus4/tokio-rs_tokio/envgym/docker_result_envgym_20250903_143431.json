{
  "timestamp": "20250903_143431",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756910070",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.74kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/25] FROM docker.io/library/ubuntu:22.04@sha256:4e0171b9275e12d375863f2b3ae9ce00a4c53ddda176bd55868df97ac6f21a6e\n#4 resolve docker.io/library/ubuntu:22.04@sha256:4e0171b9275e12d375863f2b3ae9ce00a4c53ddda176bd55868df97ac6f21a6e done\n#4 DONE 0.0s\n\n#5 [ 2/25] RUN apt-get update && apt-get install -y     build-essential     curl     git     wget     jq     grep     sed     cpio     xz-utils     busybox-static     libssl-dev     libelf-dev     bison     flex     valgrind     llvm     gcc-multilib     g++-multilib     libc6-dev-i386     liburing-dev     hunspell     hunspell-en-us     qemu-system-x86     pkg-config     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [ 3/25] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.82.0\n#6 CACHED\n\n#7 [ 4/25] RUN rustup toolchain install 1.82.0 &&     rustup toolchain install nightly-2025-01-25 &&     rustup toolchain install nightly-2025-06-02 &&     rustup component add rustfmt --toolchain 1.82.0 &&     rustup component add clippy --toolchain 1.82.0 &&     rustup component add rust-src --toolchain 1.82.0 &&     rustup component add rust-src --toolchain nightly-2025-01-25 &&     rustup component add miri --toolchain nightly-2025-06-02 &&     rustup target add x86_64-unknown-linux-musl --toolchain 1.82.0 &&     rustup target add i686-unknown-linux-gnu --toolchain 1.82.0 &&     rustup target add wasm32-unknown-unknown --toolchain 1.82.0 &&     rustup target add wasm32-wasi --toolchain 1.82.0\n#7 CACHED\n\n#8 [internal] load build context\n#8 transferring context: 714.23kB 0.1s done\n#8 DONE 0.1s\n\n#9 [ 5/25] RUN cargo install cargo-edit\n#9 0.310     Updating crates.io index\n#9 0.398  Downloading crates ...\n#9 0.469   Downloaded cargo-edit v0.13.7\n#9 0.487 error: failed to parse manifest at `/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cargo-edit-0.13.7/Cargo.toml`\n#9 0.487 \n#9 0.487 Caused by:\n#9 0.487   feature `edition2024` is required\n#9 0.487 \n#9 0.487   The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.82.0 (8f40fc59f 2024-08-21)).\n#9 0.487   Consider trying a newer version of Cargo (this may require the nightly release).\n#9 0.487   See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n#9 ERROR: process \"/bin/sh -c cargo install cargo-edit\" did not complete successfully: exit code: 101\n------\n > [ 5/25] RUN cargo install cargo-edit:\n0.398  Downloading crates ...\n0.469   Downloaded cargo-edit v0.13.7\n0.487 error: failed to parse manifest at `/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cargo-edit-0.13.7/Cargo.toml`\n0.487 \n0.487 Caused by:\n0.487   feature `edition2024` is required\n0.487 \n0.487   The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.82.0 (8f40fc59f 2024-08-21)).\n0.487   Consider trying a newer version of Cargo (this may require the nightly release).\n0.487   See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n------\nenvgym.dockerfile:52\n--------------------\n  50 |         rustup target add wasm32-wasi --toolchain $RUST_VERSION\n  51 |     \n  52 | >>> RUN cargo install cargo-edit\n  53 |     RUN cargo install cargo-watch\n  54 |     RUN cargo install cargo-spellcheck\n--------------------\nERROR: failed to solve: process \"/bin/sh -c cargo install cargo-edit\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}