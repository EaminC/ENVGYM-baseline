{
  "timestamp": "20250903_182749",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756924055",
  "build": {
    "success": true,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.47kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/18] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 708.58kB 0.0s done\n#5 DONE 0.0s\n\n#6 [ 5/18] RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test &&     apt-get update &&     apt-get install -y gcc-12 g++-12 gcc-13 g++-13 libstdc++-13-dev ||     (add-apt-repository -y ppa:ubuntu-toolchain-r/ppa &&      apt-get update &&      apt-get install -y gcc-12 g++-12 || true) &&     rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 4/18] RUN wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&     echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-16 main\" >> /etc/apt/sources.list &&     echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-18 main\" >> /etc/apt/sources.list &&     apt-get update &&     apt-get install -y clang-16 clang-format-18 ||     (apt-get install -y clang-16 && apt-get install -y clang-format) &&     rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [ 7/18] RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 130 --slave /usr/bin/g++ g++ /usr/bin/g++-13 ||     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 120 --slave /usr/bin/g++ g++ /usr/bin/g++-12 ||     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9\n#8 CACHED\n\n#9 [ 2/18] RUN apt-get update && apt-get install -y     software-properties-common     && rm -rf /var/lib/apt/lists/*\n#9 CACHED\n\n#10 [ 6/18] RUN pip3 install --no-cache-dir     pre-commit>=3.0     meson>=0.63.0\n#10 CACHED\n\n#11 [ 8/18] RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 160 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-16 || true\n#11 CACHED\n\n#12 [ 3/18] RUN apt-get update && apt-get install -y     build-essential     gcc-9     g++-9     make     cmake     ninja-build     git     python3     python3-pip     pkg-config     wget     curl     gnupg     lsb-release     libssl-dev     zlib1g-dev     libbrotli-dev     libzstd-dev     libcurl4-openssl-dev     libgtest-dev     squid     apache2-utils     netcat-openbsd     abigail-tools     ca-certificates     && rm -rf /var/lib/apt/lists/*\n#12 CACHED\n\n#13 [ 9/18] RUN if command -v clang-format-18 >/dev/null 2>&1; then         update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-18 180;     elif command -v clang-format >/dev/null 2>&1; then         update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format 100;     fi\n#13 CACHED\n\n#14 [10/18] WORKDIR /workspace\n#14 CACHED\n\n#15 [11/18] COPY . /workspace/cpp-httplib/\n#15 DONE 0.1s\n\n#16 [12/18] WORKDIR /workspace/cpp-httplib\n#16 DONE 0.0s\n\n#17 [13/18] RUN if [ -f httplib.h ]; then         echo \"httplib.h found\";     else         echo \"Error: httplib.h not found\" && exit 1;     fi\n#17 0.214 httplib.h found\n#17 DONE 0.3s\n\n#18 [14/18] RUN mkdir -p build &&     cd build &&     cmake ..         -DCMAKE_BUILD_TYPE=Release         -DHTTPLIB_REQUIRE_OPENSSL=ON         -DHTTPLIB_REQUIRE_ZLIB=ON         -DHTTPLIB_REQUIRE_BROTLI=ON         -DHTTPLIB_TEST=ON         -DHTTPLIB_COMPILE=OFF         -GNinja &&     ninja || true\n#18 0.456 -- The CXX compiler identification is GNU 9.4.0\n#18 0.466 -- Check for working CXX compiler: /usr/bin/c++\n#18 0.542 -- Check for working CXX compiler: /usr/bin/c++ -- works\n#18 0.545 -- Detecting CXX compiler ABI info\n#18 0.630 -- Detecting CXX compiler ABI info - done\n#18 0.647 -- Detecting CXX compile features\n#18 0.647 -- Detecting CXX compile features - done\n#18 0.649 -- Looking for C++ include pthread.h\n#18 0.734 -- Looking for C++ include pthread.h - found\n#18 0.734 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n#18 0.822 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n#18 0.822 -- Check if compiler accepts -pthread\n#18 0.908 -- Check if compiler accepts -pthread - yes\n#18 0.910 -- Found Threads: TRUE  \n#18 0.997 CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):\n#18 0.997   Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the\n#18 0.997   system variable OPENSSL_ROOT_DIR: Found unsuitable version \"1.1.1f\", but\n#18 0.997   required is at least \"3.0.0\" (found /usr/lib/x86_64-linux-gnu/libcrypto.so)\n#18 0.997 Call Stack (most recent call first):\n#18 0.997   /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:391 (_FPHSA_FAILURE_MESSAGE)\n#18 0.997   /usr/share/cmake-3.16/Modules/FindOpenSSL.cmake:447 (find_package_handle_standard_args)\n#18 0.997   CMakeLists.txt:137 (find_package)\n#18 0.997 \n#18 0.997 \n#18 0.997 -- Configuring incomplete, errors occurred!\n#18 0.997 See also \"/workspace/cpp-httplib/build/CMakeFiles/CMakeOutput.log\".\n#18 0.997 See also \"/workspace/cpp-httplib/build/CMakeFiles/CMakeError.log\".\n#18 DONE 1.0s\n\n#19 [15/18] RUN cd /usr/src/gtest &&     cmake . &&     make &&     cp lib/*.a /usr/lib/\n#19 0.350 CMake Warning at CMakeLists.txt:54 (project):\n#19 0.350   VERSION keyword not followed by a value or was followed by a value that\n#19 0.350   expanded to nothing.\n#19 0.350 \n#19 0.350 \n#19 0.446 -- The CXX compiler identification is GNU 9.4.0\n#19 0.519 -- The C compiler identification is GNU 9.4.0\n#19 0.528 -- Check for working CXX compiler: /usr/bin/c++\n#19 0.653 -- Check for working CXX compiler: /usr/bin/c++ -- works\n#19 0.656 -- Detecting CXX compiler ABI info\n#19 0.778 -- Detecting CXX compiler ABI info - done\n#19 0.799 -- Detecting CXX compile features\n#19 0.799 -- Detecting CXX compile features - done\n#19 0.802 -- Check for working C compiler: /usr/bin/cc\n#19 0.923 -- Check for working C compiler: /usr/bin/cc -- works\n#19 0.925 -- Detecting C compiler ABI info\n#19 1.048 -- Detecting C compiler ABI info - done\n#19 1.069 -- Detecting C compile features\n#19 1.070 -- Detecting C compile features - done\n#19 1.091 -- Found PythonInterp: /usr/bin/python3.8 (found version \"3.8.10\") \n#19 1.093 -- Looking for pthread.h\n#19 1.216 -- Looking for pthread.h - found\n#19 1.217 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n#19 1.336 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n#19 1.337 -- Looking for pthread_create in pthreads\n#19 1.436 -- Looking for pthread_create in pthreads - not found\n#19 1.436 -- Looking for pthread_create in pthread\n#19 1.557 -- Looking for pthread_create in pthread - found\n#19 1.560 -- Found Threads: TRUE  \n#19 1.564 -- Configuring done\n#19 1.570 -- Generating done\n#19 1.570 -- Build files have been written to: /usr/src/gtest\n#19 1.631 Scanning dependencies of target gtest\n#19 1.649 [ 25%] Building CXX object CMakeFiles/gtest.dir/src/gtest-all.cc.o\n#19 4.162 [ 50%] Linking CXX static library lib/libgtest.a\n#19 4.282 [ 50%] Built target gtest\n#19 4.304 Scanning dependencies of target gtest_main\n#19 4.326 [ 75%] Building CXX object CMakeFiles/gtest_main.dir/src/gtest_main.cc.o\n#19 4.866 [100%] Linking CXX static library lib/libgtest_main.a\n#19 4.956 [100%] Built target gtest_main\n#19 DONE 5.0s\n\n#20 [16/18] RUN pre-commit install || true\n#20 0.388 pre-commit installed at .git/hooks/pre-commit\n#20 DONE 0.5s\n\n#21 [17/18] RUN if [ -f test/proxy/basic_passwd ] && [ -f test/proxy/digest_passwd ]; then         echo \"Proxy password files exist\";     else         mkdir -p test/proxy &&         htpasswd -bc test/proxy/basic_passwd test test &&         printf \"test:cpp-httplib proxy:test\\n\" | htdigest -c test/proxy/digest_passwd;     fi\n#21 0.376 Proxy password files exist\n#21 DONE 0.4s\n\n#22 [18/18] WORKDIR /workspace/cpp-httplib\n#22 DONE 0.0s\n\n#23 exporting to image\n#23 exporting layers\n#23 exporting layers 5.0s done\n#23 writing image sha256:a744d90a4258f25844082a0036342182323b7cbd9378e55ec0e63a463d3ab678 done\n#23 naming to docker.io/library/envgym_test_1756924055 done\n#23 DONE 5.0s\n"
  },
  "run": {
    "success": true,
    "stdout": "",
    "stderr": ""
  }
}