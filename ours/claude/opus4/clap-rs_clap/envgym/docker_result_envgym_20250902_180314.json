{
  "timestamp": "20250902_180314",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756836159",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.03kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/14] FROM docker.io/library/ubuntu:22.04@sha256:5e14404dbc9df30fef8460020b99a3c0034241283912189fd4650e446d8d6c92\n#4 DONE 0.0s\n\n#5 [ 2/14] RUN apt-get update && apt-get install -y     build-essential     curl     git     make     pkg-config     libssl-dev     python3     python3-pip     fish     zsh     bash     wget     ca-certificates     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [internal] load build context\n#6 transferring context: 212.37kB 0.0s done\n#6 DONE 0.1s\n\n#7 [ 3/14] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.89.0 --profile minimal\n#7 0.372 info: downloading installer\n#7 2.997 info: profile set to 'minimal'\n#7 2.997 info: default host triple is x86_64-unknown-linux-gnu\n#7 2.997 info: syncing channel updates for '1.89.0-x86_64-unknown-linux-gnu'\n#7 3.229 info: latest update on 2025-08-07, rust version 1.89.0 (29483883e 2025-08-04)\n#7 3.229 info: downloading component 'cargo'\n#7 4.041 info: downloading component 'rust-std'\n#7 6.417 info: downloading component 'rustc'\n#7 13.59 info: installing component 'cargo'\n#7 14.37 info: installing component 'rust-std'\n#7 16.51 info: installing component 'rustc'\n#7 21.96 \n#7 21.96 info: default toolchain set to '1.89.0-x86_64-unknown-linux-gnu'\n#7 21.98   1.89.0-x86_64-unknown-linux-gnu installed - rustc 1.89.0 (29483883e 2025-08-04)\n#7 21.98 \n#7 21.98 \n#7 21.98 Rust is installed now. Great!\n#7 21.98 \n#7 21.98 To get started you may need to restart your current shell.\n#7 21.98 This would reload your PATH environment variable to include\n#7 21.98 Cargo's bin directory (/usr/local/cargo/bin).\n#7 21.98 \n#7 21.98 To configure your current shell, you need to source\n#7 21.98 the corresponding env file under /usr/local/cargo.\n#7 21.98 \n#7 21.98 This is usually done by running one of the following (note the leading DOT):\n#7 21.98 . \"/usr/local/cargo/env\"            # For sh/bash/zsh/ash/dash/pdksh\n#7 21.98 source \"/usr/local/cargo/env.fish\"  # For fish\n#7 21.98 source $\"/usr/local/cargo/env.nu\"  # For nushell\n#7 DONE 23.5s\n\n#8 [ 4/14] RUN . /usr/local/cargo/env && rustup component add rustfmt clippy rust-src\n#8 0.362 info: downloading component 'rustfmt'\n#8 0.446 info: installing component 'rustfmt'\n#8 0.878 info: downloading component 'clippy'\n#8 0.975 info: installing component 'clippy'\n#8 1.544 info: downloading component 'rust-src'\n#8 1.636 info: installing component 'rust-src'\n#8 DONE 2.5s\n\n#9 [ 5/14] RUN . /usr/local/cargo/env && rustup target add wasm32-unknown-unknown wasm32-wasip2\n#9 0.371 info: downloading component 'rust-std' for 'wasm32-unknown-unknown'\n#9 2.179 info: installing component 'rust-std' for 'wasm32-unknown-unknown'\n#9 3.879 info: downloading component 'rust-std' for 'wasm32-wasip2'\n#9 6.157 info: installing component 'rust-std' for 'wasm32-wasip2'\n#9 DONE 8.3s\n\n#10 [ 6/14] RUN . /usr/local/cargo/env && rustup toolchain install nightly --component rustfmt clippy rust-src\n#10 0.242 error: invalid value 'clippy' for '[TOOLCHAIN]...': invalid toolchain name: 'clippy'\n#10 0.242 \n#10 0.242 For more information, try '--help'.\n#10 ERROR: process \"/bin/sh -c . $CARGO_HOME/env && rustup toolchain install nightly --component rustfmt clippy rust-src\" did not complete successfully: exit code: 1\n------\n > [ 6/14] RUN . /usr/local/cargo/env && rustup toolchain install nightly --component rustfmt clippy rust-src:\n0.242 error: invalid value 'clippy' for '[TOOLCHAIN]...': invalid toolchain name: 'clippy'\n0.242 \n0.242 For more information, try '--help'.\n------\nenvgym.dockerfile:32\n--------------------\n  30 |     RUN . $CARGO_HOME/env && rustup target add wasm32-unknown-unknown wasm32-wasip2\n  31 |     \n  32 | >>> RUN . $CARGO_HOME/env && rustup toolchain install nightly --component rustfmt clippy rust-src\n  33 |     \n  34 |     RUN . $CARGO_HOME/env && cargo install cargo-edit \\\n--------------------\nERROR: failed to solve: process \"/bin/sh -c . $CARGO_HOME/env && rustup toolchain install nightly --component rustfmt clippy rust-src\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}