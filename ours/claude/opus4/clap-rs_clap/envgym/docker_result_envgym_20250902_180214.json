{
  "timestamp": "20250902_180214",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756836099",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.96kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/11] FROM docker.io/library/ubuntu:22.04@sha256:5e14404dbc9df30fef8460020b99a3c0034241283912189fd4650e446d8d6c92\n#4 DONE 0.0s\n\n#5 [ 2/11] RUN apt-get update && apt-get install -y     build-essential     curl     git     make     pkg-config     libssl-dev     python3     python3-pip     fish     zsh     bash     wget     ca-certificates     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [internal] load build context\n#6 transferring context: 354.97kB 0.1s done\n#6 DONE 0.1s\n\n#7 [ 3/11] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.89.0 --profile minimal     && . /usr/local/cargo/env     && rustup component add rustfmt clippy rust-src     && rustup target add wasm32-unknown-unknown wasm32-wasip2     && rustup toolchain install nightly --component rustfmt clippy rust-src\n#7 0.362 info: downloading installer\n#7 3.279 info: profile set to 'minimal'\n#7 3.279 info: default host triple is x86_64-unknown-linux-gnu\n#7 3.279 info: syncing channel updates for '1.89.0-x86_64-unknown-linux-gnu'\n#7 3.490 info: latest update on 2025-08-07, rust version 1.89.0 (29483883e 2025-08-04)\n#7 3.490 info: downloading component 'cargo'\n#7 4.431 info: downloading component 'rust-std'\n#7 7.034 info: downloading component 'rustc'\n#7 15.41 info: installing component 'cargo'\n#7 16.20 info: installing component 'rust-std'\n#7 18.34 info: installing component 'rustc'\n#7 23.70 \n#7 23.70 info: default toolchain set to '1.89.0-x86_64-unknown-linux-gnu'\n#7 23.72   1.89.0-x86_64-unknown-linux-gnu installed - rustc 1.89.0 (29483883e 2025-08-04)\n#7 23.72 \n#7 23.72 \n#7 23.72 Rust is installed now. Great!\n#7 23.72 \n#7 23.72 To get started you may need to restart your current shell.\n#7 23.72 This would reload your PATH environment variable to include\n#7 23.72 Cargo's bin directory (/usr/local/cargo/bin).\n#7 23.72 \n#7 23.72 To configure your current shell, you need to source\n#7 23.72 the corresponding env file under /usr/local/cargo.\n#7 23.72 \n#7 23.72 This is usually done by running one of the following (note the leading DOT):\n#7 23.72 . \"/usr/local/cargo/env\"            # For sh/bash/zsh/ash/dash/pdksh\n#7 23.72 source \"/usr/local/cargo/env.fish\"  # For fish\n#7 23.72 source $\"/usr/local/cargo/env.nu\"  # For nushell\n#7 23.89 info: downloading component 'rustfmt'\n#7 24.08 info: installing component 'rustfmt'\n#7 24.51 info: downloading component 'clippy'\n#7 24.85 info: installing component 'clippy'\n#7 25.45 info: downloading component 'rust-src'\n#7 25.51 info: installing component 'rust-src'\n#7 26.25 info: downloading component 'rust-std' for 'wasm32-unknown-unknown'\n#7 27.05 info: installing component 'rust-std' for 'wasm32-unknown-unknown'\n#7 28.74 info: downloading component 'rust-std' for 'wasm32-wasip2'\n#7 30.82 info: installing component 'rust-std' for 'wasm32-wasip2'\n#7 32.51 error: invalid value 'clippy' for '[TOOLCHAIN]...': invalid toolchain name: 'clippy'\n#7 32.51 \n#7 32.51 For more information, try '--help'.\n#7 ERROR: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${RUST_VERSION} --profile minimal     && . $CARGO_HOME/env     && rustup component add rustfmt clippy rust-src     && rustup target add wasm32-unknown-unknown wasm32-wasip2     && rustup toolchain install nightly --component rustfmt clippy rust-src\" did not complete successfully: exit code: 1\n------\n > [ 3/11] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.89.0 --profile minimal     && . /usr/local/cargo/env     && rustup component add rustfmt clippy rust-src     && rustup target add wasm32-unknown-unknown wasm32-wasip2     && rustup toolchain install nightly --component rustfmt clippy rust-src:\n24.85 info: installing component 'clippy'\n25.45 info: downloading component 'rust-src'\n25.51 info: installing component 'rust-src'\n26.25 info: downloading component 'rust-std' for 'wasm32-unknown-unknown'\n27.05 info: installing component 'rust-std' for 'wasm32-unknown-unknown'\n28.74 info: downloading component 'rust-std' for 'wasm32-wasip2'\n30.82 info: installing component 'rust-std' for 'wasm32-wasip2'\n32.51 error: invalid value 'clippy' for '[TOOLCHAIN]...': invalid toolchain name: 'clippy'\n32.51 \n32.51 For more information, try '--help'.\n------\nenvgym.dockerfile:26\n--------------------\n  25 |     \n  26 | >>> RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${RUST_VERSION} --profile minimal \\\n  27 | >>>     && . $CARGO_HOME/env \\\n  28 | >>>     && rustup component add rustfmt clippy rust-src \\\n  29 | >>>     && rustup target add wasm32-unknown-unknown wasm32-wasip2 \\\n  30 | >>>     && rustup toolchain install nightly --component rustfmt clippy rust-src\n  31 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${RUST_VERSION} --profile minimal     && . $CARGO_HOME/env     && rustup component add rustfmt clippy rust-src     && rustup target add wasm32-unknown-unknown wasm32-wasip2     && rustup toolchain install nightly --component rustfmt clippy rust-src\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}