=== Docker Execution Log - 20250902_165216 ===
Dockerfile: envgym/envgym.dockerfile
Image Name: envgym_test_1756831920

=== Build Log ===
Build Status: Success
Build Output:


Build Error:
#0 building with "default" instance using docker driver

#1 [internal] load build definition from envgym.dockerfile
#1 transferring dockerfile: 3.02kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:20.04
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [ 1/16] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214
#4 DONE 0.0s

#5 [ 4/16] RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null     && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null     && apt-get update     && apt-get install -y cmake     && rm -rf /var/lib/apt/lists/*
#5 CACHED

#6 [ 7/16] RUN wget https://github.com/bazelbuild/bazel/releases/download/7.0.0/bazel-7.0.0-linux-x86_64 -O /usr/local/bin/bazel     && chmod +x /usr/local/bin/bazel
#6 CACHED

#7 [ 8/16] RUN wget https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64 -O /usr/local/bin/bazelisk     && chmod +x /usr/local/bin/bazelisk
#7 CACHED

#8 [ 9/16] RUN wget https://github.com/doxygen/doxygen/releases/download/Release_1_9_8/doxygen-1.9.8.linux.bin.tar.gz     && tar -xzf doxygen-1.9.8.linux.bin.tar.gz     && cd doxygen-1.9.8     && make install     && cd ..     && rm -rf doxygen-1.9.8*
#8 CACHED

#9 [ 2/16] RUN apt-get update && apt-get install -y     build-essential     gcc-9     g++-9     clang-10     git     wget     curl     python3.8     python3-pip     ninja-build     clang-format     valgrind     graphviz     pkg-config     openmpi-bin     software-properties-common     gnupg     lsb-release     ca-certificates     unzip     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [ 6/16] RUN pip3 install --upgrade pip     && pip3 install meson==0.64.0     && pip3 install conan==1.63.0     && pip3 install conan==2.1.0 --force-reinstall     && pip3 install conan_package_tools     && pip3 install codecov
#10 CACHED

#11 [ 5/16] RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -     && add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main"     && apt-get update     && apt-get install -y clang-tidy-15     && rm -rf /var/lib/apt/lists/*
#11 CACHED

#12 [ 3/16] RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 100     && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 100
#12 CACHED

#13 [10/16] RUN wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb     && dpkg -i packages-microsoft-prod.deb     && rm packages-microsoft-prod.deb     && apt-get update     && apt-get install -y dotnet-sdk-6.0     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [internal] load build context
#14 transferring context: 1.33MB 0.1s done
#14 DONE 0.1s

#15 [11/16] RUN dotnet --version && dotnet tool install -g MarkdownSnippets.Tool || echo "MarkdownSnippets.Tool installation failed, continuing..."
#15 0.319 6.0.428
#15 0.479 
#15 0.480 Welcome to .NET 6.0!
#15 0.480 ---------------------
#15 0.480 SDK Version: 6.0.428
#15 0.480 
#15 0.480 Telemetry
#15 0.480 ---------
#15 0.480 The .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.
#15 0.480 
#15 0.480 Read more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry
#15 0.480 
#15 0.480 ----------------
#15 0.480 Installed an ASP.NET Core HTTPS development certificate.
#15 0.480 To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only).
#15 0.480 Learn about HTTPS: https://aka.ms/dotnet-https
#15 0.480 ----------------
#15 0.480 Write your first app: https://aka.ms/dotnet-hello-world
#15 0.480 Find out what's new: https://aka.ms/dotnet-whats-new
#15 0.480 Explore documentation: https://aka.ms/dotnet-docs
#15 0.480 Report issues and find source on GitHub: https://github.com/dotnet/core
#15 0.480 Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli
#15 0.480 --------------------------------------------------------------------------------------
#15 1.718 /tmp/b7ff46c3-4ba0-468c-9c15-205ab106003f/restore.csproj : error NU1202: Package MarkdownSnippets.Tool 27.0.2 is not compatible with net6.0 (.NETCoreApp,Version=v6.0) / any. Package MarkdownSnippets.Tool 27.0.2 supports: net8.0 (.NETCoreApp,Version=v8.0) / any
#15 1.797 The tool package could not be restored.
#15 1.797 Tool 'markdownsnippets.tool' failed to install. This failure may have been caused by:
#15 1.797 
#15 1.797 * You are attempting to install a preview release and did not use the --version option to specify the version.
#15 1.797 * A package by this name was found, but it was not a .NET tool.
#15 1.797 * The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.
#15 1.797 * You mistyped the name of the tool.
#15 1.797 
#15 1.797 For more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool
#15 1.806 MarkdownSnippets.Tool installation failed, continuing...
#15 DONE 1.9s

#16 [12/16] WORKDIR /home/cc/EnvGym/data/catchorg_Catch2
#16 DONE 0.0s

#17 [13/16] COPY . .
#17 DONE 0.2s

#18 [14/16] RUN mkdir -p build builddir docs/doxygen
#18 DONE 0.3s

#19 [15/16] RUN echo "7.0.0" > .bazelversion
#19 DONE 0.3s

#20 [16/16] WORKDIR /home/cc/EnvGym/data/catchorg_Catch2
#20 DONE 0.0s

#21 exporting to image
#21 exporting layers
#21 exporting layers 12.1s done
#21 writing image sha256:4ae2faf85ad037b9058cf0318c749a5f168e0a52ddd921be93dcf8b0f2ce7014 done
#21 naming to docker.io/library/envgym_test_1756831920 done
#21 DONE 12.1s


=== Runtime Log ===  
Runtime Status: Success
Runtime Output:


Runtime Error:


=== Execution End ===

