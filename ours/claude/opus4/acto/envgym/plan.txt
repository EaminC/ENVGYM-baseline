=== ENVIRONMENT SETUP PLAN ===

1. DOWNLOADS NEEDED:
   - Docker (28.1.1 - already available, BuildKit supported)
   - Golang (>= 1.19, recommended 1.21.5 for compatibility)
   - Python (>= 3.10, Python 3.10 recommended for Ubuntu 20.04 compatibility)
   - kubectl (latest stable version compatible with Kubernetes)
   - Kind (v0.20.0 or later)
   - Helm (latest stable version, required for helm template/helm get manifest commands)
   - Kustomize (latest stable version, required for kustomize build command)
   - Git (for cloning repository)
   - Make (build automation tool)
   - gcc/g++ (C/C++ compiler for building shared objects and test binaries)
   - build-essential (compilation tools package)
   - pip (Python package manager, usually comes with Python)
   - pip-tools (== 7.3.0)
   - setuptools (for Python package building)
   - wheel (== 0.42.0)
   - pre-commit (== 3.6.0)
   - black (== 24.10.0)
   - isort (== 5.13.2)
   - mypy (== 1.7.1)
   - pylint (== 3.0.3)
   - pytest (== 7.4.3)
   - pytest-cov (== 4.1.0)
   - ansible-core (== 2.17.5)
   - ansible-galaxy collections:
     - ansible.posix
     - community.general
   - kubernetes (== 31.0.0)
   - pydantic (== 2.5.2)
   - docker-py (== 6.1.3)
   - deepdiff (== 6.3.1)
   - jsonschema (== 4.17.3)
   - pandas (== 2.0.3)
   - prometheus-client (== 0.19.0)
   - SSH client (for Ansible remote connections)
   - xmlstarlet (for CloudLab manifest parsing)
   - software-properties-common (for adding PPAs on Ubuntu)
   - csv (Python standard library for CSV operations)
   - json (Python standard library for JSON parsing)
   - argparse (Python standard library for CLI argument parsing)
   - os (Python standard library for file system operations)
   - gocovmerge (Go coverage merging tool for E2E coverage analysis)
   - go tools cover (Go coverage analysis tool)
   - Go modules dependencies (auto-managed by go mod):
     - k8s.io/apimachinery v0.24.0
     - k8s.io/client-go (for k8s client library functions)
     - github.com/gogo/protobuf v1.3.2
     - gopkg.in/inf.v0 v0.9.1
     - k8s.io/klog/v2 v2.60.1
     - k8s.io/kube-openapi v0.0.0-20220328201542-3ee0da9b0b42
     - k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9
     - sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2
     - sigs.k8s.io/structured-merge-diff/v4 v4.2.1
     - sigs.k8s.io/yaml v1.2.0
     - golang.org/x/tools v0.22.0
     - golang.org/x/tools/go/pointer v0.1.0-deprecated
     - golang.org/x/tools/go/ssa (for SSA analysis)
     - golang.org/x/tools/go/callgraph (for interprocedural analysis)
     - github.com/goki/ki v1.1.17
     - github.com/jinzhu/copier v0.4.0
     - golang.org/x/sync v0.7.0
     - golang.org/x/mod v0.18.0
     - golang.org/x/sys v0.21.0
     - go.uber.org/zap v1.26.0 (for field count script logging)
     - go.uber.org/atomic v1.11.0 (indirect dependency)
     - go.uber.org/multierr v1.11.0 (indirect dependency)
     - gopkg.in/yaml.v3 v3.0.1 (for field count YAML parsing)
     - github.com/go-yaml/yaml v2.1.0+incompatible (alternative YAML parser)
     - github.com/davecgh/go-spew v1.1.1 (for debugging)
     - github.com/stretchr/testify v1.8.0 (for testing)
     - github.com/pmezard/go-difflib v1.0.0 (testify dependency)
     - github.com/pkg/errors v0.8.1 (error handling)
     - go.uber.org/goleak v1.2.0 (goroutine leak detection)
     - github.com/benbjohnson/clock v1.1.0 (time mocking)
   - cert-manager (for operators requiring certificate management)
   - PyYAML (for YAML parsing in Python)
   - openapi-spec-validator (for OpenAPI schema validation)
   - openapi-schema-validator (for OpenAPI schema validation)
   - jq (JSON processor for bug tracking and reporting)
   - curl (for API interactions with issue trackers)

2. FILES TO CREATE:
   - `/home/cc/EnvGym/data/acto/.venv/` directory (Python virtual environment, recommended location)
   - `/home/cc/EnvGym/data/acto/venv/` directory (Python virtual environment, alternative location)
   - `/home/cc/workdir/acto/venv/` directory (Alternative Python venv location for older distros)
   - `/home/cc/EnvGym/data/acto/.env` file (environment variables for local development)
   - `/home/cc/.kube/config` (Kubernetes configuration file, auto-generated)
   - `/home/cc/EnvGym/data/acto/test/` directory (Local test configuration files)
   - `/home/cc/EnvGym/data/acto/data/` directory structure (Custom operator configuration files)
   - `/home/cc/EnvGym/data/acto/pyproject.toml` (Python project configuration - already exists)
   - `/home/cc/EnvGym/data/acto/requirements.txt` (pip-compiled production dependencies - auto-generated by pre-commit)
   - `/home/cc/EnvGym/data/acto/requirements-dev.txt` (pip-compiled development dependencies - already exists)
   - `/home/cc/EnvGym/data/acto/.pre-commit-config.yaml` (pre-commit hooks configuration - already exists)
   - `/home/cc/EnvGym/data/acto/.coverage` (coverage configuration, generated)
   - `/home/cc/EnvGym/data/acto/.mypy_cache/` directory (mypy cache, auto-generated)
   - `/home/cc/EnvGym/data/acto/.pytest_cache/` directory (pytest cache, auto-generated)
   - `/home/cc/EnvGym/data/acto/htmlcov/` directory (HTML coverage reports, auto-generated)
   - `/home/cc/EnvGym/data/acto/.pylintrc` (pylint configuration file, optional)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/*.so` (shared object files for x86_64, generated by make)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/k8sutil.so` (k8sutil shared object file for x86_64, generated by Makefile)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/test` (test binary for k8sutil.so, generated by Makefile)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/test.c` (C test file for k8sutil.so - should exist)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/k8sutil.go` (Go source file for k8sutil.so - should exist)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/go.mod` (Go module file - already exists)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/go.sum` (Go module checksum file - already exists)
   - `/home/cc/EnvGym/data/acto/acto/k8s_util/lib/Makefile` (Makefile for building k8sutil - already exists)
   - `/home/cc/EnvGym/data/acto/ssa/*.so` (shared object files for x86_64, generated by make)
   - `/home/cc/EnvGym/data/acto/ssa/libanalysis.so` (SSA analysis shared object file for x86_64, generated by Makefile)
   - `/home/cc/EnvGym/data/acto/ssa/libanalysis.h` (C header file for libanalysis.so, auto-generated)
   - `/home/cc/EnvGym/data/acto/ssa/ssa.go` (Go source file for SSA analysis - should exist)
   - `/home/cc/EnvGym/data/acto/ssa/go.mod` (Go module file for SSA - already exists)
   - `/home/cc/EnvGym/data/acto/ssa/go.sum` (Go module checksum file for SSA - already exists, verified)
   - `/home/cc/EnvGym/data/acto/ssa/Makefile` (Makefile for building SSA analysis library - already exists)
   - `/home/cc/EnvGym/data/acto/ssa/README.md` (SSA documentation file - already exists)
   - `/home/cc/EnvGym/data/acto/ssa/value_mapping.json` (CR field value mapping configuration, if needed)
   - `/home/cc/EnvGym/data/acto/ssa/propagation_rules.yaml` (propagation rules configuration, if needed)
   - `/home/cc/EnvGym/data/acto/ssa/taint_analysis_results/` directory (for storing taint analysis outputs)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/go.mod` (Go module file for field count script - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/go.sum` (Go module checksum file for field count script - already exists, verified)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/field_count` (compiled binary for field count script, generated)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/*.go` (Go source files for field count functionality - should exist)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/output/` directory (for field count analysis results)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/test/` directory (for field count unit tests)
   - `/home/cc/EnvGym/data/acto/scripts/field_count/vendor/` directory (vendored dependencies, if using vendor mode)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/ansible_hosts` (Ansible inventory file for cluster workers)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/ansible.cfg` (Ansible configuration file - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/configure.yaml` (Main Ansible playbook for environment setup - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/python-venv.yaml` (Ansible playbook for Python venv setup - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/python.yaml` (Alternative Ansible playbook for system Python setup - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/ansible/README.md` (Ansible documentation - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/prune_tool.py` (Python script for pruning input generation space - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/results_to_csv.py` (Python script for aggregating test results to CSV - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/README.md` (Scripts documentation - already exists)
   - `/home/cc/EnvGym/data/acto/scripts/pruning_analysis/` directory (for storing pruning analysis outputs)
   - `/home/cc/EnvGym/data/acto/scripts/csv_reports/` directory (for storing aggregated CSV reports)
   - `/home/cc/EnvGym/data/acto/Makefile` (build automation file - already exists)
   - `/home/cc/EnvGym/data/acto/.gitignore` (Git ignore file - already exists)
   - `/home/cc/EnvGym/data/acto/LICENSE` (Apache License 2.0 file - already exists)
   - `/home/cc/EnvGym/data/acto/testrun-*` directories (test run data, auto-generated)
   - `/home/cc/EnvGym/data/acto/kind_config` file (Kind cluster configuration, if needed)
   - `/home/cc/EnvGym/data/acto/kubernetes_config` file (Kubernetes configuration, if needed)
   - `/home/cc/EnvGym/data/acto/NOTICE` file (Apache License attribution notices, if applicable)
   - `/home/cc/workdir/` directory (working directory for Ansible deployments)
   - `/home/cc/workdir/acto/` directory (CloudLab Acto working directory)
   - `/home/cc/.ssh/known_hosts` (SSH known hosts file, updated by Ansible)
   - `/home/cc/.ssh/id_rsa` (SSH private key for CloudLab, if controller is CloudLab machine)
   - `/home/cc/.ssh/id_rsa.pub` (SSH public key for CloudLab, if controller is CloudLab machine)
   - `/home/cc/.ansible/` directory (Ansible configuration and cache)
   - `/home/cc/.ansible.cfg` (User-level Ansible configuration, optional)
   - `/etc/ansible/ansible.cfg` (System-level Ansible configuration, optional)
   - `/etc/sysctl.conf` (system configuration file for inotify limits)
   - `/home/cc/EnvGym/data/acto/docs/FAQ.md` (Frequently Asked Questions documentation - already exists)
   - `/home/cc/EnvGym/data/acto/docs/development.md` (Development environment setup documentation - already exists)
   - `/home/cc/EnvGym/data/acto/docs/cloudlab.md` (CloudLab getting started guide - already exists)
   - `/home/cc/EnvGym/data/acto/docs/input_model.jpg` (Input model diagram for schema matching - already exists)
   - `/home/cc/EnvGym/data/acto/docs/port.md` (Testing a new operator documentation - already exists)
   - `/home/cc/EnvGym/data/acto/docs/resource.md` (Resource documentation with links and coverage guide - already exists)
   - `/home/cc/EnvGym/data/acto/docs/coverage_mount.png` (Coverage mount diagram - already exists)
   - `/home/cc/EnvGym/data/ac