{
  "timestamp": "20250902_140227",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756821746",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.88kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/28] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 5/28] RUN curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" &&     chmod +x kubectl &&     mv kubectl /usr/local/bin/\n#5 CACHED\n\n#6 [ 2/28] RUN apt-get update && apt-get install -y     software-properties-common     && add-apt-repository ppa:deadsnakes/ppa     && apt-get update && apt-get install -y     build-essential     gcc     g++     make     git     curl     wget     ssh     xmlstarlet     jq     python3.10     python3.10-dev     python3.10-venv     python3-pip     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 4/28] RUN wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz &&     tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz &&     rm go1.21.5.linux-amd64.tar.gz\n#7 CACHED\n\n#8 [ 7/28] RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n#8 CACHED\n\n#9 [ 3/28] RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 &&     update-alternatives --set python3 /usr/bin/python3.10\n#9 CACHED\n\n#10 [ 6/28] RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64 &&     chmod +x ./kind &&     mv ./kind /usr/local/bin/kind\n#10 CACHED\n\n#11 [ 8/28] RUN curl -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\" | bash &&     mv kustomize /usr/local/bin/\n#11 CACHED\n\n#12 [ 9/28] RUN go env -w GO111MODULE=on &&     go env -w GOPROXY=https://proxy.golang.org,direct &&     go install github.com/wadey/gocovmerge@latest\n#12 0.424 go: downloading github.com/wadey/gocovmerge v0.0.0-20160331181800-b5bfa59ec0ad\n#12 0.527 go: finding module for package golang.org/x/tools/cover\n#12 0.558 go: downloading golang.org/x/tools v0.36.0\n#12 0.968 go: toolchain upgrade needed to resolve golang.org/x/tools/cover\n#12 0.968 go: golang.org/x/tools@v0.36.0 requires go >= 1.23.0 (running go 1.21.5)\n#12 ERROR: process \"/bin/sh -c go env -w GO111MODULE=on &&     go env -w GOPROXY=https://proxy.golang.org,direct &&     go install github.com/wadey/gocovmerge@latest\" did not complete successfully: exit code: 1\n------\n > [ 9/28] RUN go env -w GO111MODULE=on &&     go env -w GOPROXY=https://proxy.golang.org,direct &&     go install github.com/wadey/gocovmerge@latest:\n0.424 go: downloading github.com/wadey/gocovmerge v0.0.0-20160331181800-b5bfa59ec0ad\n0.527 go: finding module for package golang.org/x/tools/cover\n0.558 go: downloading golang.org/x/tools v0.36.0\n0.968 go: toolchain upgrade needed to resolve golang.org/x/tools/cover\n0.968 go: golang.org/x/tools@v0.36.0 requires go >= 1.23.0 (running go 1.21.5)\n------\nenvgym.dockerfile:50\n--------------------\n  49 |     \n  50 | >>> RUN go env -w GO111MODULE=on && \\\n  51 | >>>     go env -w GOPROXY=https://proxy.golang.org,direct && \\\n  52 | >>>     go install github.com/wadey/gocovmerge@latest\n  53 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c go env -w GO111MODULE=on &&     go env -w GOPROXY=https://proxy.golang.org,direct &&     go install github.com/wadey/gocovmerge@latest\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}