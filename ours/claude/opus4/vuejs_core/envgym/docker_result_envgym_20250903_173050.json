{
  "timestamp": "20250903_173050",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756920647",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.69kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:22.14.0-bookworm\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/14] FROM docker.io/library/node:22.14.0-bookworm@sha256:e5ddf893cc6aeab0e5126e4edae35aa43893e2836d1d246140167ccc2616f5d7\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 338.64kB 0.0s done\n#5 DONE 0.0s\n\n#6 [ 6/14] COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./\n#6 CACHED\n\n#7 [ 7/14] COPY packages/*/package.json packages/*/\n#7 CACHED\n\n#8 [ 3/14] RUN corepack enable && corepack prepare pnpm@10.15.0 --activate\n#8 CACHED\n\n#9 [ 5/14] WORKDIR /workspace\n#9 CACHED\n\n#10 [ 4/14] RUN npm install -g serve\n#10 CACHED\n\n#11 [ 2/14] RUN apt-get update && apt-get install -y     git     wget     curl     ca-certificates     fonts-liberation     libasound2     libatk-bridge2.0-0     libatk1.0-0     libc6     libcairo2     libcups2     libdbus-1-3     libexpat1     libfontconfig1     libgcc1     libgconf-2-4     libgdk-pixbuf2.0-0     libglib2.0-0     libgtk-3-0     libnspr4     libnss3     libpango-1.0-0     libpangocairo-1.0-0     libstdc++6     libx11-6     libx11-xcb1     libxcb1     libxcomposite1     libxcursor1     libxdamage1     libxext6     libxfixes3     libxi6     libxrandr2     libxrender1     libxss1     libxtst6     lsb-release     xdg-utils     libappindicator1     libnss3     && rm -rf /var/lib/apt/lists/*\n#11 CACHED\n\n#12 [ 8/14] COPY packages-private/*/package.json packages-private/*/\n#12 CACHED\n\n#13 [ 9/14] RUN echo \"=== pnpm version ===\" &&     pnpm --version &&     echo \"=== npm registry ===\" &&     npm config get registry &&     echo \"=== pnpm config ===\" &&     pnpm config list &&     echo \"=== network connectivity test ===\" &&     curl -I https://registry.npmjs.org &&     echo \"=== pnpm store path ===\" &&     pnpm store path\n#13 0.215 === pnpm version ===\n#13 0.586 10.15.0\n#13 0.592 === npm registry ===\n#13 0.684 https://registry.npmjs.org/\n#13 0.696 === pnpm config ===\n#13 0.957 @jsr:registry=https://npm.jsr.io/\n#13 0.957 only-built-dependencies[]=@swc/core\n#13 0.957 only-built-dependencies[]=esbuild\n#13 0.957 only-built-dependencies[]=puppeteer\n#13 0.957 only-built-dependencies[]=simple-git-hooks\n#13 0.957 only-built-dependencies[]=unrs-resolver\n#13 0.957 packages[]=packages/*\n#13 0.957 packages[]=packages-private/*\n#13 0.957 registry=https://registry.npmjs.org/\n#13 0.957 user-agent=pnpm/10.15.0 npm/? node/v22.14.0 linux x64\n#13 0.957 \n#13 0.957 [catalog]\n#13 0.957 @babel/parser=^7.28.3\n#13 0.957 @babel/types=^7.28.2\n#13 0.957 estree-walker=^2.0.2\n#13 0.957 magic-string=^0.30.17\n#13 0.957 source-map-js=^1.2.1\n#13 0.957 vite=^5.4.15\n#13 0.957 @vitejs/plugin-vue=^6.0.1\n#13 0.957 \n#13 0.957 [peer-dependency-rules.allowedVersions]\n#13 0.957 typescript-eslint>eslint=^9.0.0\n#13 0.957 @typescript-eslint/eslint-plugin>eslint=^9.0.0\n#13 0.957 @typescript-eslint/parser>eslint=^9.0.0\n#13 0.957 @typescript-eslint/type-utils>eslint=^9.0.0\n#13 0.957 @typescript-eslint/utils>eslint=^9.0.0\n#13 0.963 === network connectivity test ===\n#13 0.969   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#13 0.969                                  Dload  Upload   Total   Spent    Left  Speed\n#13 0.969 \n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n#13 1.050 HTTP/2 200 \n#13 1.050 date: Wed, 03 Sep 2025 17:30:48 GMT\n#13 1.050 content-type: application/json\n#13 1.050 cache-control: public, immutable, max-age=31557600\n#13 1.050 set-cookie: _cfuvid=ZhFvx3drqHQ90gLETiL8BldNEEi4TqnTFAAyG0dgDMA-1756920648922-0.0.1.1-604800000; path=/; domain=.npmjs.org; HttpOnly; Secure; SameSite=None\n#13 1.050 server: cloudflare\n#13 1.050 cf-ray: 9796fa27be3cfeda-ORD\n#13 1.050 \n#13 1.052 === pnpm store path ===\n#13 1.318 /root/.local/share/pnpm/store/v10\n#13 DONE 1.4s\n\n#14 [10/14] RUN pnpm install --no-frozen-lockfile --network-timeout=100000 --reporter=append-only --loglevel=debug ||     (echo \"=== pnpm install failed ===\" &&      echo \"=== pnpm store status ===\" &&      pnpm store status &&      echo \"=== pnpm config list ===\" &&      pnpm config list &&      echo \"=== npm cache verify ===\" &&      npm cache verify &&      echo \"=== disk space ===\" &&      df -h &&      exit 1)\n#14 0.572  ERROR  Unknown option: 'network-timeout'\n#14 0.572 Did you mean 'fetch-timeout'? Use \"--config.unknown=value\" to force an unknown option.\n#14 0.572 For help, run: pnpm help install\n#14 0.578 === pnpm install failed ===\n#14 0.578 === pnpm store status ===\n#14 0.882  ENOENT  ENOENT: no such file or directory, open '/root/.local/share/pnpm/store/v10/index/df/4899b403e0cfe2d3218a1e8afa98a3ce777f4da305849de6e1a71a99055743-@ampproject+remapping@2.3.0.json'\n#14 0.882 \n#14 0.882 pnpm: ENOENT: no such file or directory, open '/root/.local/share/pnpm/store/v10/index/df/4899b403e0cfe2d3218a1e8afa98a3ce777f4da305849de6e1a71a99055743-@ampproject+remapping@2.3.0.json'\n#14 ERROR: process \"/bin/sh -c pnpm install --no-frozen-lockfile --network-timeout=100000 --reporter=append-only --loglevel=debug ||     (echo \\\"=== pnpm install failed ===\\\" &&      echo \\\"=== pnpm store status ===\\\" &&      pnpm store status &&      echo \\\"=== pnpm config list ===\\\" &&      pnpm config list &&      echo \\\"=== npm cache verify ===\\\" &&      npm cache verify &&      echo \\\"=== disk space ===\\\" &&      df -h &&      exit 1)\" did not complete successfully: exit code: 254\n------\n > [10/14] RUN pnpm install --no-frozen-lockfile --network-timeout=100000 --reporter=append-only --loglevel=debug ||     (echo \"=== pnpm install failed ===\" &&      echo \"=== pnpm store status ===\" &&      pnpm store status &&      echo \"=== pnpm config list ===\" &&      pnpm config list &&      echo \"=== npm cache verify ===\" &&      npm cache verify &&      echo \"=== disk space ===\" &&      df -h &&      exit 1):\n0.572  ERROR  Unknown option: 'network-timeout'\n0.572 Did you mean 'fetch-timeout'? Use \"--config.unknown=value\" to force an unknown option.\n0.572 For help, run: pnpm help install\n0.578 === pnpm install failed ===\n0.578 === pnpm store status ===\n0.882  ENOENT  ENOENT: no such file or directory, open '/root/.local/share/pnpm/store/v10/index/df/4899b403e0cfe2d3218a1e8afa98a3ce777f4da305849de6e1a71a99055743-@ampproject+remapping@2.3.0.json'\n0.882 \n0.882 pnpm: ENOENT: no such file or directory, open '/root/.local/share/pnpm/store/v10/index/df/4899b403e0cfe2d3218a1e8afa98a3ce777f4da305849de6e1a71a99055743-@ampproject+remapping@2.3.0.json'\n------\nenvgym.dockerfile:75\n--------------------\n  74 |     # Install dependencies with increased timeout and verbose logging\n  75 | >>> RUN pnpm install --no-frozen-lockfile --network-timeout=100000 --reporter=append-only --loglevel=debug || \\\n  76 | >>>     (echo \"=== pnpm install failed ===\" && \\\n  77 | >>>      echo \"=== pnpm store status ===\" && \\\n  78 | >>>      pnpm store status && \\\n  79 | >>>      echo \"=== pnpm config list ===\" && \\\n  80 | >>>      pnpm config list && \\\n  81 | >>>      echo \"=== npm cache verify ===\" && \\\n  82 | >>>      npm cache verify && \\\n  83 | >>>      echo \"=== disk space ===\" && \\\n  84 | >>>      df -h && \\\n  85 | >>>      exit 1)\n  86 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c pnpm install --no-frozen-lockfile --network-timeout=100000 --reporter=append-only --loglevel=debug ||     (echo \\\"=== pnpm install failed ===\\\" &&      echo \\\"=== pnpm store status ===\\\" &&      pnpm store status &&      echo \\\"=== pnpm config list ===\\\" &&      pnpm config list &&      echo \\\"=== npm cache verify ===\\\" &&      npm cache verify &&      echo \\\"=== disk space ===\\\" &&      df -h &&      exit 1)\" did not complete successfully: exit code: 254\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}