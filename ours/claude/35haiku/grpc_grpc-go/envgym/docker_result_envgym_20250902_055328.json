{
  "timestamp": "20250902_055328",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756792407",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.25kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/alpine:3.19\n#2 DONE 0.1s\n\n#3 [internal] load metadata for docker.io/library/golang:1.21-alpine3.19\n#3 DONE 0.1s\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [builder 1/7] FROM docker.io/library/golang:1.21-alpine3.19@sha256:05a0855f995505bd8832ac8d5132ed097c08bf7e46119818e8c774cda954b04b\n#5 DONE 0.0s\n\n#6 [stage-1 1/6] FROM docker.io/library/alpine:3.19@sha256:3be987e6cde1d07e873c012bf6cfe941e6e85d16ca5fc5b8bedc675451d2de67\n#6 CACHED\n\n#7 [internal] load build context\n#7 transferring context: 283.89kB 0.1s done\n#7 DONE 0.1s\n\n#8 [builder 3/7] WORKDIR /app\n#8 CACHED\n\n#9 [builder 2/7] RUN apk add --no-cache     git     make     protoc     protobuf-dev     gcc     musl-dev     curl\n#9 CACHED\n\n#10 [builder 4/7] COPY go.mod go.sum ./\n#10 CACHED\n\n#11 [builder 5/7] RUN mkdir -p /go/pkg/mod/cache &&     go mod tidy &&     go mod download -v &&     go mod verify || true\n#11 CACHED\n\n#12 [stage-1 2/6] RUN apk add --no-cache     bash     ca-certificates     git     curl     wget     protoc     go\n#12 0.231 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz\n#12 0.363 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz\n#12 ...\n\n#13 [builder 6/7] COPY . .\n#13 DONE 0.4s\n\n#14 [builder 7/7] RUN cd cmd/protoc-gen-go-grpc &&     go build -v     -ldflags=\"-s -w\"     -o /bin/protoc-gen-go-grpc     main.go     && echo \"Build completed successfully\"     || (echo \"Build failed with error\" && exit 1)\n#14 0.198 go: go.mod requires go >= 1.24.0 (running go 1.21.13; GOTOOLCHAIN=local)\n#14 0.198 Build failed with error\n#14 ERROR: process \"/bin/sh -c cd cmd/protoc-gen-go-grpc &&     go build -v     -ldflags=\\\"-s -w\\\"     -o /bin/protoc-gen-go-grpc     main.go     && echo \\\"Build completed successfully\\\"     || (echo \\\"Build failed with error\\\" && exit 1)\" did not complete successfully: exit code: 1\n\n#12 [stage-1 2/6] RUN apk add --no-cache     bash     ca-certificates     git     curl     wget     protoc     go\n#12 0.657 (1/79) Installing ncurses-terminfo-base (6.4_p20231125-r0)\n#12 0.664 (2/79) Installing libncursesw (6.4_p20231125-r0)\n#12 0.676 (3/79) Installing readline (8.2.1-r2)\n#12 CANCELED\n------\n > [builder 7/7] RUN cd cmd/protoc-gen-go-grpc &&     go build -v     -ldflags=\"-s -w\"     -o /bin/protoc-gen-go-grpc     main.go     && echo \"Build completed successfully\"     || (echo \"Build failed with error\" && exit 1):\n0.198 go: go.mod requires go >= 1.24.0 (running go 1.21.13; GOTOOLCHAIN=local)\n0.198 Build failed with error\n------\nenvgym.dockerfile:32\n--------------------\n  31 |     \n  32 | >>> RUN cd cmd/protoc-gen-go-grpc && \\\n  33 | >>>     go build -v \\\n  34 | >>>     -ldflags=\"-s -w\" \\\n  35 | >>>     -o /bin/protoc-gen-go-grpc \\\n  36 | >>>     main.go \\\n  37 | >>>     && echo \"Build completed successfully\" \\\n  38 | >>>     || (echo \"Build failed with error\" && exit 1)\n  39 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c cd cmd/protoc-gen-go-grpc &&     go build -v     -ldflags=\\\"-s -w\\\"     -o /bin/protoc-gen-go-grpc     main.go     && echo \\\"Build completed successfully\\\"     || (echo \\\"Build failed with error\\\" && exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}