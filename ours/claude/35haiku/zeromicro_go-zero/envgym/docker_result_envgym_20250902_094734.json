{
  "timestamp": "20250902_094734",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756806453",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.13kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/alpine:latest\n#2 DONE 0.1s\n\n#3 [internal] load metadata for docker.io/library/golang:1.21-alpine\n#3 DONE 0.1s\n\n#4 [internal] load .dockerignore\n#4 transferring context: 111B done\n#4 DONE 0.0s\n\n#5 [builder 1/5] FROM docker.io/library/golang:1.21-alpine@sha256:2414035b086e3c42b99654c8b26e6f5b1b1598080d65fd03c7f499552ff4dc94\n#5 DONE 0.0s\n\n#6 [stage-1 1/7] FROM docker.io/library/alpine:latest@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1\n#6 DONE 0.0s\n\n#7 [stage-1 2/7] WORKDIR /app\n#7 CACHED\n\n#8 [stage-1 3/7] RUN apk add --no-cache     bash     ca-certificates     git     curl     protoc     protobuf-dev\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 480.69kB 0.1s done\n#9 DONE 0.1s\n\n#10 [builder 2/5] WORKDIR /app\n#10 CACHED\n\n#11 [builder 3/5] RUN apk add --no-cache     git     curl     protoc     protobuf-dev     build-base\n#11 CACHED\n\n#12 [builder 4/5] COPY . .\n#12 DONE 0.2s\n\n#13 [builder 5/5] RUN cd tools/goctl     && go mod init github.com/zeromicro/zero/tools/goctl     && go mod tidy -v     && go mod download -v     && GOWORK=off go build -v -o /usr/local/bin/goctl goctl.go     && cd /app     && go mod tidy -v     && go mod download -v     && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n#13 0.207 go: /app/tools/goctl/go.mod already exists\n#13 ERROR: process \"/bin/sh -c cd tools/goctl     && go mod init github.com/zeromicro/zero/tools/goctl     && go mod tidy -v     && go mod download -v     && GOWORK=off go build -v -o /usr/local/bin/goctl goctl.go     && cd /app     && go mod tidy -v     && go mod download -v     && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest\" did not complete successfully: exit code: 1\n------\n > [builder 5/5] RUN cd tools/goctl     && go mod init github.com/zeromicro/zero/tools/goctl     && go mod tidy -v     && go mod download -v     && GOWORK=off go build -v -o /usr/local/bin/goctl goctl.go     && cd /app     && go mod tidy -v     && go mod download -v     && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest:\n0.207 go: /app/tools/goctl/go.mod already exists\n------\nenvgym.dockerfile:23\n--------------------\n  22 |     \n  23 | >>> RUN cd tools/goctl \\\n  24 | >>>     && go mod init github.com/zeromicro/zero/tools/goctl \\\n  25 | >>>     && go mod tidy -v \\\n  26 | >>>     && go mod download -v \\\n  27 | >>>     && GOWORK=off go build -v -o /usr/local/bin/goctl goctl.go \\\n  28 | >>>     && cd /app \\\n  29 | >>>     && go mod tidy -v \\\n  30 | >>>     && go mod download -v \\\n  31 | >>>     && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n  32 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c cd tools/goctl     && go mod init github.com/zeromicro/zero/tools/goctl     && go mod tidy -v     && go mod download -v     && GOWORK=off go build -v -o /usr/local/bin/goctl goctl.go     && cd /app     && go mod tidy -v     && go mod download -v     && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}