{
  "timestamp": "20250902_033155",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756783901",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.00kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/14] FROM docker.io/library/ubuntu:22.04@sha256:5e14404dbc9df30fef8460020b99a3c0034241283912189fd4650e446d8d6c92\n#4 DONE 0.0s\n\n#5 [ 5/14] RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.88.0\n#5 CACHED\n\n#6 [ 8/14] RUN apt-get install -y z3\n#6 CACHED\n\n#7 [ 9/14] RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64 &&     chmod +x ./kind &&     mv ./kind /usr/local/bin/kind\n#7 CACHED\n\n#8 [ 7/14] RUN pip3 install tabulate\n#8 CACHED\n\n#9 [ 3/14] RUN apt-get update && apt-get install -y     build-essential     curl     git     wget     software-properties-common     python3     python3-pip     libssl-dev     pkg-config     zlib1g-dev     ca-certificates\n#9 CACHED\n\n#10 [ 2/14] WORKDIR /anvil\n#10 CACHED\n\n#11 [ 4/14] RUN wget https://golang.org/dl/go1.20.14.linux-amd64.tar.gz &&     tar -C /usr/local -xzf go1.20.14.linux-amd64.tar.gz &&     rm go1.20.14.linux-amd64.tar.gz\n#11 CACHED\n\n#12 [ 6/14] RUN cargo install cargo-watch cargo-verify\n#12 CACHED\n\n#13 [10/14] RUN curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" &&     chmod +x kubectl &&     mv kubectl /usr/local/bin/\n#13 CACHED\n\n#14 [11/14] RUN mkdir -p /anvil/verus &&     cd /anvil/verus &&     git clone -v --recursive https://github.com/verus-lang/verus.git . &&     git fetch -v origin 3b6b805ac86cd6640d59468341055c7fa14cff07 &&     git checkout -v 3b6b805ac86cd6640d59468341055c7fa14cff07 &&     cargo build --release --verbose\n#14 0.204 Cloning into '.'...\n#14 0.360 POST git-upload-pack (175 bytes)\n#14 0.401 POST git-upload-pack (gzip 7017 to 3467 bytes)\n#14 13.00 POST git-upload-pack (102 bytes)\n#14 13.10 From https://github.com/verus-lang/verus\n#14 13.10  * branch              3b6b805ac86cd6640d59468341055c7fa14cff07 -> FETCH_HEAD\n#14 13.11 error: unknown switch `v'\n#14 13.11 usage: git checkout [<options>] <branch>\n#14 13.11    or: git checkout [<options>] [<branch>] -- <file>...\n#14 13.11 \n#14 13.11     -b <branch>           create and checkout a new branch\n#14 13.11     -B <branch>           create/reset and checkout a branch\n#14 13.11     -l                    create reflog for new branch\n#14 13.11     --guess               second guess 'git checkout <no-such-branch>' (default)\n#14 13.11     --overlay             use overlay mode (default)\n#14 13.11     -q, --quiet           suppress progress reporting\n#14 13.11     --recurse-submodules[=<checkout>]\n#14 13.11                           control recursive updating of submodules\n#14 13.11     --progress            force progress reporting\n#14 13.11     -m, --merge           perform a 3-way merge with the new branch\n#14 13.11     --conflict <style>    conflict style (merge or diff3)\n#14 13.11     -d, --detach          detach HEAD at named commit\n#14 13.11     -t, --track           set upstream info for new branch\n#14 13.11     -f, --force           force checkout (throw away local modifications)\n#14 13.11     --orphan <new-branch>\n#14 13.11                           new unparented branch\n#14 13.11     --overwrite-ignore    update ignored files (default)\n#14 13.11     --ignore-other-worktrees\n#14 13.11                           do not check if another worktree is holding the given ref\n#14 13.11     -2, --ours            checkout our version for unmerged files\n#14 13.11     -3, --theirs          checkout their version for unmerged files\n#14 13.11     -p, --patch           select hunks interactively\n#14 13.11     --ignore-skip-worktree-bits\n#14 13.11                           do not limit pathspecs to sparse entries only\n#14 13.11     --pathspec-from-file <file>\n#14 13.11                           read pathspec from file\n#14 13.11     --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character\n#14 13.11 \n#14 ERROR: process \"/bin/sh -c mkdir -p /anvil/verus &&     cd /anvil/verus &&     git clone -v --recursive https://github.com/verus-lang/verus.git . &&     git fetch -v origin ${VERUS_COMMIT} &&     git checkout -v ${VERUS_COMMIT} &&     cargo build --release --verbose\" did not complete successfully: exit code: 129\n------\n > [11/14] RUN mkdir -p /anvil/verus &&     cd /anvil/verus &&     git clone -v --recursive https://github.com/verus-lang/verus.git . &&     git fetch -v origin 3b6b805ac86cd6640d59468341055c7fa14cff07 &&     git checkout -v 3b6b805ac86cd6640d59468341055c7fa14cff07 &&     cargo build --release --verbose:\n13.11                           do not check if another worktree is holding the given ref\n13.11     -2, --ours            checkout our version for unmerged files\n13.11     -3, --theirs          checkout their version for unmerged files\n13.11     -p, --patch           select hunks interactively\n13.11     --ignore-skip-worktree-bits\n13.11                           do not limit pathspecs to sparse entries only\n13.11     --pathspec-from-file <file>\n13.11                           read pathspec from file\n13.11     --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character\n13.11 \n------\nenvgym.dockerfile:52\n--------------------\n  51 |     # Clone and build Verus with verbose logging and error handling\n  52 | >>> RUN mkdir -p /anvil/verus && \\\n  53 | >>>     cd /anvil/verus && \\\n  54 | >>>     git clone -v --recursive https://github.com/verus-lang/verus.git . && \\\n  55 | >>>     git fetch -v origin ${VERUS_COMMIT} && \\\n  56 | >>>     git checkout -v ${VERUS_COMMIT} && \\\n  57 | >>>     cargo build --release --verbose\n  58 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c mkdir -p /anvil/verus &&     cd /anvil/verus &&     git clone -v --recursive https://github.com/verus-lang/verus.git . &&     git fetch -v origin ${VERUS_COMMIT} &&     git checkout -v ${VERUS_COMMIT} &&     cargo build --release --verbose\" did not complete successfully: exit code: 129\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}