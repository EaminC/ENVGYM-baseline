{
  "timestamp": "20250827_221835",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756333103",
  "build": {
    "success": true,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.95kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/18] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [ 3/18] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.88.0\n#5 CACHED\n\n#6 [ 4/18] RUN rustup toolchain install beta\n#6 CACHED\n\n#7 [ 6/18] RUN rustup target add x86_64-unknown-linux-musl\n#7 CACHED\n\n#8 [11/18] RUN cargo install ripgrep\n#8 CACHED\n\n#9 [14/18] RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg     && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null     && apt update     && apt install gh -y\n#9 CACHED\n\n#10 [10/18] RUN cargo install cargo-deb\n#10 CACHED\n\n#11 [ 7/18] RUN rustup target add x86_64-pc-windows-gnu\n#11 CACHED\n\n#12 [ 9/18] RUN cargo install cross --version 0.2.5\n#12 CACHED\n\n#13 [ 2/18] RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y     curl     git     build-essential     musl-tools     musl-dev     pkg-config     zlib1g-dev     liblzma-dev     xz-utils     liblz4-tool     brotli     zstd     make     gcc     diffutils     zsh     jq     wget     unzip     automake     autoconf     libtool     libpcre3-dev     libpcre2-dev     libpcre3     pcre2-utils     libpcre++-dev     libpcre3-dbg     && rm -rf /var/lib/apt/lists/*\n#13 CACHED\n\n#14 [13/18] RUN wget https://github.com/ggreer/the_silver_searcher/archive/2.2.0.tar.gz     && tar xzf 2.2.0.tar.gz     && cd the_silver_searcher-2.2.0     && ./autogen.sh     && ./configure --disable-dependency-tracking     && make     && make install     && cd ..     && rm -rf the_silver_searcher-2.2.0 2.2.0.tar.gz || true\n#14 CACHED\n\n#15 [12/18] RUN wget https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep-13.0.0-x86_64-unknown-linux-musl.tar.gz     && tar xf ripgrep-13.0.0-x86_64-unknown-linux-musl.tar.gz     && cp ripgrep-13.0.0-x86_64-unknown-linux-musl/rg /usr/local/bin/     && rm -rf ripgrep-13.0.0*\n#15 CACHED\n\n#16 [ 5/18] RUN rustup toolchain install nightly\n#16 CACHED\n\n#17 [ 8/18] RUN rustup target add x86_64-pc-windows-msvc\n#17 CACHED\n\n#18 [15/18] RUN mkdir -p /root/.config/ripgrep     && echo \"--color=auto\\n--hidden\\n--follow\" > /root/.config/ripgrep/ripgrep.conf     && touch /root/.ignore     && touch .rgignore\n#18 CACHED\n\n#19 [16/18] RUN mkdir -p .github/workflows     && mkdir -p deployment/deb     && mkdir -p deployment/m2/complete     && mkdir -p deployment/m2/doc     && mkdir -p crates/core/flags/complete     && mkdir -p ci     && mkdir -p /tmp/benchsuite     && mkdir -p benchsuite/runs     && mkdir -p .cargo\n#19 DONE 0.3s\n\n#20 [17/18] RUN touch .cargo/config.toml     && touch COPYING LICENSE-MIT UNLICENSE     && touch CHANGELOG.md README.md     && touch ci/ubuntu-install-packages     && touch ci/build-and-publish-m2     && touch ci/test-complete     && touch crates/core/flags/complete/rg.zsh     && touch ci/utils.sh     && touch benchsuite/benchsuite     && touch benchsuite/runs/raw.csv\n#20 DONE 0.4s\n\n#21 [18/18] WORKDIR /root/ripgrep\n#21 DONE 0.0s\n\n#22 exporting to image\n#22 exporting layers\n#22 exporting layers 10.5s done\n#22 writing image sha256:71d5eb69555cdbdb7cfb2875a62343fc17c9ff0c0f50b9ab1e6aed60c41a60da done\n#22 naming to docker.io/library/envgym_test_1756333103 done\n#22 DONE 10.5s\n"
  },
  "run": {
    "success": true,
    "stdout": "",
    "stderr": ""
  }
}