{
  "timestamp": "20250828_192430",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756409069",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.18kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/debian:stable-slim\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/debian:stable-slim@sha256:8810492a2dd16b7f59239c1e0cc1e56c1a1a5957d11f639776bd6798e795608b\n#4 DONE 0.0s\n\n#5 [ 2/10] WORKDIR /home/cc/EnvGym\n#5 CACHED\n\n#6 [ 3/10] RUN apt-get update &&     apt-get install -y     build-essential     cmake     git     libsystemd-dev     pkg-config     python3     python3-pip     python3-venv     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [internal] load build context\n#7 transferring context: 251.05kB 0.0s done\n#7 DONE 0.0s\n\n#8 [ 4/10] RUN python3 -c \"import urllib.request; urllib.request.urlopen('https://pypi.org')\" || (echo \"Network connectivity check failed\" && exit 1)\n#8 DONE 0.3s\n\n#9 [ 5/10] RUN python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --retries 5 ||     python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100\n#9 0.532 error: externally-managed-environment\n#9 0.532 \n#9 0.532 × This environment is externally managed\n#9 0.532 ╰─> To install Python packages system-wide, try apt install\n#9 0.532     python3-xyz, where xyz is the package you are trying to\n#9 0.532     install.\n#9 0.532     \n#9 0.532     If you wish to install a non-Debian-packaged Python package,\n#9 0.532     create a virtual environment using python3 -m venv path/to/venv.\n#9 0.532     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#9 0.532     sure you have python3-full installed.\n#9 0.532     \n#9 0.532     If you wish to install a non-Debian packaged Python application,\n#9 0.532     it may be easiest to use pipx install xyz, which will manage a\n#9 0.532     virtual environment for you. Make sure you have pipx installed.\n#9 0.532     \n#9 0.532     See /usr/share/doc/python3.13/README.venv for more information.\n#9 0.532 \n#9 0.532 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#9 0.532 hint: See PEP 668 for the detailed specification.\n#9 0.765 error: externally-managed-environment\n#9 0.765 \n#9 0.765 × This environment is externally managed\n#9 0.765 ╰─> To install Python packages system-wide, try apt install\n#9 0.765     python3-xyz, where xyz is the package you are trying to\n#9 0.765     install.\n#9 0.765     \n#9 0.765     If you wish to install a non-Debian-packaged Python package,\n#9 0.765     create a virtual environment using python3 -m venv path/to/venv.\n#9 0.765     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#9 0.765     sure you have python3-full installed.\n#9 0.765     \n#9 0.765     If you wish to install a non-Debian packaged Python application,\n#9 0.765     it may be easiest to use pipx install xyz, which will manage a\n#9 0.765     virtual environment for you. Make sure you have pipx installed.\n#9 0.765     \n#9 0.765     See /usr/share/doc/python3.13/README.venv for more information.\n#9 0.765 \n#9 0.765 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#9 0.765 hint: See PEP 668 for the detailed specification.\n#9 ERROR: process \"/bin/sh -c python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --retries 5 ||     python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100\" did not complete successfully: exit code: 1\n------\n > [ 5/10] RUN python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --retries 5 ||     python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100:\n0.765     sure you have python3-full installed.\n0.765     \n0.765     If you wish to install a non-Debian packaged Python application,\n0.765     it may be easiest to use pipx install xyz, which will manage a\n0.765     virtual environment for you. Make sure you have pipx installed.\n0.765     \n0.765     See /usr/share/doc/python3.13/README.venv for more information.\n0.765 \n0.765 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n0.765 hint: See PEP 668 for the detailed specification.\n------\nenvgym.dockerfile:19\n--------------------\n  18 |     \n  19 | >>> RUN python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --retries 5 || \\\n  20 | >>>     python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100\n  21 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --retries 5 ||     python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}