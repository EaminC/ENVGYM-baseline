{
  "timestamp": "20250828_192540",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756409138",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.22kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/debian:stable-slim\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [1/9] FROM docker.io/library/debian:stable-slim@sha256:8810492a2dd16b7f59239c1e0cc1e56c1a1a5957d11f639776bd6798e795608b\n#4 DONE 0.0s\n\n#5 [2/9] WORKDIR /home/cc/EnvGym\n#5 CACHED\n\n#6 [3/9] RUN apt-get update &&     apt-get install -y     build-essential     cmake     git     libsystemd-dev     pkg-config     python3     python3-pip     python3-venv     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [4/9] RUN python3 -c \"import urllib.request; urllib.request.urlopen('https://pypi.org')\" || (echo \"Network connectivity check failed\" && exit 1)\n#7 CACHED\n\n#8 [internal] load build context\n#8 transferring context: 294.79kB 0.0s done\n#8 DONE 0.0s\n\n#9 [5/9] RUN python3 -m pip install --upgrade pip --no-cache-dir --default-timeout=100 --verbose 2>&1 | tee pip-upgrade.log &&     python3 -m pip install --upgrade setuptools wheel --no-cache-dir --default-timeout=100 --verbose 2>&1 | tee setuptools-install.log ||     (echo \"Pip installation failed, check pip-upgrade.log and setuptools-install.log\" && exit 1)\n#9 0.428 error: externally-managed-environment\n#9 0.428 \n#9 0.428 × This environment is externally managed\n#9 0.428 ╰─> To install Python packages system-wide, try apt install\n#9 0.428     python3-xyz, where xyz is the package you are trying to\n#9 0.428     install.\n#9 0.428     \n#9 0.428     If you wish to install a non-Debian-packaged Python package,\n#9 0.428     create a virtual environment using python3 -m venv path/to/venv.\n#9 0.428     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#9 0.428     sure you have python3-full installed.\n#9 0.428     \n#9 0.428     If you wish to install a non-Debian packaged Python application,\n#9 0.428     it may be easiest to use pipx install xyz, which will manage a\n#9 0.428     virtual environment for you. Make sure you have pipx installed.\n#9 0.428     \n#9 0.428     See /usr/share/doc/python3.13/README.venv for more information.\n#9 0.428 \n#9 0.428 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#9 0.428 hint: See PEP 668 for the detailed specification.\n#9 0.661 error: externally-managed-environment\n#9 0.661 \n#9 0.661 × This environment is externally managed\n#9 0.661 ╰─> To install Python packages system-wide, try apt install\n#9 0.661     python3-xyz, where xyz is the package you are trying to\n#9 0.661     install.\n#9 0.661     \n#9 0.661     If you wish to install a non-Debian-packaged Python package,\n#9 0.661     create a virtual environment using python3 -m venv path/to/venv.\n#9 0.661     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#9 0.661     sure you have python3-full installed.\n#9 0.661     \n#9 0.661     If you wish to install a non-Debian packaged Python application,\n#9 0.661     it may be easiest to use pipx install xyz, which will manage a\n#9 0.661     virtual environment for you. Make sure you have pipx installed.\n#9 0.661     \n#9 0.661     See /usr/share/doc/python3.13/README.venv for more information.\n#9 0.661 \n#9 0.661 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#9 0.661 hint: See PEP 668 for the detailed specification.\n#9 DONE 0.7s\n\n#10 [6/9] COPY . .\n#10 DONE 0.1s\n\n#11 [7/9] RUN python3 -m pip install --no-cache-dir --verbose -r requirements.txt --default-timeout=100 2>&1 | tee requirements-install.log ||     (echo \"Requirements installation failed, check requirements-install.log\" && exit 1)\n#11 0.450 error: externally-managed-environment\n#11 0.450 \n#11 0.450 × This environment is externally managed\n#11 0.450 ╰─> To install Python packages system-wide, try apt install\n#11 0.450     python3-xyz, where xyz is the package you are trying to\n#11 0.450     install.\n#11 0.450     \n#11 0.450     If you wish to install a non-Debian-packaged Python package,\n#11 0.450     create a virtual environment using python3 -m venv path/to/venv.\n#11 0.450     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#11 0.450     sure you have python3-full installed.\n#11 0.450     \n#11 0.450     If you wish to install a non-Debian packaged Python application,\n#11 0.450     it may be easiest to use pipx install xyz, which will manage a\n#11 0.450     virtual environment for you. Make sure you have pipx installed.\n#11 0.450     \n#11 0.450     See /usr/share/doc/python3.13/README.venv for more information.\n#11 0.450 \n#11 0.450 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#11 0.450 hint: See PEP 668 for the detailed specification.\n#11 DONE 0.5s\n\n#12 [8/9] RUN mkdir -p build &&     cd build &&     cmake .. &&     make &&     make install ||     (echo \"Build failed\" && exit 1)\n#12 0.322 CMake Warning:\n#12 0.322   Ignoring extra path from command line:\n#12 0.322 \n#12 0.322    \"..\"\n#12 0.322 \n#12 0.322 \n#12 0.322 CMake Error: The source directory \"/home/cc/EnvGym\" does not appear to contain CMakeLists.txt.\n#12 0.322 Specify --help for usage, or press the help button on the CMake GUI.\n#12 0.323 Build failed\n#12 ERROR: process \"/bin/sh -c mkdir -p build &&     cd build &&     cmake .. &&     make &&     make install ||     (echo \\\"Build failed\\\" && exit 1)\" did not complete successfully: exit code: 1\n------\n > [8/9] RUN mkdir -p build &&     cd build &&     cmake .. &&     make &&     make install ||     (echo \"Build failed\" && exit 1):\n0.322 CMake Warning:\n0.322   Ignoring extra path from command line:\n0.322 \n0.322    \"..\"\n0.322 \n0.322 \n0.322 CMake Error: The source directory \"/home/cc/EnvGym\" does not appear to contain CMakeLists.txt.\n0.322 Specify --help for usage, or press the help button on the CMake GUI.\n0.323 Build failed\n------\nenvgym.dockerfile:28\n--------------------\n  27 |     \n  28 | >>> RUN mkdir -p build && \\\n  29 | >>>     cd build && \\\n  30 | >>>     cmake .. && \\\n  31 | >>>     make && \\\n  32 | >>>     make install || \\\n  33 | >>>     (echo \"Build failed\" && exit 1)\n  34 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c mkdir -p build &&     cd build &&     cmake .. &&     make &&     make install ||     (echo \\\"Build failed\\\" && exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}