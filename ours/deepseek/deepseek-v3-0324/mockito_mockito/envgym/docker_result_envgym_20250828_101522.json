{
  "timestamp": "20250828_101522",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756376122",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.47kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [ 3/10] RUN update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/java-11-openjdk-amd64/bin/java\" 1     && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/java-11-openjdk-amd64/bin/javac\" 1     && update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java     && update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac\n#5 CACHED\n\n#6 [ 4/10] RUN mkdir -p /usr/local/android-sdk/cmdline-tools     && wget -q --tries=3 --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/android-sdk.zip     && unzip -q -d /usr/local/android-sdk/cmdline-tools /tmp/android-sdk.zip     && mv /usr/local/android-sdk/cmdline-tools/cmdline-tools /usr/local/android-sdk/cmdline-tools/latest     && rm /tmp/android-sdk.zip     && yes | /usr/local/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \"platform-tools\" \"platforms;android-33\" \"platforms;android-26\"     && /usr/local/android-sdk/cmdline-tools/latest/bin/sdkmanager --update\n#6 CACHED\n\n#7 [ 2/10] RUN apt-get update && apt-get install -y     openjdk-11-jdk     openjdk-17-jdk     openjdk-21-jdk     wget     unzip     git     curl     qemu-kvm     libvirt-daemon-system     libvirt-clients     bridge-utils     virt-manager     build-essential     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     libsqlite3-dev     && rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [ 5/10] RUN wget -q --tries=3 https://services.gradle.org/distributions/gradle-8.14.2-bin.zip -O /tmp/gradle.zip     && unzip -q /tmp/gradle.zip -d /usr/local     && ln -s /usr/local/gradle-8.14.2/bin/gradle /usr/bin/gradle     && rm /tmp/gradle.zip\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 1.30MB 0.1s done\n#9 DONE 0.1s\n\n#10 [ 6/10] RUN usermod -aG kvm root     && chown root:kvm /dev/kvm     && chmod 660 /dev/kvm\n#10 0.233 chown: cannot access '/dev/kvm': No such file or directory\n#10 ERROR: process \"/bin/sh -c usermod -aG kvm root     && chown root:kvm /dev/kvm     && chmod 660 /dev/kvm\" did not complete successfully: exit code: 1\n------\n > [ 6/10] RUN usermod -aG kvm root     && chown root:kvm /dev/kvm     && chmod 660 /dev/kvm:\n0.233 chown: cannot access '/dev/kvm': No such file or directory\n------\nenvgym.dockerfile:51\n--------------------\n  50 |     \n  51 | >>> RUN usermod -aG kvm root \\\n  52 | >>>     && chown root:kvm /dev/kvm \\\n  53 | >>>     && chmod 660 /dev/kvm\n  54 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c usermod -aG kvm root     && chown root:kvm /dev/kvm     && chmod 660 /dev/kvm\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}