{
  "timestamp": "20250829_172032",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756488030",
  "build": {
    "success": true,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 584B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/golang:1.20\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/golang:1.20@sha256:8f9af7094d0cb27cc783c697ac5ba25efdc4da35f8526db21f7aebb0b0b4f18a\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 308.19kB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 5/10] RUN head go.mod\n#6 CACHED\n\n#7 [ 7/10] RUN command -v curl >/dev/null && curl -I https://proxy.golang.org || echo \"Skipping network check\"\n#7 CACHED\n\n#8 [ 2/10] WORKDIR /app\n#8 CACHED\n\n#9 [ 3/10] COPY go.mod go.sum ./\n#9 CACHED\n\n#10 [ 4/10] RUN ls -lA\n#10 CACHED\n\n#11 [ 6/10] RUN head go.sum\n#11 CACHED\n\n#12 [ 8/10] RUN go mod download -x 2>&1 | tee /tmp/log1 || (go mod download -x 2>&1 | tee /tmp/log2; cat /tmp/log1 /tmp/log2; exit 1)\n#12 CACHED\n\n#13 [ 9/10] COPY . .\n#13 DONE 0.4s\n\n#14 [10/10] RUN go install -v -x ./... 2>&1 | tee /tmp/install.log || (cat /tmp/install.log; exit 1)\n#14 0.254 go: errors parsing go.mod:\n#14 0.254 /app/go.mod:3: invalid go version '1.24.0': must match format 1.23\n#14 0.254 /app/go.mod:5: unknown directive: toolchain\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 0.6s done\n#15 writing image sha256:88d515bab413a04b29f3948ef4e7927619a30c33aef2d50b6e34099d24fa73c9 done\n#15 naming to docker.io/library/envgym_test_1756488030 done\n#15 DONE 0.6s\n"
  },
  "run": {
    "success": true,
    "stdout": "",
    "stderr": ""
  }
}