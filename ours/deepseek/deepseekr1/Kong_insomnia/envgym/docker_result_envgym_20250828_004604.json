{
  "timestamp": "20250828_004604",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756341964",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.09kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 99B done\n#3 DONE 0.0s\n\n#4 [1/9] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 209.58kB 0.1s done\n#5 DONE 0.1s\n\n#6 [3/9] RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n#6 CACHED\n\n#7 [4/9] WORKDIR /workspace\n#7 CACHED\n\n#8 [2/9] RUN apt-get update && apt-get install -y     curl     git     libfontconfig-dev     && rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [5/9] COPY .nvmrc .\n#9 CACHED\n\n#10 [6/9] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install $(tr -d '\\n' < .nvmrc) &&     nvm use $(tr -d '\\n' < .nvmrc)\"\n#10 ERROR: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install $(tr -d '\\\\n' < .nvmrc) &&     nvm use $(tr -d '\\\\n' < .nvmrc)\\\"\" did not complete successfully: exit code: 3\n------\n > [6/9] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install $(tr -d '\\n' < .nvmrc) &&     nvm use $(tr -d '\\n' < .nvmrc)\":\n------\nenvgym.dockerfile:25\n--------------------\n  24 |     # Install Node.js using nvm with explicit version\n  25 | >>> RUN /bin/bash -c \"source $NVM_DIR/nvm.sh && \\\n  26 | >>>     nvm install $(tr -d '\\n' < .nvmrc) && \\\n  27 | >>>     nvm use $(tr -d '\\n' < .nvmrc)\"\n  28 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install $(tr -d '\\\\n' < .nvmrc) &&     nvm use $(tr -d '\\\\n' < .nvmrc)\\\"\" did not complete successfully: exit code: 3\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}