{
  "timestamp": "20250829_181501",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756491299",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.48kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.3s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/24] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [ 8/24] RUN mkdir -p tests && echo '{\"type\":\"module\"}' > tests/package.json && jq . tests/package.json\n#5 CACHED\n\n#6 [12/24] RUN npm install --jobs=96 --ignore-scripts && [ -d \"node_modules\" ] && echo \"Success\"\n#6 CACHED\n\n#7 [ 6/24] RUN git clone https://github.com/darkreader/darkreader.git .\n#7 CACHED\n\n#8 [13/24] RUN npm run test:unit\n#8 CACHED\n\n#9 [ 4/24] RUN curl -fsSL https://deno.land/install.sh | sh\n#9 CACHED\n\n#10 [ 2/24] RUN apt-get update &&     apt-get install -y --no-install-recommends     git     curl     ca-certificates     gnupg     lsb-release     software-properties-common     openjdk-17-jre     chromium-browser     firefox     jq     unzip     xdg-utils     xvfb     python3     &&     rm -rf /var/lib/apt/lists/*\n#10 CACHED\n\n#11 [ 7/24] RUN mkdir -p tasks && echo '{\"type\":\"module\"}' > tasks/package.json && jq . tasks/package.json\n#11 CACHED\n\n#12 [11/24] RUN mkdir -p test/website && cat > test/website/index.html <<'EOF'\n#12 CACHED\n\n#13 [ 5/24] WORKDIR /darkreader\n#13 CACHED\n\n#14 [ 9/24] RUN echo '\"lts/*\"' > .nvmrc\n#14 CACHED\n\n#15 [ 3/24] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - &&     apt-get install -y nodejs\n#15 CACHED\n\n#16 [10/24] RUN touch .env\n#16 CACHED\n\n#17 [14/24] RUN mkdir -p /root/.mozilla/firefox &&     echo -e '[Profile0]\\nName=default\\nIsRelative=1\\nPath=default-release\\n\\n[General]\\nStartWithLastProfile=1\\nVersion=2' > /root/.mozilla/firefox/profiles.ini &&     mkdir -p /root/.mozilla/firefox/default-release &&     echo -e 'user_pref(\"extensions.webextensions.restrictedDomains\", \"\");\\nuser_pref(\"privacy.resistFingerprinting.block_mozAddonManager\", true);' >> /root/.mozilla/firefox/default-release/prefs.js\n#17 CACHED\n\n#18 [15/24] RUN echo \"Testing xvfb-run availability...\" && /usr/bin/xvfb-run --help\n#18 0.224 Testing xvfb-run availability...\n#18 0.229 Usage: xvfb-run [OPTION ...] COMMAND\n#18 0.229 Run COMMAND (usually an X client) in a virtual X server environment.\n#18 0.229 Options:\n#18 0.229 -a        --auto-servernum          try to get a free server number, starting at\n#18 0.229                                     --server-num\n#18 0.229 -e FILE   --error-file=FILE         file used to store xauth errors and Xvfb\n#18 0.229                                     output (default: /dev/null)\n#18 0.229 -f FILE   --auth-file=FILE          file used to store auth cookie\n#18 0.229                                     (default: ./.Xauthority)\n#18 0.229 -h        --help                    display this usage message and exit\n#18 0.229 -n NUM    --server-num=NUM          server number to use (default: 99)\n#18 0.229 -l        --listen-tcp              enable TCP port listening in the X server\n#18 0.229 -p PROTO  --xauth-protocol=PROTO    X authority protocol name to use\n#18 0.229                                     (default: xauth command's default)\n#18 0.229 -s ARGS   --server-args=ARGS        arguments (other than server number and\n#18 0.229                                     \"-nolisten tcp\") to pass to the Xvfb server\n#18 0.229                                     (default: \"-screen 0 1280x1024x24\")\n#18 DONE 0.3s\n\n#19 [16/24] RUN echo \"Testing npm availability...\" && /usr/bin/npm --version\n#19 0.321 Testing npm availability...\n#19 0.403 10.8.2\n#19 DONE 0.5s\n\n#20 [17/24] RUN echo \"Testing browser binaries...\" && /usr/bin/firefox --version && /usr/bin/chromium-browser --version\n#20 0.336 Testing browser binaries...\n#20 0.337 \n#20 0.337 Command '/usr/bin/firefox' requires the firefox snap to be installed.\n#20 0.337 Please install it with:\n#20 0.337 \n#20 0.337 snap install firefox\n#20 0.337 \n#20 ERROR: process \"/bin/sh -c echo \\\"Testing browser binaries...\\\" && /usr/bin/firefox --version && /usr/bin/chromium-browser --version\" did not complete successfully: exit code: 1\n------\n > [17/24] RUN echo \"Testing browser binaries...\" && /usr/bin/firefox --version && /usr/bin/chromium-browser --version:\n0.336 Testing browser binaries...\n0.337 \n0.337 Command '/usr/bin/firefox' requires the firefox snap to be installed.\n0.337 Please install it with:\n0.337 \n0.337 snap install firefox\n0.337 \n------\nenvgym.dockerfile:51\n--------------------\n  49 |     RUN echo \"Testing xvfb-run availability...\" && /usr/bin/xvfb-run --help\n  50 |     RUN echo \"Testing npm availability...\" && /usr/bin/npm --version\n  51 | >>> RUN echo \"Testing browser binaries...\" && /usr/bin/firefox --version && /usr/bin/chromium-browser --version\n  52 |     RUN /usr/bin/xvfb-run -a --server-args='-screen 0 1024x768x24' TEST_WORKERS=4 /usr/bin/npm run test:browser\n  53 |     RUN npm run test:inject\n--------------------\nERROR: failed to solve: process \"/bin/sh -c echo \\\"Testing browser binaries...\\\" && /usr/bin/firefox --version && /usr/bin/chromium-browser --version\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}