=== Docker Execution Log - 20250831_122137 ===
Dockerfile: envgym/envgym.dockerfile
Image Name: envgym_test_1756642848

=== Build Log ===
Build Status: Success
Build Output:


Build Error:
#0 building with "default" instance using docker driver

#1 [internal] load build definition from envgym.dockerfile
#1 transferring dockerfile: 1.17kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [ 1/11] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 259.30kB 0.0s done
#5 DONE 0.0s

#6 [ 2/11] WORKDIR /home/cc/EnvGym/data/tokio-rs_bytes
#6 CACHED

#7 [ 3/11] RUN apt-get update &&     apt-get install -y git     gcc-i686-linux-gnu     gcc-arm-linux-gnueabihf     gcc-powerpc-linux-gnu     gcc-powerpc64-linux-gnu     curl     build-essential
#7 CACHED

#8 [ 4/11] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
#8 CACHED

#9 [ 5/11] RUN rustup toolchain install nightly-2024-09-15 &&     rustup target add thumbv6m-none-eabi thumbv7m-none-eabi wasm32-unknown-unknown i686-unknown-linux-gnu armv7-unknown-linux-gnueabihf powerpc-unknown-linux-gnu powerpc64-unknown-linux-gnu wasm32-wasip1
#9 CACHED

#10 [ 6/11] COPY . .
#10 DONE 0.0s

#11 [ 7/11] RUN if [ ! -f Cargo.toml ]; then     echo '[dependencies]' > Cargo.toml &&     echo 'bytes = { version = "1.10.1", default-features = false }' >> Cargo.toml;     fi
#11 DONE 0.3s

#12 [ 8/11] RUN mkdir -p src &&     if [ ! -f src/main.rs ]; then     echo 'use bytes::{Bytes, BytesMut, Buf, BufMut};' > src/main.rs;     fi
#12 DONE 0.4s

#13 [ 9/11] RUN cargo install cargo-hack
#13 0.392     Updating crates.io index
#13 0.468  Downloading crates ...
#13 0.576   Downloaded cargo-hack v0.6.37
#13 0.606   Installing cargo-hack v0.6.37
#13 0.636     Updating crates.io index
#13 1.011      Locking 53 packages to latest compatible versions
#13 1.022  Downloading crates ...
#13 1.080   Downloaded toml_writer v1.0.2
#13 1.084   Downloaded equivalent v1.0.2
#13 1.086   Downloaded anyhow v1.0.99
#13 1.091   Downloaded cfg_aliases v0.2.1
#13 1.092   Downloaded ctrlc v3.4.7
#13 1.095   Downloaded bitflags v2.9.3
#13 1.099   Downloaded toml_datetime v0.7.0
#13 1.100   Downloaded itoa v1.0.15
#13 1.101   Downloaded same-file v1.0.6
#13 1.102   Downloaded termcolor v1.4.1
#13 1.103   Downloaded serde_spanned v1.0.0
#13 1.104   Downloaded cfg-if v1.0.3
#13 1.106   Downloaded lexopt v0.3.1
#13 1.110   Downloaded toml_parser v1.0.2
#13 1.112   Downloaded quote v1.0.40
#13 1.118   Downloaded ryu v1.0.20
#13 1.121   Downloaded proc-macro2 v1.0.101
#13 1.124   Downloaded hashbrown v0.15.5
#13 1.130   Downloaded unicode-ident v1.0.18
#13 1.133   Downloaded toml v0.9.5
#13 1.139   Downloaded cargo-config2 v0.1.35
#13 1.145   Downloaded serde_derive v1.0.219
#13 1.148   Downloaded toml_edit v0.23.4
#13 1.151   Downloaded serde v1.0.219
#13 1.154   Downloaded indexmap v2.11.0
#13 1.166   Downloaded memchr v2.7.5
#13 1.196   Downloaded serde_json v1.0.143
#13 1.216   Downloaded winnow v0.7.13
#13 1.249   Downloaded syn v2.0.106
#13 1.272   Downloaded nix v0.30.1
#13 1.329   Downloaded libc v0.2.175
#13 1.375    Compiling serde v1.0.219
#13 1.375    Compiling proc-macro2 v1.0.101
#13 1.375    Compiling unicode-ident v1.0.18
#13 1.375    Compiling libc v0.2.175
#13 1.375    Compiling cfg_aliases v0.2.1
#13 1.375    Compiling winnow v0.7.13
#13 1.375    Compiling hashbrown v0.15.5
#13 1.375    Compiling equivalent v1.0.2
#13 1.375    Compiling bitflags v2.9.3
#13 1.375    Compiling cfg-if v1.0.3
#13 1.377    Compiling anyhow v1.0.99
#13 1.378    Compiling serde_json v1.0.143
#13 1.378    Compiling memchr v2.7.5
#13 1.380    Compiling itoa v1.0.15
#13 1.382    Compiling ryu v1.0.20
#13 1.385    Compiling toml_writer v1.0.2
#13 1.388    Compiling termcolor v1.4.1
#13 1.391    Compiling same-file v1.0.6
#13 1.391    Compiling lexopt v0.3.1
#13 1.420    Compiling nix v0.30.1
#13 1.898    Compiling indexmap v2.11.0
#13 1.963    Compiling quote v1.0.40
#13 2.082    Compiling syn v2.0.106
#13 2.809    Compiling toml_parser v1.0.2
#13 3.372    Compiling serde_derive v1.0.219
#13 3.569    Compiling toml_datetime v0.7.0
#13 3.569    Compiling serde_spanned v1.0.0
#13 3.724    Compiling toml v0.9.5
#13 3.724    Compiling toml_edit v0.23.4
#13 3.798    Compiling ctrlc v3.4.7
#13 5.057    Compiling cargo-config2 v0.1.35
#13 13.91    Compiling cargo-hack v0.6.37
#13 32.88     Finished `release` profile [optimized] target(s) in 32.51s
#13 32.90   Installing /root/.cargo/bin/cargo-hack
#13 32.90    Installed package `cargo-hack v0.6.37` (executable `cargo-hack`)
#13 DONE 33.0s

#14 [10/11] RUN cargo build --verbose 2>&1 | tee build.log || { cat build.log; exit 1; }
#14 0.355     Updating crates.io index
#14 0.563      Locking 55 packages to latest compatible versions
#14 0.609    Compiling bytes v1.10.1 (/home/cc/EnvGym/data/tokio-rs_bytes)
#14 0.609      Running `/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "extra-platforms", "serde", "std"))' -C metadata=fb05704f97f0389b -C extra-filename=-9a31ee18cc68bcaf --out-dir /home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps`
#14 1.104      Running `/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "extra-platforms", "serde", "std"))' -C metadata=0f8502e4a356aeca -C extra-filename=-aa1f6d108491a16b --out-dir /home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps --extern bytes=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps/libbytes-9a31ee18cc68bcaf.rlib`
#14 1.135 warning: unused imports: `BufMut`, `Buf`, `BytesMut`, and `Bytes`
#14 1.135  --> src/main.rs:1:13
#14 1.135   |
#14 1.135 1 | use bytes::{Bytes, BytesMut, Buf, BufMut};
#14 1.135   |             ^^^^^  ^^^^^^^^  ^^^  ^^^^^^
#14 1.135   |
#14 1.135   = note: `#[warn(unused_imports)]` on by default
#14 1.135 
#14 1.135 error[E0601]: `main` function not found in crate `bytes`
#14 1.135  --> src/main.rs:1:43
#14 1.135   |
#14 1.135 1 | use bytes::{Bytes, BytesMut, Buf, BufMut};
#14 1.135   |                                           ^ consider adding a `main` function to `src/main.rs`
#14 1.135 
#14 1.135 For more information about this error, try `rustc --explain E0601`.
#14 1.139 warning: `bytes` (bin "bytes") generated 1 warning
#14 1.139 error: could not compile `bytes` (bin "bytes") due to 1 previous error; 1 warning emitted
#14 1.139 
#14 1.139 Caused by:
#14 1.139   process didn't exit successfully: `/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "extra-platforms", "serde", "std"))' -C metadata=0f8502e4a356aeca -C extra-filename=-aa1f6d108491a16b --out-dir /home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps --extern bytes=/home/cc/EnvGym/data/tokio-rs_bytes/target/debug/deps/libbytes-9a31ee18cc68bcaf.rlib` (exit status: 1)
#14 DONE 1.2s

#15 [11/11] RUN cargo clean &&     rm -rf target/*/release
#15 0.341      Removed 79 files, 14.6MiB total
#15 DONE 0.4s

#16 exporting to image
#16 exporting layers
#16 exporting layers 13.1s done
#16 writing image sha256:3feef5eebc81c2342dd34fbd79c74ae81fae00158b9598d4f97e72de93460805 done
#16 naming to docker.io/library/envgym_test_1756642848 done
#16 DONE 13.1s


=== Runtime Log ===  
Runtime Status: Success
Runtime Output:


Runtime Error:


=== Execution End ===

