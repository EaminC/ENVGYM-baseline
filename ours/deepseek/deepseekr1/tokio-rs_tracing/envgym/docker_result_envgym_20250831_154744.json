{
  "timestamp": "20250831_154744",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756655253",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.40kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.2s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/rust:latest\n#5 DONE 0.2s\n\n#6 [stage-0  1/14] FROM docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf\n#6 resolve docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf done\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 2.91MB 0.1s done\n#7 DONE 0.1s\n\n#8 [stage-0  2/14] RUN apt-get update &&     apt-get install -y pkg-config libssl-dev chromium &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [stage-0  3/14] RUN --mount=type=cache,target=/usr/local/cargo/registry     rustup component add rustfmt clippy &&     rustup target add wasm32-unknown-unknown &&     rustup toolchain install nightly &&     cargo install cargo-hack cargo-minimal-versions wasm-pack cargo-nextest\n#9 CACHED\n\n#10 [stage-0  4/14] WORKDIR /workspace\n#10 CACHED\n\n#11 [stage-0  5/14] COPY . .\n#11 DONE 0.1s\n\n#12 [stage-0  6/14] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo build --workspace\n#12 0.250 + cargo build --workspace\n#12 0.312     Updating crates.io index\n#12 1.083      Locking 332 packages to latest compatible versions\n#12 1.085       Adding ahash v0.7.8 (available: v0.8.12)\n#12 1.109       Adding criterion v0.3.6 (available: v0.7.0)\n#12 1.111       Adding crossterm v0.28.1 (available: v0.29.0)\n#12 1.117       Adding futures v0.1.31 (available: v0.3.31)\n#12 1.124       Adding http v0.2.12 (available: v1.3.1)\n#12 1.131       Adding hyper v0.14.32 (available: v1.7.0)\n#12 1.134       Adding inferno v0.11.21 (available: v0.12.3)\n#12 1.140       Adding lru v0.7.8 (available: v0.16.0)\n#12 1.142       Adding mio v0.6.23 (available: v1.0.4)\n#12 1.152       Adding rand v0.7.3 (available: v0.9.2)\n#12 1.183       Adding snafu v0.6.10 (available: v0.8.8)\n#12 1.195       Adding tokio v0.1.22 (available: v1.47.1)\n#12 1.200       Adding tower v0.4.13 (available: v0.5.2)\n#12 1.202       Adding unicode-width v0.2.0 (available: v0.2.1)\n#12 1.307     Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.00s\n#12 DONE 1.4s\n\n#13 [stage-0  7/14] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo test --workspace -- --nocapture\n#13 0.389 + cargo test --workspace -- --nocapture\n#13 0.596     Finished `test` profile [unoptimized + debuginfo] target(s) in 0.15s\n#13 0.622      Running unittests src/lib.rs (target/debug/deps/tracing-923b47c8b5a17290)\n#13 0.624 \n#13 0.624 running 1 test\n#13 0.624 test span::test::test_record_backwards_compat ... ok\n#13 0.624 \n#13 0.624 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.624 \n#13 0.625      Running tests/enabled.rs (target/debug/deps/enabled-bd0f7fa6f9ef314d)\n#13 0.627 \n#13 0.627 running 2 tests\n#13 0.627 [level_and_target] register_callsite: Metadata {\n#13 0.627     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.627     target: \"debug_module\",\n#13 0.627     level: Level(\n#13 0.627         Debug,\n#13 0.627     ),\n#13 0.627     module_path: \"enabled\",\n#13 0.627     location: tracing/tests/enabled.rs:21,\n#13 0.627     fields: {},\n#13 0.627     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.627     kind: Kind(HINT),\n#13 0.627 }\n#13 0.627 [level_and_target] enabled: Metadata {\n#13 0.627     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.627     target: \"debug_module\",\n#13 0.627     level: Level(\n#13 0.627         Debug,\n#13 0.627     ),\n#13 0.627     module_path: \"enabled\",\n#13 0.627     location: tracing/tests/enabled.rs:21,\n#13 0.627     fields: {},\n#13 0.627     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.627     kind: Kind(HINT),\n#13 0.627 }\n#13 0.627 [level_and_target] enabled -> true\n#13 0.627 [level_and_target] register_callsite: Metadata {\n#13 0.627     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.627     target: \"debug_module\",\n#13 0.627     level: Level(\n#13 0.627         Debug,\n#13 0.627     ),\n#13 0.627     module_path: \"enabled\",\n#13 0.627     location: tracing/tests/enabled.rs:21,\n#13 0.627     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.628     target: \"debug_module\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:21,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> true\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.628     target: \"debug_module\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:21,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> true\n#13 0.628 [span_and_event] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.628     target: \"debug_module\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:21,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.628     target: \"debug_module\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:21,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864010, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled -> true\n#13 0.628 [level_and_target] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Error,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:22,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864028, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Error,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:22,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864028, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> true\n#13 0.628 [span_and_event] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Error,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:22,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864028, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Error,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:22,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864028, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled -> true\n#13 0.628 [level_and_target] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Trace,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:47,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864058, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Trace,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:47,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864058, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> false\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Error,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:22,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864028, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> true\n#13 0.628 [span_and_event] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Trace,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:47,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864058, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Trace,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:47,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864058, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled -> false\n#13 0.628 [level_and_target] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:23,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864040, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:23,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864040, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> false\n#13 0.628 [level_and_target] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:48,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:48,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [level_and_target] enabled -> false\n#13 0.628 [span_and_event] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:23,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864040, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:23,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864040, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled -> false\n#13 0.628 [span_and_event] register_callsite: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:48,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled: Metadata {\n#13 0.628     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.628     target: \"enabled\",\n#13 0.628     level: Level(\n#13 0.628         Debug,\n#13 0.628     ),\n#13 0.628     module_path: \"enabled\",\n#13 0.628     location: tracing/tests/enabled.rs:48,\n#13 0.628     fields: {},\n#13 0.628     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.628     kind: Kind(EVENT | HINT),\n#13 0.628 }\n#13 0.628 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.629     target: \"enabled\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:48,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(EVENT | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 test level_and_target ... ok\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.629     target: \"enabled\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:48,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e614864070, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(EVENT | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] register_callsite: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.629     target: \"enabled\",\n#13 0.629     level: Level(\n#13 0.629         Trace,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:49,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e614864088, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.629     target: \"enabled\",\n#13 0.629     level: Level(\n#13 0.629         Trace,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:49,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e614864088, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.629     target: \"enabled\",\n#13 0.629     level: Level(\n#13 0.629         Trace,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:49,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e614864088, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] register_callsite: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:52,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640a0, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:52,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640a0, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:52,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640a0, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(SPAN | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] register_callsite: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:53,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640b8, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(EVENT | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:53,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640b8, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(EVENT | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 [span_and_event] enabled: Metadata {\n#13 0.629     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.629     target: \"debug_module\",\n#13 0.629     level: Level(\n#13 0.629         Debug,\n#13 0.629     ),\n#13 0.629     module_path: \"enabled\",\n#13 0.629     location: tracing/tests/enabled.rs:53,\n#13 0.629     fields: {},\n#13 0.629     callsite: Identifier(Pointer { addr: 0x55e6148640b8, metadata: DynMetadata(0x55e614854900) }),\n#13 0.629     kind: Kind(EVENT | HINT),\n#13 0.629 }\n#13 0.629 [span_and_event] enabled -> true\n#13 0.629 test span_and_event ... ok\n#13 0.629 \n#13 0.629 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.629 \n#13 0.630      Running tests/event.rs (target/debug/deps/event-5b5e69cada366cbb)\n#13 0.631 \n#13 0.631 running 23 tests\n#13 0.632 [borrowed_field] register_callsite: Metadata {\n#13 0.632     name: \"fake\",\n#13 0.632     target: \"tracing_mock::field\",\n#13 0.632     level: Level(\n#13 0.632         Trace,\n#13 0.632     ),\n#13 0.632     module_path: \"tracing_mock::field\",\n#13 0.632     location: tracing-mock/src/field.rs:610,\n#13 0.632     fields: {fake_field},\n#13 0.632     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.632     kind: Kind(EVENT),\n#13 0.632 }\n#13 0.632 [borrowed_field] enabled: Metadata {\n#13 0.632     name: \"fake\",\n#13 0.632     target: \"tracing_mock::field\",\n#13 0.632     level: Level(\n#13 0.632         Trace,\n#13 0.632     ),\n#13 0.632     module_path: \"tracing_mock::field\",\n#13 0.632     location: tracing-mock/src/field.rs:610,\n#13 0.632     fields: {fake_field},\n#13 0.632     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.632     kind: Kind(EVENT),\n#13 0.632 }\n#13 0.632 [borrowed_field] enabled -> true\n#13 0.632 [borrowed_field] register_callsite: Metadata {\n#13 0.632     name: \"event tracing/tests/event.rs:227\",\n#13 0.632     target: \"event\",\n#13 0.632     level: Level(\n#13 0.632         Info,\n#13 0.632     ),\n#13 0.632     module_path: \"event\",\n#13 0.632     location: tracing/tests/event.rs:227,\n#13 0.632     fields: {foo},\n#13 0.632     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.632     kind: Kind(EVENT),\n#13 0.632 }\n#13 0.632 [borrowed_field] enabled: Metadata {\n#13 0.632     name: \"event tracing/tests/event.rs:227\",\n#13 0.632     target: \"event\",\n#13 0.632     level: Level(\n#13 0.632         Info,\n#13 0.632     ),\n#13 0.632     module_path: \"event\",\n#13 0.632     location: tracing/tests/event.rs:227,\n#13 0.632     fields: {foo},\n#13 0.632     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.632     kind: Kind(EVENT),\n#13 0.632 }\n#13 0.632 [borrowed_field] enabled -> true\n#13 0.632 [borrowed_field] register_callsite: Metadata {\n#13 0.632     name: \"event tracing/tests/event.rs:227\",\n#13 0.632     target: \"event\",\n#13 0.632     level: Level(\n#13 0.632         Info,\n#13 0.632     ),\n#13 0.632     module_path: \"event\",\n#13 0.632     location: tracing/tests/event.rs:227,\n#13 0.633     fields: {foo},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [borrowed_field] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:227\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Info,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:227,\n#13 0.633     fields: {foo},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [borrowed_field] enabled -> true\n#13 0.633 [debug_shorthand] register_callsite: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:227\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Info,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:227,\n#13 0.633     fields: {foo},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:227\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Info,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:227,\n#13 0.633     fields: {foo},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled -> true\n#13 0.633 [borrowed_field] event: event tracing/tests/event.rs:227;\n#13 0.633 [borrowed_field] register_callsite: Metadata {\n#13 0.633     name: \"fake\",\n#13 0.633     target: \"tracing_mock::field\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"tracing_mock::field\",\n#13 0.633     location: tracing-mock/src/field.rs:610,\n#13 0.633     fields: {fake_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [borrowed_field] enabled: Metadata {\n#13 0.633     name: \"fake\",\n#13 0.633     target: \"tracing_mock::field\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"tracing_mock::field\",\n#13 0.633     location: tracing-mock/src/field.rs:610,\n#13 0.633     fields: {fake_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [borrowed_field] enabled -> true\n#13 0.633 [debug_shorthand] register_callsite: Metadata {\n#13 0.633     name: \"fake\",\n#13 0.633     target: \"tracing_mock::field\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"tracing_mock::field\",\n#13 0.633     location: tracing-mock/src/field.rs:610,\n#13 0.633     fields: {fake_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled: Metadata {\n#13 0.633     name: \"fake\",\n#13 0.633     target: \"tracing_mock::field\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"tracing_mock::field\",\n#13 0.633     location: tracing-mock/src/field.rs:610,\n#13 0.633     fields: {fake_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled -> true\n#13 0.633 [debug_shorthand] register_callsite: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled -> true\n#13 0.633 [debug_shorthand] event: event tracing/tests/event.rs:309;\n#13 0.633 [debug_shorthand] register_callsite: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [debug_shorthand] enabled -> true\n#13 0.633 [both_shorthands] register_callsite: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [both_shorthands] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:309\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Trace,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:309,\n#13 0.633     fields: {my_field},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [both_shorthands] enabled -> true\n#13 0.633 [both_shorthands] register_callsite: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:227\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.633         Info,\n#13 0.633     ),\n#13 0.633     module_path: \"event\",\n#13 0.633     location: tracing/tests/event.rs:227,\n#13 0.633     fields: {foo},\n#13 0.633     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.633     kind: Kind(EVENT),\n#13 0.633 }\n#13 0.633 [both_shorthands] enabled: Metadata {\n#13 0.633     name: \"event tracing/tests/event.rs:227\",\n#13 0.633     target: \"event\",\n#13 0.633     level: Level(\n#13 0.634         Info,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:227,\n#13 0.634     fields: {foo},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled -> true\n#13 0.634 [both_shorthands] register_callsite: Metadata {\n#13 0.634     name: \"fake\",\n#13 0.634     target: \"tracing_mock::field\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"tracing_mock::field\",\n#13 0.634     location: tracing-mock/src/field.rs:610,\n#13 0.634     fields: {fake_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled: Metadata {\n#13 0.634     name: \"fake\",\n#13 0.634     target: \"tracing_mock::field\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"tracing_mock::field\",\n#13 0.634     location: tracing-mock/src/field.rs:610,\n#13 0.634     fields: {fake_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled -> true\n#13 0.634 [both_shorthands] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled -> true\n#13 0.634 test borrowed_field ... ok\n#13 0.634 [both_shorthands] event: event tracing/tests/event.rs:330;\n#13 0.634 [both_shorthands] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [both_shorthands] enabled -> true\n#13 0.634 test debug_shorthand ... [dotted_field_name] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:330\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:330,\n#13 0.634     fields: {display_field, debug_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled -> true\n#13 0.634 [dotted_field_name] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:309\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:309,\n#13 0.634     fields: {my_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:309\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:309,\n#13 0.634     fields: {my_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled -> true\n#13 0.634 ok[dotted_field_name] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:227\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Info,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:227,\n#13 0.634     fields: {foo},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:227\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Info,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:227,\n#13 0.634     fields: {foo},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled -> true\n#13 0.634 [dotted_field_name] register_callsite: Metadata {\n#13 0.634     name: \"fake\",\n#13 0.634     target: \"tracing_mock::field\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"tracing_mock::field\",\n#13 0.634     location: tracing-mock/src/field.rs:610,\n#13 0.634     fields: {fake_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled: Metadata {\n#13 0.634     name: \"fake\",\n#13 0.634     target: \"tracing_mock::field\",\n#13 0.634     level: Level(\n#13 0.634         Trace,\n#13 0.634     ),\n#13 0.634     module_path: \"tracing_mock::field\",\n#13 0.634     location: tracing-mock/src/field.rs:610,\n#13 0.634     fields: {fake_field},\n#13 0.634     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.634     kind: Kind(EVENT),\n#13 0.634 }\n#13 0.634 [dotted_field_name] enabled -> true\n#13 0.634 \n#13 0.634 [dotted_field_name] register_callsite: Metadata {\n#13 0.634     name: \"event tracing/tests/event.rs:205\",\n#13 0.634     target: \"event\",\n#13 0.634     level: Level(\n#13 0.634         Info,\n#13 0.634     ),\n#13 0.634     module_path: \"event\",\n#13 0.634     location: tracing/tests/event.rs:205,\n#13 0.634     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [dotted_field_name] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:205\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:205,\n#13 0.635     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [dotted_field_name] enabled -> true\n#13 0.635 test both_shorthands ... ok[dotted_field_name] event: event tracing/tests/event.rs:205;\n#13 0.635 \n#13 0.635 [dotted_field_name] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:205\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:205,\n#13 0.635     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [dotted_field_name] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:205\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:205,\n#13 0.635     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [dotted_field_name] enabled -> true\n#13 0.635 test dotted_field_name ... [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:205\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:205,\n#13 0.635     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:205\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:205,\n#13 0.635     fields: {foo.bar, foo.baz},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 ok\n#13 0.635 [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:330\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:330,\n#13 0.635     fields: {display_field, debug_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:330\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:330,\n#13 0.635     fields: {display_field, debug_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:309\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:309,\n#13 0.635     fields: {my_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:309\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:309,\n#13 0.635     fields: {my_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:227\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:227,\n#13 0.635     fields: {foo},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:227\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:227,\n#13 0.635     fields: {foo},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"fake\",\n#13 0.635     target: \"tracing_mock::field\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"tracing_mock::field\",\n#13 0.635     location: tracing-mock/src/field.rs:610,\n#13 0.635     fields: {fake_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"fake\",\n#13 0.635     target: \"tracing_mock::field\",\n#13 0.635     level: Level(\n#13 0.635         Trace,\n#13 0.635     ),\n#13 0.635     module_path: \"tracing_mock::field\",\n#13 0.635     location: tracing-mock/src/field.rs:610,\n#13 0.635     fields: {fake_field},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 [event_without_message] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:50\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:50,\n#13 0.635     fields: {answer, to_question},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:50\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:50,\n#13 0.635     fields: {answer, to_question},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [event_without_message] enabled -> true\n#13 0.635 [event_without_message] event: event tracing/tests/event.rs:50;\n#13 0.635 test event_without_message ... [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:50\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.635     location: tracing/tests/event.rs:50,\n#13 0.635     fields: {answer, to_question},\n#13 0.635     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.635     kind: Kind(EVENT),\n#13 0.635 }\n#13 0.635 [explicit_child_at_levels] enabled: Metadata {\n#13 0.635     name: \"event tracing/tests/event.rs:50\",\n#13 0.635     target: \"event\",\n#13 0.635     level: Level(\n#13 0.635         Info,\n#13 0.635     ),\n#13 0.635     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:50,\n#13 0.636     fields: {answer, to_question},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 ok[explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:205\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:205,\n#13 0.636     fields: {foo.bar, foo.baz},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:205\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:205,\n#13 0.636     fields: {foo.bar, foo.baz},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:330\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:330,\n#13 0.636     fields: {display_field, debug_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:330\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:330,\n#13 0.636     fields: {display_field, debug_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:309\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:309,\n#13 0.636     fields: {my_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:309\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:309,\n#13 0.636     fields: {my_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 \n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:227\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:227,\n#13 0.636     fields: {foo},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:227\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:227,\n#13 0.636     fields: {foo},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"fake\",\n#13 0.636     target: \"tracing_mock::field\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"tracing_mock::field\",\n#13 0.636     location: tracing-mock/src/field.rs:610,\n#13 0.636     fields: {fake_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"fake\",\n#13 0.636     target: \"tracing_mock::field\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"tracing_mock::field\",\n#13 0.636     location: tracing-mock/src/field.rs:610,\n#13 0.636     fields: {fake_field},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [explicit_child_at_levels] new_span: name=\"foo\"; target=\"event\"; id=Id(1);\n#13 0.636 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.636     name: \"foo\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Trace,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:367,\n#13 0.636     fields: {},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(SPAN),\n#13 0.636 }\n#13 0.636 [keyword_ident_in_field_name] enabled -> true\n#13 0.636 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:50\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:50,\n#13 0.636     fields: {answer, to_question},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:50\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:50,\n#13 0.636     fields: {answer, to_question},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [explicit_child_at_levels] enabled -> true\n#13 0.636 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:50\",\n#13 0.636     target: \"event\",\n#13 0.636     level: Level(\n#13 0.636         Info,\n#13 0.636     ),\n#13 0.636     module_path: \"event\",\n#13 0.636     location: tracing/tests/event.rs:50,\n#13 0.636     fields: {answer, to_question},\n#13 0.636     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.636     kind: Kind(EVENT),\n#13 0.636 }\n#13 0.636 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.636     name: \"event tracing/tests/event.rs:50\",\n#13 0.636     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:50,\n#13 0.637     fields: {answer, to_question},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:205\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:205,\n#13 0.637     fields: {foo.bar, foo.baz},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:205\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:205,\n#13 0.637     fields: {foo.bar, foo.baz},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:205\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:205,\n#13 0.637     fields: {foo.bar, foo.baz},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:205\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:205,\n#13 0.637     fields: {foo.bar, foo.baz},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:330\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:330,\n#13 0.637     fields: {display_field, debug_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:330\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:330,\n#13 0.637     fields: {display_field, debug_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:330\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:330,\n#13 0.637     fields: {display_field, debug_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:330\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:330,\n#13 0.637     fields: {display_field, debug_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:309\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:309,\n#13 0.637     fields: {my_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:309\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:309,\n#13 0.637     fields: {my_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:309\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:309,\n#13 0.637     fields: {my_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:309\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:309,\n#13 0.637     fields: {my_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:227\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:227,\n#13 0.637     fields: {foo},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:227\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:227,\n#13 0.637     fields: {foo},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:227\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:227,\n#13 0.637     fields: {foo},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:227\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Info,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:227,\n#13 0.637     fields: {foo},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"fake\",\n#13 0.637     target: \"tracing_mock::field\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"tracing_mock::field\",\n#13 0.637     location: tracing-mock/src/field.rs:610,\n#13 0.637     fields: {fake_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"fake\",\n#13 0.637     target: \"tracing_mock::field\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"tracing_mock::field\",\n#13 0.637     location: tracing-mock/src/field.rs:610,\n#13 0.637     fields: {fake_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"fake\",\n#13 0.637     target: \"tracing_mock::field\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"tracing_mock::field\",\n#13 0.637     location: tracing-mock/src/field.rs:610,\n#13 0.637     fields: {fake_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"fake\",\n#13 0.637     target: \"tracing_mock::field\",\n#13 0.637     level: Level(\n#13 0.637         Trace,\n#13 0.637     ),\n#13 0.637     module_path: \"tracing_mock::field\",\n#13 0.637     location: tracing-mock/src/field.rs:610,\n#13 0.637     fields: {fake_field},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:618\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Error,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:618,\n#13 0.637     fields: {message, crate},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:618\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Error,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:618,\n#13 0.637     fields: {message, crate},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [explicit_child_at_levels] enabled -> true\n#13 0.637 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:618\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Error,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:618,\n#13 0.637     fields: {message, crate},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.637     name: \"event tracing/tests/event.rs:618\",\n#13 0.637     target: \"event\",\n#13 0.637     level: Level(\n#13 0.637         Error,\n#13 0.637     ),\n#13 0.637     module_path: \"event\",\n#13 0.637     location: tracing/tests/event.rs:618,\n#13 0.637     fields: {message, crate},\n#13 0.637     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.637     kind: Kind(EVENT),\n#13 0.637 }\n#13 0.637 [keyword_ident_in_field_name] enabled -> true\n#13 0.637 [constant_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:618\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Error,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:618,\n#13 0.638     fields: {message, crate},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:618\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Error,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:618,\n#13 0.638     fields: {message, crate},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled -> true\n#13 0.638 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled -> true\n#13 0.638 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled -> true\n#13 0.638 [constant_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:368\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:368,\n#13 0.638     fields: {message},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled -> true\n#13 0.638 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled -> true\n#13 0.638 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled -> true\n#13 0.638 [constant_field_name] register_callsite: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled: Metadata {\n#13 0.638     name: \"foo\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:367,\n#13 0.638     fields: {},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(SPAN),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled -> true\n#13 0.638 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled -> true\n#13 0.638 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled -> true\n#13 0.638 [constant_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:50\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:50,\n#13 0.638     fields: {answer, to_question},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled -> true\n#13 0.638 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled -> true\n#13 0.638 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [keyword_ident_in_field_name] enabled -> true\n#13 0.638 [constant_field_name] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:205\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Info,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:205,\n#13 0.638     fields: {foo.bar, foo.baz},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [constant_field_name] enabled -> true\n#13 0.638 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:330\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.638     ),\n#13 0.638     module_path: \"event\",\n#13 0.638     location: tracing/tests/event.rs:330,\n#13 0.638     fields: {display_field, debug_field},\n#13 0.638     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.638     kind: Kind(EVENT),\n#13 0.638 }\n#13 0.638 [explicit_child_at_levels] enabled: Metadata {\n#13 0.638     name: \"event tracing/tests/event.rs:330\",\n#13 0.638     target: \"event\",\n#13 0.638     level: Level(\n#13 0.638         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:330,\n#13 0.639     fields: {display_field, debug_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled -> true\n#13 0.639 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:330\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:330,\n#13 0.639     fields: {display_field, debug_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:330\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:330,\n#13 0.639     fields: {display_field, debug_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled -> true\n#13 0.639 [constant_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:330\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:330,\n#13 0.639     fields: {display_field, debug_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:330\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:330,\n#13 0.639     fields: {display_field, debug_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled -> true\n#13 0.639 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled -> true\n#13 0.639 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled -> true\n#13 0.639 [constant_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:309\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:309,\n#13 0.639     fields: {my_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled -> true\n#13 0.639 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled -> true\n#13 0.639 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled -> true\n#13 0.639 [constant_field_name] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:227\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:227,\n#13 0.639     fields: {foo},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled -> true\n#13 0.639 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [explicit_child_at_levels] enabled -> true\n#13 0.639 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [keyword_ident_in_field_name] enabled -> true\n#13 0.639 [constant_field_name] register_callsite: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled: Metadata {\n#13 0.639     name: \"fake\",\n#13 0.639     target: \"tracing_mock::field\",\n#13 0.639     level: Level(\n#13 0.639         Trace,\n#13 0.639     ),\n#13 0.639     module_path: \"tracing_mock::field\",\n#13 0.639     location: tracing-mock/src/field.rs:610,\n#13 0.639     fields: {fake_field},\n#13 0.639     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.639     kind: Kind(EVENT),\n#13 0.639 }\n#13 0.639 [constant_field_name] enabled -> true\n#13 0.639 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.639     name: \"event tracing/tests/event.rs:541\",\n#13 0.639     target: \"event\",\n#13 0.639     level: Level(\n#13 0.639         Info,\n#13 0.639     ),\n#13 0.639     module_path: \"event\",\n#13 0.639     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled -> true\n#13 0.640 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [keyword_ident_in_field_name] enabled -> true\n#13 0.640 [constant_field_name] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [constant_field_name] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [constant_field_name] enabled -> true\n#13 0.640 [message_without_delims] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [message_without_delims] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:541\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Info,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:541,\n#13 0.640     fields: {message, foo, constant string, foo.bar},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [message_without_delims] enabled -> true\n#13 0.640 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled -> true\n#13 0.640 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [keyword_ident_in_field_name] enabled -> true\n#13 0.640 [constant_field_name] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [constant_field_name] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [constant_field_name] enabled -> true\n#13 0.640 [message_without_delims] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [message_without_delims] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:618\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Error,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:618,\n#13 0.640     fields: {message, crate},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [message_without_delims] enabled -> true\n#13 0.640 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:368\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Trace,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:368,\n#13 0.640     fields: {message},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:368\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Trace,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:368,\n#13 0.640     fields: {message},\n#13 0.640     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.640     kind: Kind(EVENT),\n#13 0.640 }\n#13 0.640 [explicit_child_at_levels] enabled -> true\n#13 0.640 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.640     name: \"event tracing/tests/event.rs:368\",\n#13 0.640     target: \"event\",\n#13 0.640     level: Level(\n#13 0.640         Trace,\n#13 0.640     ),\n#13 0.640     module_path: \"event\",\n#13 0.640     location: tracing/tests/event.rs:368,\n#13 0.640     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:368\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:368,\n#13 0.641     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled -> true\n#13 0.641 [constant_field_name] register_callsite: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:368\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:368,\n#13 0.641     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [constant_field_name] enabled: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:368\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:368,\n#13 0.641     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [constant_field_name] enabled -> true\n#13 0.641 [message_without_delims] register_callsite: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:368\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:368,\n#13 0.641     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [message_without_delims] enabled: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:368\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:368,\n#13 0.641     fields: {message},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [message_without_delims] enabled -> true\n#13 0.641 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [explicit_child_at_levels] enabled: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [explicit_child_at_levels] enabled -> true\n#13 0.641 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled -> true\n#13 0.641 [constant_field_name] register_callsite: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [constant_field_name] enabled: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [constant_field_name] enabled -> true\n#13 0.641 [message_without_delims] register_callsite: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [message_without_delims] enabled: Metadata {\n#13 0.641     name: \"foo\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Trace,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:367,\n#13 0.641     fields: {},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(SPAN),\n#13 0.641 }\n#13 0.641 [message_without_delims] enabled -> true\n#13 0.641 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:50\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Info,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:50,\n#13 0.641     fields: {answer, to_question},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [explicit_child_at_levels] enabled: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:50\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Info,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:50,\n#13 0.641     fields: {answer, to_question},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [explicit_child_at_levels] enabled -> true\n#13 0.641 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:50\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Info,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:50,\n#13 0.641     fields: {answer, to_question},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:50\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Info,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:50,\n#13 0.641     fields: {answer, to_question},\n#13 0.641     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.641     kind: Kind(EVENT),\n#13 0.641 }\n#13 0.641 [keyword_ident_in_field_name] enabled -> true\n#13 0.641 [constant_field_name] register_callsite: Metadata {\n#13 0.641     name: \"event tracing/tests/event.rs:50\",\n#13 0.641     target: \"event\",\n#13 0.641     level: Level(\n#13 0.641         Info,\n#13 0.641     ),\n#13 0.641     module_path: \"event\",\n#13 0.641     location: tracing/tests/event.rs:50,\n#13 0.641     fields: {answer, to_question},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:50\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:50,\n#13 0.642     fields: {answer, to_question},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled -> true\n#13 0.642 [message_without_delims] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:50\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:50,\n#13 0.642     fields: {answer, to_question},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:50\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:50,\n#13 0.642     fields: {answer, to_question},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled -> true\n#13 0.642 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [explicit_child_at_levels] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [explicit_child_at_levels] enabled -> true\n#13 0.642 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [keyword_ident_in_field_name] enabled -> true\n#13 0.642 [constant_field_name] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled -> true\n#13 0.642 [message_without_delims] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:205\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Info,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:205,\n#13 0.642     fields: {foo.bar, foo.baz},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled -> true\n#13 0.642 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [explicit_child_at_levels] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [explicit_child_at_levels] enabled -> true\n#13 0.642 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [keyword_ident_in_field_name] enabled -> true\n#13 0.642 [constant_field_name] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [constant_field_name] enabled -> true\n#13 0.642 [message_without_delims] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:330\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:330,\n#13 0.642     fields: {display_field, debug_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [message_without_delims] enabled -> true\n#13 0.642 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.642     name: \"event tracing/tests/event.rs:309\",\n#13 0.642     target: \"event\",\n#13 0.642     level: Level(\n#13 0.642         Trace,\n#13 0.642     ),\n#13 0.642     module_path: \"event\",\n#13 0.642     location: tracing/tests/event.rs:309,\n#13 0.642     fields: {my_field},\n#13 0.642     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.642     kind: Kind(EVENT),\n#13 0.642 }\n#13 0.642 [explicit_child_at_levels] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [explicit_child_at_levels] enabled -> true\n#13 0.643 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [keyword_ident_in_field_name] enabled -> true\n#13 0.643 [constant_field_name] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [constant_field_name] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [constant_field_name] enabled -> true\n#13 0.643 [message_without_delims] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [message_without_delims] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:309\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:309,\n#13 0.643     fields: {my_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [message_without_delims] enabled -> true\n#13 0.643 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [explicit_child_at_levels] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [explicit_child_at_levels] enabled -> true\n#13 0.643 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [keyword_ident_in_field_name] enabled -> true\n#13 0.643 [constant_field_name] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [constant_field_name] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [constant_field_name] enabled -> true\n#13 0.643 [message_without_delims] register_callsite: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [message_without_delims] enabled: Metadata {\n#13 0.643     name: \"event tracing/tests/event.rs:227\",\n#13 0.643     target: \"event\",\n#13 0.643     level: Level(\n#13 0.643         Info,\n#13 0.643     ),\n#13 0.643     module_path: \"event\",\n#13 0.643     location: tracing/tests/event.rs:227,\n#13 0.643     fields: {foo},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [message_without_delims] enabled -> true\n#13 0.643 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.643     name: \"fake\",\n#13 0.643     target: \"tracing_mock::field\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"tracing_mock::field\",\n#13 0.643     location: tracing-mock/src/field.rs:610,\n#13 0.643     fields: {fake_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [explicit_child_at_levels] enabled: Metadata {\n#13 0.643     name: \"fake\",\n#13 0.643     target: \"tracing_mock::field\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"tracing_mock::field\",\n#13 0.643     location: tracing-mock/src/field.rs:610,\n#13 0.643     fields: {fake_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [explicit_child_at_levels] enabled -> true\n#13 0.643 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.643     name: \"fake\",\n#13 0.643     target: \"tracing_mock::field\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"tracing_mock::field\",\n#13 0.643     location: tracing-mock/src/field.rs:610,\n#13 0.643     fields: {fake_field},\n#13 0.643     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.643     kind: Kind(EVENT),\n#13 0.643 }\n#13 0.643 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.643     name: \"fake\",\n#13 0.643     target: \"tracing_mock::field\",\n#13 0.643     level: Level(\n#13 0.643         Trace,\n#13 0.643     ),\n#13 0.643     module_path: \"tracing_mock::field\",\n#13 0.643     location: tracing-mock/src/field.rs:610,\n#13 0.644     fields: {fake_field},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [keyword_ident_in_field_name] enabled -> true\n#13 0.644 [constant_field_name] register_callsite: Metadata {\n#13 0.644     name: \"fake\",\n#13 0.644     target: \"tracing_mock::field\",\n#13 0.644     level: Level(\n#13 0.644         Trace,\n#13 0.644     ),\n#13 0.644     module_path: \"tracing_mock::field\",\n#13 0.644     location: tracing-mock/src/field.rs:610,\n#13 0.644     fields: {fake_field},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [constant_field_name] enabled: Metadata {\n#13 0.644     name: \"fake\",\n#13 0.644     target: \"tracing_mock::field\",\n#13 0.644     level: Level(\n#13 0.644         Trace,\n#13 0.644     ),\n#13 0.644     module_path: \"tracing_mock::field\",\n#13 0.644     location: tracing-mock/src/field.rs:610,\n#13 0.644     fields: {fake_field},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [constant_field_name] enabled -> true\n#13 0.644 [message_without_delims] register_callsite: Metadata {\n#13 0.644     name: \"fake\",\n#13 0.644     target: \"tracing_mock::field\",\n#13 0.644     level: Level(\n#13 0.644         Trace,\n#13 0.644     ),\n#13 0.644     module_path: \"tracing_mock::field\",\n#13 0.644     location: tracing-mock/src/field.rs:610,\n#13 0.644     fields: {fake_field},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [message_without_delims] enabled: Metadata {\n#13 0.644     name: \"fake\",\n#13 0.644     target: \"tracing_mock::field\",\n#13 0.644     level: Level(\n#13 0.644         Trace,\n#13 0.644     ),\n#13 0.644     module_path: \"tracing_mock::field\",\n#13 0.644     location: tracing-mock/src/field.rs:610,\n#13 0.644     fields: {fake_field},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [message_without_delims] enabled -> true\n#13 0.644 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [explicit_child_at_levels] enabled: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [explicit_child_at_levels] enabled -> true\n#13 0.644 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [keyword_ident_in_field_name] enabled -> true\n#13 0.644 [constant_field_name] register_callsite: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [constant_field_name] enabled: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [constant_field_name] enabled -> true\n#13 0.644 [message_without_delims] register_callsite: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [message_without_delims] enabled: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.644     level: Level(\n#13 0.644         Debug,\n#13 0.644     ),\n#13 0.644     module_path: \"event\",\n#13 0.644     location: tracing/tests/event.rs:101,\n#13 0.644     fields: {message, answer, question},\n#13 0.644     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.644     kind: Kind(EVENT),\n#13 0.644 }\n#13 0.644 [message_without_delims] enabled -> true\n#13 0.644 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.644     name: \"event tracing/tests/event.rs:101\",\n#13 0.644     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Debug,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:101,\n#13 0.645     fields: {message, answer, question},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [move_field_out_of_struct] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:101\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Debug,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:101,\n#13 0.645     fields: {message, answer, question},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [move_field_out_of_struct] enabled -> true\n#13 0.645 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [explicit_child_at_levels] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [explicit_child_at_levels] enabled -> true\n#13 0.645 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [keyword_ident_in_field_name] enabled -> true\n#13 0.645 [constant_field_name] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [constant_field_name] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [constant_field_name] enabled -> true\n#13 0.645 [message_without_delims] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [message_without_delims] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [message_without_delims] enabled -> true\n#13 0.645 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [move_field_out_of_struct] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:541\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Info,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:541,\n#13 0.645     fields: {message, foo, constant string, foo.bar},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [move_field_out_of_struct] enabled -> true\n#13 0.645 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:618\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Error,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:618,\n#13 0.645     fields: {message, crate},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [explicit_child_at_levels] enabled: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:618\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Error,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:618,\n#13 0.645     fields: {message, crate},\n#13 0.645     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.645     kind: Kind(EVENT),\n#13 0.645 }\n#13 0.645 [explicit_child_at_levels] enabled -> true\n#13 0.645 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.645     name: \"event tracing/tests/event.rs:618\",\n#13 0.645     target: \"event\",\n#13 0.645     level: Level(\n#13 0.645         Error,\n#13 0.645     ),\n#13 0.645     module_path: \"event\",\n#13 0.645     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [keyword_ident_in_field_name] enabled -> true\n#13 0.646 [constant_field_name] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [constant_field_name] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [constant_field_name] enabled -> true\n#13 0.646 [message_without_delims] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [message_without_delims] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [message_without_delims] enabled -> true\n#13 0.646 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [move_field_out_of_struct] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:618\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Error,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:618,\n#13 0.646     fields: {message, crate},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [move_field_out_of_struct] enabled -> true\n#13 0.646 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [explicit_child_at_levels] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [explicit_child_at_levels] enabled -> true\n#13 0.646 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [keyword_ident_in_field_name] enabled -> true\n#13 0.646 [constant_field_name] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [constant_field_name] enabled: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.646     ),\n#13 0.646     module_path: \"event\",\n#13 0.646     location: tracing/tests/event.rs:368,\n#13 0.646     fields: {message},\n#13 0.646     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.646     kind: Kind(EVENT),\n#13 0.646 }\n#13 0.646 [constant_field_name] enabled -> true\n#13 0.646 [message_without_delims] register_callsite: Metadata {\n#13 0.646     name: \"event tracing/tests/event.rs:368\",\n#13 0.646     target: \"event\",\n#13 0.646     level: Level(\n#13 0.646         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:368,\n#13 0.647     fields: {message},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(EVENT),\n#13 0.647 }\n#13 0.647 [message_without_delims] enabled: Metadata {\n#13 0.647     name: \"event tracing/tests/event.rs:368\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:368,\n#13 0.647     fields: {message},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(EVENT),\n#13 0.647 }\n#13 0.647 [message_without_delims] enabled -> true\n#13 0.647 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.647     name: \"event tracing/tests/event.rs:368\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:368,\n#13 0.647     fields: {message},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(EVENT),\n#13 0.647 }\n#13 0.647 [move_field_out_of_struct] enabled: Metadata {\n#13 0.647     name: \"event tracing/tests/event.rs:368\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:368,\n#13 0.647     fields: {message},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(EVENT),\n#13 0.647 }\n#13 0.647 [move_field_out_of_struct] enabled -> true\n#13 0.647 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [explicit_child_at_levels] enabled: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [explicit_child_at_levels] enabled -> true\n#13 0.647 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [keyword_ident_in_field_name] enabled -> true\n#13 0.647 [constant_field_name] register_callsite: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [constant_field_name] enabled: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [constant_field_name] enabled -> true\n#13 0.647 [message_without_delims] register_callsite: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [message_without_delims] enabled: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [message_without_delims] enabled -> true\n#13 0.647 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [move_field_out_of_struct] enabled: Metadata {\n#13 0.647     name: \"foo\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Trace,\n#13 0.647     ),\n#13 0.647     module_path: \"event\",\n#13 0.647     location: tracing/tests/event.rs:367,\n#13 0.647     fields: {},\n#13 0.647     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.647     kind: Kind(SPAN),\n#13 0.647 }\n#13 0.647 [move_field_out_of_struct] enabled -> true\n#13 0.647 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.647     name: \"event tracing/tests/event.rs:50\",\n#13 0.647     target: \"event\",\n#13 0.647     level: Level(\n#13 0.647         Info,\n#13 0.647     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [explicit_child_at_levels] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [explicit_child_at_levels] enabled -> true\n#13 0.648 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [keyword_ident_in_field_name] enabled -> true\n#13 0.648 [constant_field_name] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [constant_field_name] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [constant_field_name] enabled -> true\n#13 0.648 [message_without_delims] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [message_without_delims] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [message_without_delims] enabled -> true\n#13 0.648 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [move_field_out_of_struct] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:50\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:50,\n#13 0.648     fields: {answer, to_question},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [move_field_out_of_struct] enabled -> true\n#13 0.648 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:205\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:205,\n#13 0.648     fields: {foo.bar, foo.baz},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [explicit_child_at_levels] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:205\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:205,\n#13 0.648     fields: {foo.bar, foo.baz},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [explicit_child_at_levels] enabled -> true\n#13 0.648 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:205\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:205,\n#13 0.648     fields: {foo.bar, foo.baz},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:205\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.648     location: tracing/tests/event.rs:205,\n#13 0.648     fields: {foo.bar, foo.baz},\n#13 0.648     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.648     kind: Kind(EVENT),\n#13 0.648 }\n#13 0.648 [keyword_ident_in_field_name] enabled -> true\n#13 0.648 [constant_field_name] register_callsite: Metadata {\n#13 0.648     name: \"event tracing/tests/event.rs:205\",\n#13 0.648     target: \"event\",\n#13 0.648     level: Level(\n#13 0.648         Info,\n#13 0.648     ),\n#13 0.648     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [constant_field_name] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:205\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Info,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [constant_field_name] enabled -> true\n#13 0.649 [message_without_delims] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:205\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Info,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [message_without_delims] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:205\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Info,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [message_without_delims] enabled -> true\n#13 0.649 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:205\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Info,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [move_field_out_of_struct] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:205\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Info,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:205,\n#13 0.649     fields: {foo.bar, foo.baz},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [move_field_out_of_struct] enabled -> true\n#13 0.649 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [explicit_child_at_levels] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [explicit_child_at_levels] enabled -> true\n#13 0.649 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [keyword_ident_in_field_name] enabled -> true\n#13 0.649 [constant_field_name] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [constant_field_name] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [constant_field_name] enabled -> true\n#13 0.649 [message_without_delims] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [message_without_delims] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [message_without_delims] enabled -> true\n#13 0.649 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [move_field_out_of_struct] enabled: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:330\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.649         Trace,\n#13 0.649     ),\n#13 0.649     module_path: \"event\",\n#13 0.649     location: tracing/tests/event.rs:330,\n#13 0.649     fields: {display_field, debug_field},\n#13 0.649     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.649     kind: Kind(EVENT),\n#13 0.649 }\n#13 0.649 [move_field_out_of_struct] enabled -> true\n#13 0.649 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.649     name: \"event tracing/tests/event.rs:309\",\n#13 0.649     target: \"event\",\n#13 0.649     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [explicit_child_at_levels] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [explicit_child_at_levels] enabled -> true\n#13 0.650 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [keyword_ident_in_field_name] enabled -> true\n#13 0.650 [constant_field_name] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [constant_field_name] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [constant_field_name] enabled -> true\n#13 0.650 [message_without_delims] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [message_without_delims] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [message_without_delims] enabled -> true\n#13 0.650 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [move_field_out_of_struct] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:309\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Trace,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:309,\n#13 0.650     fields: {my_field},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [move_field_out_of_struct] enabled -> true\n#13 0.650 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:227\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Info,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:227,\n#13 0.650     fields: {foo},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [explicit_child_at_levels] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:227\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Info,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:227,\n#13 0.650     fields: {foo},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [explicit_child_at_levels] enabled -> true\n#13 0.650 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:227\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Info,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:227,\n#13 0.650     fields: {foo},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:227\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Info,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:227,\n#13 0.650     fields: {foo},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.650 [keyword_ident_in_field_name] enabled -> true\n#13 0.650 [constant_field_name] register_callsite: Metadata {\n#13 0.650     name: \"event tracing/tests/event.rs:227\",\n#13 0.650     target: \"event\",\n#13 0.650     level: Level(\n#13 0.650         Info,\n#13 0.650     ),\n#13 0.650     module_path: \"event\",\n#13 0.650     location: tracing/tests/event.rs:227,\n#13 0.650     fields: {foo},\n#13 0.650     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.650     kind: Kind(EVENT),\n#13 0.650 }\n#13 0.651 [constant_field_name] enabled: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:227\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Info,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:227,\n#13 0.651     fields: {foo},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [constant_field_name] enabled -> true\n#13 0.651 [message_without_delims] register_callsite: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:227\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Info,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:227,\n#13 0.651     fields: {foo},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [message_without_delims] enabled: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:227\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Info,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:227,\n#13 0.651     fields: {foo},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [message_without_delims] enabled -> true\n#13 0.651 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:227\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Info,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:227,\n#13 0.651     fields: {foo},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [move_field_out_of_struct] enabled: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:227\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Info,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:227,\n#13 0.651     fields: {foo},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [move_field_out_of_struct] enabled -> true\n#13 0.651 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [explicit_child_at_levels] enabled: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [explicit_child_at_levels] enabled -> true\n#13 0.651 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [keyword_ident_in_field_name] enabled -> true\n#13 0.651 [constant_field_name] register_callsite: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [constant_field_name] enabled: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [constant_field_name] enabled -> true\n#13 0.651 [message_without_delims] register_callsite: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [message_without_delims] enabled: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [message_without_delims] enabled -> true\n#13 0.651 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [move_field_out_of_struct] enabled: Metadata {\n#13 0.651     name: \"fake\",\n#13 0.651     target: \"tracing_mock::field\",\n#13 0.651     level: Level(\n#13 0.651         Trace,\n#13 0.651     ),\n#13 0.651     module_path: \"tracing_mock::field\",\n#13 0.651     location: tracing-mock/src/field.rs:610,\n#13 0.651     fields: {fake_field},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [move_field_out_of_struct] enabled -> true\n#13 0.651 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:269\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Debug,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:269,\n#13 0.651     fields: {x, y},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.651     kind: Kind(EVENT),\n#13 0.651 }\n#13 0.651 [explicit_child_at_levels] enabled: Metadata {\n#13 0.651     name: \"event tracing/tests/event.rs:269\",\n#13 0.651     target: \"event\",\n#13 0.651     level: Level(\n#13 0.651         Debug,\n#13 0.651     ),\n#13 0.651     module_path: \"event\",\n#13 0.651     location: tracing/tests/event.rs:269,\n#13 0.651     fields: {x, y},\n#13 0.651     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled -> true\n#13 0.652 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled -> true\n#13 0.652 [moved_field] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:269\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:269,\n#13 0.652     fields: {x, y},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366388, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled -> true\n#13 0.652 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled -> true\n#13 0.652 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled -> true\n#13 0.652 [moved_field] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:101\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Debug,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:101,\n#13 0.652     fields: {message, answer, question},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366070, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled -> true\n#13 0.652 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled -> true\n#13 0.652 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled -> true\n#13 0.652 [moved_field] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:541\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Info,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:541,\n#13 0.652     fields: {message, foo, constant string, foo.bar},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366280, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled -> true\n#13 0.652 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled -> true\n#13 0.652 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled -> true\n#13 0.652 [moved_field] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:618\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Error,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:618,\n#13 0.652     fields: {message, crate},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366340, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled -> true\n#13 0.652 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [message_without_delims] enabled -> true\n#13 0.652 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [move_field_out_of_struct] enabled -> true\n#13 0.652 [moved_field] register_callsite: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled: Metadata {\n#13 0.652     name: \"event tracing/tests/event.rs:368\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:368,\n#13 0.652     fields: {message},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366190, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(EVENT),\n#13 0.652 }\n#13 0.652 [moved_field] enabled -> true\n#13 0.652 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [explicit_child_at_levels] enabled -> true\n#13 0.652 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [keyword_ident_in_field_name] enabled -> true\n#13 0.652 [constant_field_name] register_callsite: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.652     kind: Kind(SPAN),\n#13 0.652 }\n#13 0.652 [constant_field_name] enabled -> true\n#13 0.652 [message_without_delims] register_callsite: Metadata {\n#13 0.652     name: \"foo\",\n#13 0.652     target: \"event\",\n#13 0.652     level: Level(\n#13 0.652         Trace,\n#13 0.652     ),\n#13 0.652     module_path: \"event\",\n#13 0.652     location: tracing/tests/event.rs:367,\n#13 0.652     fields: {},\n#13 0.652     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"foo\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:367,\n#13 0.653     fields: {},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"foo\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:367,\n#13 0.653     fields: {},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"foo\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:367,\n#13 0.653     fields: {},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"foo\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:367,\n#13 0.653     fields: {},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"foo\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:367,\n#13 0.653     fields: {},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366178, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(SPAN),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled -> true\n#13 0.653 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled -> true\n#13 0.653 [constant_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled -> true\n#13 0.653 [message_without_delims] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:50\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:50,\n#13 0.653     fields: {answer, to_question},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366010, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled -> true\n#13 0.653 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled -> true\n#13 0.653 [constant_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled -> true\n#13 0.653 [message_without_delims] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:205\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:205,\n#13 0.653     fields: {foo.bar, foo.baz},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660d0, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled -> true\n#13 0.653 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled -> true\n#13 0.653 [constant_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled -> true\n#13 0.653 [message_without_delims] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:330\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:330,\n#13 0.653     fields: {display_field, debug_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366130, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled -> true\n#13 0.653 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled -> true\n#13 0.653 [constant_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled -> true\n#13 0.653 [message_without_delims] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:309\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:309,\n#13 0.653     fields: {my_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df366118, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [explicit_child_at_levels] enabled -> true\n#13 0.653 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [keyword_ident_in_field_name] enabled -> true\n#13 0.653 [constant_field_name] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [constant_field_name] enabled -> true\n#13 0.653 [message_without_delims] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [message_without_delims] enabled -> true\n#13 0.653 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [move_field_out_of_struct] enabled -> true\n#13 0.653 [moved_field] register_callsite: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled: Metadata {\n#13 0.653     name: \"event tracing/tests/event.rs:227\",\n#13 0.653     target: \"event\",\n#13 0.653     level: Level(\n#13 0.653         Info,\n#13 0.653     ),\n#13 0.653     module_path: \"event\",\n#13 0.653     location: tracing/tests/event.rs:227,\n#13 0.653     fields: {foo},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3660e8, metadata: DynMetadata(0x5587df354928) }),\n#13 0.653     kind: Kind(EVENT),\n#13 0.653 }\n#13 0.653 [moved_field] enabled -> true\n#13 0.653 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.653     name: \"fake\",\n#13 0.653     target: \"tracing_mock::field\",\n#13 0.653     level: Level(\n#13 0.653         Trace,\n#13 0.653     ),\n#13 0.653     module_path: \"tracing_mock::field\",\n#13 0.653     location: tracing-mock/src/field.rs:610,\n#13 0.653     fields: {fake_field},\n#13 0.653     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [explicit_child_at_levels] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [explicit_child_at_levels] enabled -> true\n#13 0.654 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [keyword_ident_in_field_name] enabled -> true\n#13 0.654 [constant_field_name] register_callsite: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [constant_field_name] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [constant_field_name] enabled -> true\n#13 0.654 [message_without_delims] register_callsite: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [message_without_delims] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [message_without_delims] enabled -> true\n#13 0.654 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [move_field_out_of_struct] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [move_field_out_of_struct] enabled -> true\n#13 0.654 [moved_field] register_callsite: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [moved_field] enabled: Metadata {\n#13 0.654     name: \"fake\",\n#13 0.654     target: \"tracing_mock::field\",\n#13 0.654     level: Level(\n#13 0.654         Trace,\n#13 0.654     ),\n#13 0.654     module_path: \"tracing_mock::field\",\n#13 0.654     location: tracing-mock/src/field.rs:610,\n#13 0.654     fields: {fake_field},\n#13 0.654     callsite: Identifier(Pointer { addr: 0x5587df3663a0, metadata: DynMetadata(0x5587df35e578) }),\n#13 0.654     kind: Kind(EVENT),\n#13 0.654 }\n#13 0.654 [moved_field] enabled -> true\n#13 0.654 [explicit_child_at_levels] regi\n#13 0.654 [output clipped, log limit 200KiB/s reached]\n#13 0.881      Running tests/filter_caching_is_lexically_scoped.rs (target/debug/deps/filter_caching_is_lexically_scoped-65dd074a99eb7869)\n#13 0.883      Running tests/filters_are_not_reevaluated_for_the_same_span.rs (target/debug/deps/filters_are_not_reevaluated_for_the_same_span-1d6c2b861dde1240)\n#13 0.885      Running tests/filters_are_reevaluated_for_different_call_sites.rs (target/debug/deps/filters_are_reevaluated_for_different_call_sites-9ac8aebe3f9244c1)\n#13 0.889      Running tests/filters_dont_leak.rs (target/debug/deps/filters_dont_leak-43845863a931490a)\n#13 0.893      Running tests/future_send.rs (target/debug/deps/future_send-ddb3974ef07e6d23)\n#13 0.894      Running tests/instrument.rs (target/debug/deps/instrument-a47ea8b4babde974)\n#13 0.898      Running tests/macro_imports.rs (target/debug/deps/macro_imports-fe02506a9810858b)\n#13 0.900      Running tests/macros.rs (target/debug/deps/macros-aecdd04cdc164e4e)\n#13 0.907      Running tests/macros_incompatible_concat.rs (target/debug/deps/macros_incompatible_concat-1cc000af0d6a1885)\n#13 0.909      Running tests/max_level_hint.rs (target/debug/deps/max_level_hint-cf6ffdbe63eb678b)\n#13 0.911 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.911     name: \"event tracing/tests/max_level_hint.rs:31\",\n#13 0.911     target: \"max_level_hint\",\n#13 0.911     level: Level(\n#13 0.911         Info,\n#13 0.911     ),\n#13 0.911     module_path: \"max_level_hint\",\n#13 0.911     location: tracing/tests/max_level_hint.rs:31,\n#13 0.911     fields: {message},\n#13 0.911     callsite: Identifier(Pointer { addr: 0x559a3a21d010, metadata: DynMetadata(0x559a3a20d4d8) }),\n#13 0.912     kind: Kind(EVENT),\n#13 0.912 }\n#13 0.912 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.912     name: \"event tracing/tests/max_level_hint.rs:33\",\n#13 0.912     target: \"max_level_hint\",\n#13 0.912     level: Level(\n#13 0.912         Warn,\n#13 0.912     ),\n#13 0.912     module_path: \"max_level_hint\",\n#13 0.912     location: tracing/tests/max_level_hint.rs:33,\n#13 0.912     fields: {message},\n#13 0.912     callsite: Identifier(Pointer { addr: 0x559a3a21d040, metadata: DynMetadata(0x559a3a20d4d8) }),\n#13 0.912     kind: Kind(EVENT),\n#13 0.912 }\n#13 0.912 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.912     name: \"event tracing/tests/max_level_hint.rs:35\",\n#13 0.912     target: \"max_level_hint\",\n#13 0.912     level: Level(\n#13 0.912         Error,\n#13 0.912     ),\n#13 0.912     module_path: \"max_level_hint\",\n#13 0.912     location: tracing/tests/max_level_hint.rs:35,\n#13 0.912     fields: {message},\n#13 0.912     callsite: Identifier(Pointer { addr: 0x559a3a21d070, metadata: DynMetadata(0x559a3a20d4d8) }),\n#13 0.912     kind: Kind(EVENT),\n#13 0.912 }\n#13 0.913      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-c4147fc0b4079d89)\n#13 1.016      Running tests/multiple_max_level_hints.rs (target/debug/deps/multiple_max_level_hints-f7f9739cbfc36991)\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.019     Info,\n#13 1.019 )\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.019     Warn,\n#13 1.019 )\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.019     Error,\n#13 1.019 )\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.019     Error,\n#13 1.019 )\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 1.019     Error,\n#13 1.019 )\n#13 1.019 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.019     Warn,\n#13 1.019 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 1.020     Warn,\n#13 1.020 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.020     Info,\n#13 1.020 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 1.020     Info,\n#13 1.020 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 1.020     Debug,\n#13 1.020 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 1.020     Debug,\n#13 1.020 )\n#13 1.020 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 1.020     Debug,\n#13 1.020 )\n#13 1.021      Running tests/no_subscriber.rs (target/debug/deps/no_subscriber-a50c92f97cb7f7f4)\n#13 1.024      Running tests/register_callsite_deadlock.rs (target/debug/deps/register_callsite_deadlock-42a0812960255d8b)\n#13 1.028      Running tests/scoped_clobbers_default.rs (target/debug/deps/scoped_clobbers_default-b187719e730ed561)\n#13 1.032      Running tests/span.rs (target/debug/deps/span-a7cfe38cc7bfb8c7)\n#13 1.774      Running tests/subscriber.rs (target/debug/deps/subscriber-a5a3ff6315fec54c)\n#13 1.779      Running unittests src/lib.rs (target/debug/deps/tracing_appender-04368258e11243ac)\n#13 1.782 \n#13 1.782 thread 'rolling::test::test_never_date_rounding' panicked at tracing-appender/src/rolling.rs:551:17:\n#13 1.782 internal error: entered unreachable code: Rotation::NEVER is impossible to round.\n#13 1.782 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 6.801      Running unittests src/lib.rs (target/debug/deps/tracing_attributes-77bfca6ff021554e)\n#13 6.805      Running tests/async_fn.rs (target/debug/deps/async_fn-7f67cbcf7ef6c2b0)\n#13 6.838      Running tests/dead_code.rs (target/debug/deps/dead_code-189550194a125f7a)\n#13 6.841      Running tests/destructuring.rs (target/debug/deps/destructuring-2cef51104a51a7c9)\n#13 6.854      Running tests/err.rs (target/debug/deps/err-1f4c8a07afba1e9f)\n#13 6.928      Running tests/fields.rs (target/debug/deps/fields-765d54db324829c9)\n#13 6.955      Running tests/follows_from.rs (target/debug/deps/follows_from-d88bbf60bf2e3ba0)\n#13 6.962      Running tests/instrument.rs (target/debug/deps/instrument-9d49f534aeecfb87)\n#13 6.976      Running tests/levels.rs (target/debug/deps/levels-218a1349cbf08bfb)\n#13 6.984      Running tests/names.rs (target/debug/deps/names-babb4b7a0c035795)\n#13 6.988      Running tests/parents.rs (target/debug/deps/parents-f28b3e589cd2c881)\n#13 6.993      Running tests/ret.rs (target/debug/deps/ret-3bf3c0720fd12a00)\n#13 7.057      Running tests/targets.rs (target/debug/deps/targets-97a17d23db869b34)\n#13 7.061      Running tests/ui.rs (target/debug/deps/ui-3221c9d7be663047)\n#13 7.134     Checking tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.171     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.07s\n#13 7.222 \n#13 7.222 \n#13 7.402 test tests/ui/fail/async_instrument.rs ... ok\n#13 7.402 test tests/ui/fail/const_instrument.rs ... ok\n#13 7.402 test tests/ui/fail/unused_instrumented_fn.rs ... ok\n#13 7.402 \n#13 7.402 \n#13 7.445    Compiling tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.584     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.17s\n#13 7.635 \n#13 7.635 \n#13 7.635 test tests/ui/pass/type_shadowing.rs ... ok\n#13 7.755 \n#13 7.755 WARNINGS:\n#13 7.755 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.755 warning: unused import: `Bar::*`\n#13 7.755   --> tests/ui/pass/type_shadowing.rs:14:9\n#13 7.755    |\n#13 7.755 14 |     use Bar::*;\n#13 7.755    |         ^^^^^^\n#13 7.755    |\n#13 7.755    = note: `#[warn(unused_imports)]` on by default\n#13 7.755 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.755 \n#13 7.755 STDERR:\n#13 7.755 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.755 warning: unused import: `Bar::*`\n#13 7.755   --> /workspace/tracing-attributes/tests/ui/pass/type_shadowing.rs:14:9\n#13 7.755    |\n#13 7.755 14 |     use Bar::*;\n#13 7.755    |         ^^^^^^\n#13 7.755    |\n#13 7.755    = note: `#[warn(unused_imports)]` on by default\n#13 7.755 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.755 \n#13 7.755 \n#13 7.755 \n#13 7.756      Running unittests src/lib.rs (target/debug/deps/tracing_core-734d01840db1e916)\n#13 7.760      Running tests/dispatch.rs (target/debug/deps/dispatch-75c9d1a443927b39)\n#13 7.763      Running tests/global_dispatch.rs (target/debug/deps/global_dispatch-e28841795b95072c)\n#13 7.766      Running tests/local_dispatch_before_init.rs (target/debug/deps/local_dispatch_before_init-de2b7849bbc31f2a)\n#13 7.769 [tracing-core/tests/local_dispatch_before_init.rs:15:47] current = Dispatch::Global(\n#13 7.769     Pointer { addr: 0x560fc66d2b76, metadata: DynMetadata(0x560fc66f9510) },\n#13 7.769 )\n#13 7.769 [tracing-core/tests/local_dispatch_before_init.rs:25:21] current = Dispatch::Scoped(\n#13 7.769     0x7fdc79de6610,\n#13 7.769 )\n#13 7.769 [tracing-core/tests/local_dispatch_before_init.rs:39:13] current = Dispatch::Global(\n#13 7.769     Pointer { addr: 0x7fdc74000d50, metadata: DynMetadata(0x560fc66f2ce0) },\n#13 7.769 )\n#13 7.769      Running tests/macros.rs (target/debug/deps/macros-1d65857f050f4003)\n#13 7.772      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-6eed3a01502a01bf)\n#13 7.786      Running unittests src/lib.rs (target/debug/deps/tracing_error-23aeb8e58b602ab1)\n#13 7.789 [tracing-error/src/backtrace.rs:298:13] &span_trace = SpanTrace []\n#13 7.789 [tracing-error/src/backtrace.rs:314:13] &span_trace = SpanTrace []\n#13 7.789 [tracing-error/src/backtrace.rs:285:13] &span_trace = SpanTrace [\n#13 7.789     { target: \"tracing_error::backtrace::tests\", name: \"test span\", file: \"tracing-error/src/backtrace.rs\", line: 280 },\n#13 7.789 ]\n#13 7.789      Running unittests src/lib.rs (target/debug/deps/tracing_flame-35f2bd68cbb6e0db)\n#13 7.792      Running tests/collapsed.rs (target/debug/deps/collapsed-107fe0355326d447)\n#13 8.412      Running tests/concurrent.rs (target/debug/deps/concurrent-d30dc24ba1fefae1)\n#13 8.547      Running unittests src/lib.rs (target/debug/deps/tracing_futures-2cbbccacd703eaf2)\n#13 8.551      Running tests/std_future.rs (target/debug/deps/std_future-b9f19c63b694ba50)\n#13 8.557      Running unittests src/lib.rs (target/debug/deps/tracing_journald-87169daee49b2f8b)\n#13 8.559      Running tests/journal.rs (target/debug/deps/journal-85cc291f5ef386fd)\n#13 8.562 \n#13 8.562 thread 'custom_priorities' panicked at tracing-journald/tests/journal.rs:196:10:\n#13 8.562 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.562 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 8.562 \n#13 8.562 thread 'journal_fields' panicked at tracing-journald/tests/journal.rs:288:10:\n#13 8.562 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.562 \n#13 8.562 thread 'internal_null_byte' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.562 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'multiline_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'multiline_message_trailing_newline' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'multiple_spans_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'simple_metadata' panicked at tracing-journald/tests/journal.rs:269:10:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'simple_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'spans_field_collision' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'span_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.563 \n#13 8.563 thread 'large_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.563 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.564 error: test failed, to rerun pass `-p tracing-journald --test journal`\n#13 8.650 : 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_custom_target] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_custom_target] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_with_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9040, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"fake\",\n#13 8.650     target: \"tracing_mock::field\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_mock::field\",\n#13 8.650     location: tracing-mock/src/field.rs:610,\n#13 8.650     fields: {fake_field},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9268, metadata: DynMetadata(0x55a74098b3d0) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_custom_target] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_custom_target] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9070, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9010, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_warn] new_span: name=\"ret_warn\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_mut\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90a0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test] new_span: name=\"ret\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_warn] enter: ret_warn; id=Id(1);\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_dbg_warn\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9238, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] enter: ret; id=Id(1);\n#13 8.650 [test_mut] new_span: name=\"ret_mut\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_mut] enter: ret_mut; id=Id(1);\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:68,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9088, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_warn_info\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9208, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] new_span: name=\"ret_warn_info\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn] event: event tracing-attributes/tests/ret.rs:68;\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_impl_type\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9118, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_warn_info] enter: ret_warn_info; id=Id(1);\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn] exit: ret_warn; id=Id(1);\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_and_err\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9178, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"ret_display\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9148, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg_warn] new_span: name=\"ret_dbg_warn\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:16,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9058, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_impl_type] new_span: name=\"ret_impl_type\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_ret_and_err] new_span: name=\"ret_and_err\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_dbg] new_span: name=\"ret_display\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_impl_type] enter: ret_impl_type; id=Id(1);\n#13 8.650 [test_dbg_warn] enter: ret_dbg_warn; id=Id(1);\n#13 8.650 [test_ret_and_err] enter: ret_and_err; id=Id(1);\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn] enabled -> true\n#13 8.650 [test_warn] drop_span: ret_warn; id=Id(1); refs=1;\n#13 8.650 [test_custom_target] event: event tracing-attributes/tests/ret.rs:16;\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_custom_target] exit: ret_with_target; id=Id(1);\n#13 8.650 [test_dbg] enter: ret_display; id=Id(1);\n#13 8.650 [test_custom_target] drop_span: ret_with_target; id=Id(1); refs=1;\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:96,\n#13 8.650     fields: {a},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90b8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"ret_and_ok\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91c0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_mut] event: event tracing-attributes/tests/ret.rs:96;\n#13 8.650 test test_warn ... [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 ok[test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 \n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"ret_async\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90e8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:11,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9028, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_ret_and_ok] new_span: name=\"ret_and_ok\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test] event: event tracing-attributes/tests/ret.rs:11;\n#13 8.650 [test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:152,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9130, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_async] new_span: name=\"ret_async\"; target=\"ret\"; id=Id(1);\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test] exit: ret; id=Id(1);\n#13 8.650 test test_custom_target ... ok[test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Warn,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:285,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9250, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test] drop_span: ret; id=Id(1); refs=1;\n#13 8.650 [test_dbg_warn] event: event tracing-attributes/tests/ret.rs:285;\n#13 8.650 \n#13 8.650 [test_impl_type] event: event tracing-attributes/tests/ret.rs:152;\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_async] enter: ret_async; id=Id(1);\n#13 8.650 [test_dbg_warn] exit: ret_dbg_warn; id=Id(1);\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:177,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9160, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_dbg_warn] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg_warn] enabled -> true\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Error,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:202,\n#13 8.650     fields: {error},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91a8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_impl_type] exit: ret_impl_type; id=Id(1);\n#13 8.650 [test_ret_and_err] event: event tracing-attributes/tests/ret.rs:202;\n#13 8.650 [test_dbg_warn] drop_span: ret_dbg_warn; id=Id(1); refs=1;\n#13 8.650 [test_dbg] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_dbg] enabled -> true\n#13 8.650 [test_dbg] event: event tracing-attributes/tests/ret.rs:177;\n#13 8.650 test test ... ok[test_ret_and_err] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_err] enabled -> true\n#13 8.650 [test_ret_and_err] exit: ret_and_err; id=Id(1);\n#13 8.650 [test_ret_and_ok] enter: ret_and_ok; id=Id(1);\n#13 8.650 [test_ret_and_err] drop_span: ret_and_err; id=Id(1); refs=1;\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_impl_type] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_impl_type] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_impl_type] drop_span: ret_impl_type; id=Id(1); refs=1;\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:125,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9100, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:93,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a90d0, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_mut] event: event tracing-attributes/tests/ret.rs:93;\n#13 8.650 [test_dbg] exit: ret_display; id=Id(1);\n#13 8.650 [test_mut] exit: ret_mut; id=Id(1);\n#13 8.650 [test_async] event: event tracing-attributes/tests/ret.rs:125;\n#13 8.650 [test_dbg] drop_span: ret_display; id=Id(1); refs=1;\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 \n#13 8.650 test test_dbg_warn ... ok\n#13 8.650 [test_async] exit: ret_async; id=Id(1);\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_async] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_async] enabled -> true\n#13 8.650 [test_mut] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_mut] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:231,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a91d8, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_ret_and_ok] enabled -> true\n#13 8.650 [test_warn_info] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_ret_and_ok] event: event tracing-attributes/tests/ret.rs:231;\n#13 8.650 test test_ret_and_err ... ok\n#13 8.650 [test_async] enter: ret_async; id=Id(1);\n#13 8.650 [test_mut] drop_span: ret_mut; id=Id(1); refs=1;\n#13 8.650 [test_async] exit: ret_async; id=Id(1);\n#13 8.650 [test_async] drop_span: ret_async; id=Id(1); refs=1;\n#13 8.650 test test_impl_type ... ok[test_ret_and_ok] exit: ret_and_ok; id=Id(1);\n#13 8.650 \n#13 8.650 [test_ret_and_ok] drop_span: ret_and_ok; id=Id(1); refs=1;\n#13 8.650 [test_warn_info] enabled: Metadata {\n#13 8.650     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.650     target: \"ret\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"ret\",\n#13 8.650     location: tracing-attributes/tests/ret.rs:260,\n#13 8.650     fields: {return},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55a7409a9220, metadata: DynMetadata(0x55a740981020) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [test_warn_info] enabled -> true\n#13 8.650 [test_warn_info] event: event tracing-attributes/tests/ret.rs:260;\n#13 8.650 test test_dbg ... ok\n#13 8.650 [test_warn_info] exit: ret_warn_info; id=Id(1);\n#13 8.650 test test_mut ... ok\n#13 8.650 [test_warn_info] drop_span: ret_warn_info; id=Id(1); refs=1;\n#13 8.650 test test_async ... ok\n#13 8.650 test test_ret_and_ok ... ok\n#13 8.650 test test_warn_info ... ok\n#13 8.650 \n#13 8.650 test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 2 tests\n#13 8.650 [custom_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled -> true\n#13 8.650 [custom_targets] new_span: name=\"custom_target\"; target=\"my_target\"; id=Id(1);\n#13 8.650 [custom_targets] enter: custom_target; id=Id(1);\n#13 8.650 [custom_targets] exit: custom_target; id=Id(1);\n#13 8.650 [custom_targets] drop_span: custom_target; id=Id(1); refs=1;\n#13 8.650 [custom_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled -> true\n#13 8.650 [default_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled -> true\n#13 8.650 [custom_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled -> true\n#13 8.650 [default_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:8,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5028, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled -> true\n#13 8.650 [custom_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled -> true\n#13 8.650 [default_targets] register_callsite: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled: Metadata {\n#13 8.650     name: \"custom_target\",\n#13 8.650     target: \"my_other_target\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:19,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5058, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled -> true\n#13 8.650 [custom_targets] register_callsite: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:5,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5010, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:5,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5010, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [custom_targets] enabled -> true\n#13 8.650 [custom_targets] new_span: name=\"custom_target\"; target=\"my_other_target\"; id=Id(2);\n#13 8.650 [default_targets] register_callsite: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:5,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5010, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:5,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5010, metadata: DynMetadata(0x55bf9cae5240) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled -> true\n#13 8.650 [custom_targets] enter: custom_target; id=Id(2);\n#13 8.650 [custom_targets] exit: custom_target; id=Id(2);\n#13 8.650 [default_targets] new_span: name=\"default_target\"; target=\"targets\"; id=Id(1);\n#13 8.650 [custom_targets] drop_span: custom_target; id=Id(2); refs=1;\n#13 8.650 [default_targets] enter: default_target; id=Id(1);\n#13 8.650 [default_targets] exit: default_target; id=Id(1);\n#13 8.650 [default_targets] drop_span: default_target; id=Id(1); refs=1;\n#13 8.650 [default_targets] register_callsite: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets::my_mod\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5040, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled: Metadata {\n#13 8.650     name: \"default_target\",\n#13 8.650     target: \"targets::my_mod\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"targets::my_mod\",\n#13 8.650     location: tracing-attributes/tests/targets.rs:16,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x55bf9caf5040, metadata: DynMetadata(0x55bf9cae5a38) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [default_targets] enabled -> true\n#13 8.650 test custom_targets ... [default_targets] new_span: name=\"default_target\"; target=\"targets::my_mod\"; id=Id(2);\n#13 8.650 ok[default_targets] enter: default_target; id=Id(2);\n#13 8.650 \n#13 8.650 [default_targets] exit: default_target; id=Id(2);\n#13 8.650 [default_targets] drop_span: default_target; id=Id(2); refs=1;\n#13 8.650 test default_targets ... ok\n#13 8.650 \n#13 8.650 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 2 tests\n#13 8.650 test compile_fail ... ok\n#13 8.650 test pass ... ok\n#13 8.650 \n#13 8.650 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.69s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 20 tests\n#13 8.650 test dispatcher::test::default_dispatch ... ok\n#13 8.650 test dispatcher::test::default_no_subscriber ... ok\n#13 8.650 test dispatcher::test::dispatch_downcasts ... ok\n#13 8.650 test dispatcher::test::dispatch_is ... ok\n#13 8.650 test dispatcher::test::events_dont_infinite_loop ... ok\n#13 8.650 test dispatcher::test::spans_dont_infinite_loop ... ok\n#13 8.650 test field::test::empty_fields_are_skipped ... ok\n#13 8.650 test field::test::empty_value_set_is_empty ... ok\n#13 8.650 test field::test::fields_from_other_callsets_are_skipped ... ok\n#13 8.650 test field::test::index_of_field_in_fieldset_is_correct ... ok\n#13 8.650 test field::test::record_debug_fn ... ok\n#13 8.650 test field::test::record_bytes ... ok\n#13 8.650 test field::test::record_error ... ok\n#13 8.650 test field::test::sparse_value_sets_are_not_empty ... ok\n#13 8.650 test field::test::value_set_with_no_values_is_empty ... ok\n#13 8.650 test field::test::value_sets_with_fields_from_other_callsites_are_empty ... ok\n#13 8.650 test metadata::tests::filter_level_conversion ... ok\n#13 8.650 test metadata::tests::level_filter_is_usize_sized ... ok\n#13 8.650 test metadata::tests::level_filter_reprs ... ok\n#13 8.650 test metadata::tests::level_from_str ... ok\n#13 8.650 \n#13 8.650 test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 2 tests\n#13 8.650 test nested_set_default ... ok\n#13 8.650 test set_default_dispatch ... ok\n#13 8.650 \n#13 8.650 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test global_dispatch ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test local_dispatch_before_init ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test metadata_macro_api ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test event_before_register ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 3 tests\n#13 8.650 test backtrace::tests::capture_empty ... ok\n#13 8.650 test backtrace::tests::capture_unsupported ... ok\n#13 8.650 test backtrace::tests::capture_supported ... ok\n#13 8.650 \n#13 8.650 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 0 tests\n#13 8.650 \n#13 8.650 test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test capture_supported ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.62s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 ThreadId(2)-capture_supported 416170\n#13 8.650 ThreadId(2)-capture_supported;concurrent::main 33813\n#13 8.650 ThreadId(3);concurrent::main;concurrent::outer 10819623\n#13 8.650 ThreadId(2)-capture_supported;concurrent::main;concurrent::outer 30361965\n#13 8.650 ThreadId(3);concurrent::main;concurrent::outer;concurrent::Inner 50182395\n#13 8.650 \n#13 8.650 test capture_supported ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.13s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 3 tests\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:650,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a010, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.650 test tests::futures_01_tests::future_enter_exit_is_reasonable ... ok\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:696,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a040, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:696,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a040, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:696,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a040, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:696,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a040, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.650     location: tracing-futures/src/lib.rs:671,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x56023321a028, metadata: DynMetadata(0x56023320ace0) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::future_error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [tests::futures_01_tests::stream_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 test tests::futures_01_tests::future_error_ends_span ... ok\n#13 8.650 test tests::futures_01_tests::stream_enter_exit_is_reasonable ... ok\n#13 8.650 \n#13 8.650 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 3 tests\n#13 8.650 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled -> true\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.650 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.650 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [enter_exit_is_reasonable] enabled -> true\n#13 8.650 [enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:22,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142010, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 test enter_exit_is_reasonable ... ok\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:41,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142028, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:95,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142058, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:95,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142058, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [error_ends_span] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:95,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142058, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"foo\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:95,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142058, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 [error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [span_on_drop] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.650 [error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [span_on_drop] enter: foo; id=Id(1);\n#13 8.650 [error_ends_span] enter: foo; id=Id(1);\n#13 8.650 [error_ends_span] exit: foo; id=Id(1);\n#13 8.650 [error_ends_span] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:54,\n#13 8.650     fields: {message},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142040, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled: Metadata {\n#13 8.650     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:54,\n#13 8.650     fields: {message},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142040, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [error_ends_span] enabled -> true\n#13 8.650 [error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:54,\n#13 8.650     fields: {message},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142040, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Info,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:54,\n#13 8.650     fields: {message},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142040, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(EVENT),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 test error_ends_span ... ok\n#13 8.650 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.650 ----> [span_on_drop] check MockSpan { name: \"foo\" } against actual parent with Id=Id(1)\n#13 8.650 [span_on_drop] exit: foo; id=Id(1);\n#13 8.650 [span_on_drop] enter: foo; id=Id(1);\n#13 8.650 [span_on_drop] exit: foo; id=Id(1);\n#13 8.650 [span_on_drop] drop_span: foo; id=Id(1); refs=1;\n#13 8.650 [span_on_drop] register_callsite: Metadata {\n#13 8.650     name: \"bar\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:100,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142070, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled: Metadata {\n#13 8.650     name: \"bar\",\n#13 8.650     target: \"std_future\",\n#13 8.650     level: Level(\n#13 8.650         Trace,\n#13 8.650     ),\n#13 8.650     module_path: \"std_future\",\n#13 8.650     location: tracing-futures/tests/std_future.rs:100,\n#13 8.650     fields: {},\n#13 8.650     callsite: Identifier(Pointer { addr: 0x557c4b142070, metadata: DynMetadata(0x557c4b1318b8) }),\n#13 8.650     kind: Kind(SPAN),\n#13 8.650 }\n#13 8.650 [span_on_drop] enabled -> true\n#13 8.650 [span_on_drop] new_span: name=\"bar\"; target=\"std_future\"; id=Id(2);\n#13 8.650 [span_on_drop] enter: bar; id=Id(2);\n#13 8.650 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.650 ----> [span_on_drop] check MockSpan { name: \"bar\" } against actual parent with Id=Id(2)\n#13 8.650 [span_on_drop] exit: bar; id=Id(2);\n#13 8.650 [span_on_drop] drop_span: bar; id=Id(2); refs=1;\n#13 8.650 test span_on_drop ... ok\n#13 8.650 \n#13 8.650 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 1 test\n#13 8.650 test socket::cmsg_buffer_size_for_one_fd ... ok\n#13 8.650 \n#13 8.650 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 8.650 \n#13 8.650 running 11 tests\n#13 8.650 test custom_priorities ... FAILED\n#13 8.650 test internal_null_byte ... FAILED\n#13 8.650 test multiline_message ... FAILED\n#13 8.650 test journal_fields ... FAILED\n#13 8.650 test multiline_message_trailing_newline ... FAILED\n#13 8.650 test multiple_spans_metadata ... FAILED\n#13 8.650 test simple_metadata ... FAILED\n#13 8.650 test simple_message ... FAILED\n#13 8.650 test spans_field_collision ... FAILED\n#13 8.650 test span_metadata ... FAILED\n#13 8.650 test large_message ... FAILED\n#13 8.650 \n#13 8.650 failures:\n#13 8.650 \n#13 8.650 failures:\n#13 8.650     custom_priorities\n#13 8.650     internal_null_byte\n#13 8.650     journal_fields\n#13 8.650     large_message\n#13 8.650     multiline_message\n#13 8.650     multiline_message_trailing_newline\n#13 8.650     multiple_spans_metadata\n#13 8.650     simple_message\n#13 8.650     simple_metadata\n#13 8.650     span_metadata\n#13 8.650     spans_field_collision\n#13 8.650 \n#13 8.650 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.650 \n#13 ERROR: process \"/bin/sh -c set -eux;     cargo test --workspace -- --nocapture\" did not complete successfully: exit code: 101\n------\n > [stage-0  7/14] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo test --workspace -- --nocapture:\n8.650     multiline_message\n8.650     multiline_message_trailing_newline\n8.650     multiple_spans_metadata\n8.650     simple_message\n8.650     simple_metadata\n8.650     span_metadata\n8.650     spans_field_collision\n8.650 \n8.650 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n8.650 \n------\nERROR: failed to solve: process \"/bin/sh -c set -eux;     cargo test --workspace -- --nocapture\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}