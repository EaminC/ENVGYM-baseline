{
  "timestamp": "20250831_155124",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756655473",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.01kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.1s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/rust:latest\n#5 DONE 0.1s\n\n#6 [stage-0  1/11] FROM docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf\n#6 resolve docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf done\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 4.80MB 0.1s done\n#7 DONE 0.1s\n\n#8 [stage-0  2/11] RUN apt-get update &&     apt-get install -y pkg-config libssl-dev chromium &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [stage-0  3/11] RUN --mount=type=cache,target=/usr/local/cargo/registry     rustup component add rustfmt clippy &&     rustup target add wasm32-unknown-unknown &&     rustup toolchain install nightly &&     cargo install cargo-hack cargo-minimal-versions wasm-pack cargo-nextest\n#9 CACHED\n\n#10 [stage-0  4/11] WORKDIR /workspace\n#10 CACHED\n\n#11 [stage-0  5/11] COPY . .\n#11 DONE 0.1s\n\n#12 [stage-0  6/11] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo build --workspace\n#12 0.225 + cargo build --workspace\n#12 0.293     Updating crates.io index\n#12 1.039      Locking 332 packages to latest compatible versions\n#12 1.041       Adding ahash v0.7.8 (available: v0.8.12)\n#12 1.065       Adding criterion v0.3.6 (available: v0.7.0)\n#12 1.068       Adding crossterm v0.28.1 (available: v0.29.0)\n#12 1.073       Adding futures v0.1.31 (available: v0.3.31)\n#12 1.080       Adding http v0.2.12 (available: v1.3.1)\n#12 1.088       Adding hyper v0.14.32 (available: v1.7.0)\n#12 1.091       Adding inferno v0.11.21 (available: v0.12.3)\n#12 1.097       Adding lru v0.7.8 (available: v0.16.0)\n#12 1.098       Adding mio v0.6.23 (available: v1.0.4)\n#12 1.109       Adding rand v0.7.3 (available: v0.9.2)\n#12 1.141       Adding snafu v0.6.10 (available: v0.8.8)\n#12 1.152       Adding tokio v0.1.22 (available: v1.47.1)\n#12 1.158       Adding tower v0.4.13 (available: v0.5.2)\n#12 1.160       Adding unicode-width v0.2.0 (available: v0.2.1)\n#12 1.265     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.98s\n#12 DONE 1.4s\n\n#13 [stage-0  7/11] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo test --workspace -- --nocapture;     cargo nextest run --profile ci;     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender;     cargo +nightly bench --workspace\n#13 0.361 + cargo test --workspace -- --nocapture\n#13 0.563     Finished `test` profile [unoptimized + debuginfo] target(s) in 0.15s\n#13 0.588      Running unittests src/lib.rs (target/debug/deps/tracing-923b47c8b5a17290)\n#13 0.590 \n#13 0.590 running 1 test\n#13 0.590 test span::test::test_record_backwards_compat ... ok\n#13 0.590 \n#13 0.590 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.590 \n#13 0.591      Running tests/enabled.rs (target/debug/deps/enabled-bd0f7fa6f9ef314d)\n#13 0.593 \n#13 0.593 running 2 tests\n#13 0.593 [level_and_target] register_callsite: Metadata {\n#13 0.593     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.593     target: \"debug_module\",\n#13 0.593     level: Level(\n#13 0.593         Debug,\n#13 0.593     ),\n#13 0.593     module_path: \"enabled\",\n#13 0.593     location: tracing/tests/enabled.rs:21,\n#13 0.593     fields: {},\n#13 0.593     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.593     kind: Kind(HINT),\n#13 0.593 }\n#13 0.593 [level_and_target] enabled: Metadata {\n#13 0.593     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.593     target: \"debug_module\",\n#13 0.593     level: Level(\n#13 0.593         Debug,\n#13 0.593     ),\n#13 0.593     module_path: \"enabled\",\n#13 0.593     location: tracing/tests/enabled.rs:21,\n#13 0.593     fields: {},\n#13 0.593     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.593     kind: Kind(HINT),\n#13 0.593 }\n#13 0.593 [level_and_target] enabled -> true\n#13 0.593 [level_and_target] enabled: Metadata {\n#13 0.593     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.593     target: \"debug_module\",\n#13 0.593     level: Level(\n#13 0.593         Debug,\n#13 0.593     ),\n#13 0.593     module_path: \"enabled\",\n#13 0.593     location: tracing/tests/enabled.rs:21,\n#13 0.593     fields: {},\n#13 0.593     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.593     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> true\n#13 0.594 [level_and_target] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.594     target: \"debug_module\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:21,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.594     target: \"debug_module\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:21,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> true\n#13 0.594 [span_and_event] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.594     target: \"debug_module\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:21,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.594     target: \"debug_module\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:21,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7010, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled -> true\n#13 0.594 [level_and_target] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Trace,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:47,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7058, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Trace,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:47,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7058, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> false\n#13 0.594 [level_and_target] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Error,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:22,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7028, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Error,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:22,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7028, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> true\n#13 0.594 [span_and_event] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Trace,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:47,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7058, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Trace,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:47,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7058, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled -> false\n#13 0.594 [span_and_event] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Error,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:22,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7028, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Error,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:22,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7028, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled -> true\n#13 0.594 [level_and_target] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:48,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:48,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> false\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Error,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:22,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7028, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> true\n#13 0.594 [span_and_event] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:48,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:48,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled -> true\n#13 0.594 [level_and_target] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:23,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7040, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:23,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7040, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(HINT),\n#13 0.594 }\n#13 0.594 [level_and_target] enabled -> false\n#13 0.594 [span_and_event] enabled: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:48,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.594     kind: Kind(EVENT | HINT),\n#13 0.594 }\n#13 0.594 [span_and_event] enabled -> true\n#13 0.594 [span_and_event] register_callsite: Metadata {\n#13 0.594     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.594     target: \"enabled\",\n#13 0.594     level: Level(\n#13 0.594         Debug,\n#13 0.594     ),\n#13 0.594     module_path: \"enabled\",\n#13 0.594     location: tracing/tests/enabled.rs:23,\n#13 0.594     fields: {},\n#13 0.594     callsite: Identifier(Pointer { addr: 0x55f9f9cd7040, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.595     target: \"enabled\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:23,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd7040, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> false\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.595     target: \"enabled\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:48,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd7070, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(EVENT | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 [span_and_event] register_callsite: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.595     target: \"enabled\",\n#13 0.595     level: Level(\n#13 0.595         Trace,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:49,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd7088, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.595     target: \"enabled\",\n#13 0.595     level: Level(\n#13 0.595         Trace,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:49,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd7088, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.595     target: \"enabled\",\n#13 0.595     level: Level(\n#13 0.595         Trace,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:49,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd7088, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 test level_and_target ... [span_and_event] register_callsite: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:52,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70a0, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:52,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70a0, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:52,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70a0, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(SPAN | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 ok[span_and_event] register_callsite: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:53,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70b8, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(EVENT | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:53,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70b8, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(EVENT | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 \n#13 0.595 [span_and_event] enabled: Metadata {\n#13 0.595     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.595     target: \"debug_module\",\n#13 0.595     level: Level(\n#13 0.595         Debug,\n#13 0.595     ),\n#13 0.595     module_path: \"enabled\",\n#13 0.595     location: tracing/tests/enabled.rs:53,\n#13 0.595     fields: {},\n#13 0.595     callsite: Identifier(Pointer { addr: 0x55f9f9cd70b8, metadata: DynMetadata(0x55f9f9cc7900) }),\n#13 0.595     kind: Kind(EVENT | HINT),\n#13 0.595 }\n#13 0.595 [span_and_event] enabled -> true\n#13 0.595 test span_and_event ... ok\n#13 0.595 \n#13 0.595 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.595 \n#13 0.595      Running tests/event.rs (target/debug/deps/event-5b5e69cada366cbb)\n#13 0.597 \n#13 0.597 running 23 tests\n#13 0.598 [borrowed_field] register_callsite: Metadata {\n#13 0.598     name: \"fake\",\n#13 0.598     target: \"tracing_mock::field\",\n#13 0.598     level: Level(\n#13 0.598         Trace,\n#13 0.598     ),\n#13 0.598     module_path: \"tracing_mock::field\",\n#13 0.598     location: tracing-mock/src/field.rs:610,\n#13 0.598     fields: {fake_field},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled: Metadata {\n#13 0.598     name: \"fake\",\n#13 0.598     target: \"tracing_mock::field\",\n#13 0.598     level: Level(\n#13 0.598         Trace,\n#13 0.598     ),\n#13 0.598     module_path: \"tracing_mock::field\",\n#13 0.598     location: tracing-mock/src/field.rs:610,\n#13 0.598     fields: {fake_field},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled -> true\n#13 0.598 [borrowed_field] register_callsite: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled -> true\n#13 0.598 [borrowed_field] register_callsite: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [borrowed_field] enabled -> true\n#13 0.598 [borrowed_field] event: event tracing/tests/event.rs:227;\n#13 0.598 [both_shorthands] register_callsite: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [both_shorthands] enabled: Metadata {\n#13 0.598     name: \"event tracing/tests/event.rs:227\",\n#13 0.598     target: \"event\",\n#13 0.598     level: Level(\n#13 0.598         Info,\n#13 0.598     ),\n#13 0.598     module_path: \"event\",\n#13 0.598     location: tracing/tests/event.rs:227,\n#13 0.598     fields: {foo},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [both_shorthands] enabled -> true\n#13 0.598 [both_shorthands] register_callsite: Metadata {\n#13 0.598     name: \"fake\",\n#13 0.598     target: \"tracing_mock::field\",\n#13 0.598     level: Level(\n#13 0.598         Trace,\n#13 0.598     ),\n#13 0.598     module_path: \"tracing_mock::field\",\n#13 0.598     location: tracing-mock/src/field.rs:610,\n#13 0.598     fields: {fake_field},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [both_shorthands] enabled: Metadata {\n#13 0.598     name: \"fake\",\n#13 0.598     target: \"tracing_mock::field\",\n#13 0.598     level: Level(\n#13 0.598         Trace,\n#13 0.598     ),\n#13 0.598     module_path: \"tracing_mock::field\",\n#13 0.598     location: tracing-mock/src/field.rs:610,\n#13 0.598     fields: {fake_field},\n#13 0.598     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.598     kind: Kind(EVENT),\n#13 0.598 }\n#13 0.598 [both_shorthands] enabled -> true\n#13 0.599 [both_shorthands] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [both_shorthands] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [both_shorthands] enabled -> true\n#13 0.599 [both_shorthands] event: event tracing/tests/event.rs:330;\n#13 0.599 [both_shorthands] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [both_shorthands] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [both_shorthands] enabled -> true\n#13 0.599 [display_shorthand] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled -> true\n#13 0.599 [display_shorthand] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:227\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:227,\n#13 0.599     fields: {foo},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:227\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:227,\n#13 0.599     fields: {foo},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled -> true\n#13 0.599 [display_shorthand] register_callsite: Metadata {\n#13 0.599     name: \"fake\",\n#13 0.599     target: \"tracing_mock::field\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"tracing_mock::field\",\n#13 0.599     location: tracing-mock/src/field.rs:610,\n#13 0.599     fields: {fake_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled: Metadata {\n#13 0.599     name: \"fake\",\n#13 0.599     target: \"tracing_mock::field\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"tracing_mock::field\",\n#13 0.599     location: tracing-mock/src/field.rs:610,\n#13 0.599     fields: {fake_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled -> true\n#13 0.599 [display_shorthand] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled -> true\n#13 0.599 [display_shorthand] event: event tracing/tests/event.rs:289;\n#13 0.599 [display_shorthand] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [display_shorthand] enabled -> true\n#13 0.599 [dotted_field_name] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:289\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:289,\n#13 0.599     fields: {my_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled -> true\n#13 0.599 [dotted_field_name] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:330\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:330,\n#13 0.599     fields: {display_field, debug_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled -> true\n#13 0.599 [dotted_field_name] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:227\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:227,\n#13 0.599     fields: {foo},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:227\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:227,\n#13 0.599     fields: {foo},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled -> true\n#13 0.599 [dotted_field_name] register_callsite: Metadata {\n#13 0.599     name: \"fake\",\n#13 0.599     target: \"tracing_mock::field\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"tracing_mock::field\",\n#13 0.599     location: tracing-mock/src/field.rs:610,\n#13 0.599     fields: {fake_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled: Metadata {\n#13 0.599     name: \"fake\",\n#13 0.599     target: \"tracing_mock::field\",\n#13 0.599     level: Level(\n#13 0.599         Trace,\n#13 0.599     ),\n#13 0.599     module_path: \"tracing_mock::field\",\n#13 0.599     location: tracing-mock/src/field.rs:610,\n#13 0.599     fields: {fake_field},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled -> true\n#13 0.599 [dotted_field_name] register_callsite: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:205\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.599     location: tracing/tests/event.rs:205,\n#13 0.599     fields: {foo.bar, foo.baz},\n#13 0.599     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.599     kind: Kind(EVENT),\n#13 0.599 }\n#13 0.599 [dotted_field_name] enabled: Metadata {\n#13 0.599     name: \"event tracing/tests/event.rs:205\",\n#13 0.599     target: \"event\",\n#13 0.599     level: Level(\n#13 0.599         Info,\n#13 0.599     ),\n#13 0.599     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:205,\n#13 0.600     fields: {foo.bar, foo.baz},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 test borrowed_field ... [debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:205\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:205,\n#13 0.600     fields: {foo.bar, foo.baz},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:205\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:205,\n#13 0.600     fields: {foo.bar, foo.baz},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 [dotted_field_name] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:289\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:289,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:289\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:289,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 [debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:289\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:289,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:289\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:289,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 [dotted_field_name] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:330\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:330,\n#13 0.600     fields: {display_field, debug_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:330\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:330,\n#13 0.600     fields: {display_field, debug_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 ok[debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:330\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:330,\n#13 0.600     fields: {display_field, debug_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:330\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:330,\n#13 0.600     fields: {display_field, debug_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 \n#13 0.600 [dotted_field_name] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:227\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:227,\n#13 0.600     fields: {foo},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:227\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:227,\n#13 0.600     fields: {foo},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 [debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:227\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:227,\n#13 0.600     fields: {foo},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:227\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Info,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:227,\n#13 0.600     fields: {foo},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 test both_shorthands ... [dotted_field_name] register_callsite: Metadata {\n#13 0.600     name: \"fake\",\n#13 0.600     target: \"tracing_mock::field\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"tracing_mock::field\",\n#13 0.600     location: tracing-mock/src/field.rs:610,\n#13 0.600     fields: {fake_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled: Metadata {\n#13 0.600     name: \"fake\",\n#13 0.600     target: \"tracing_mock::field\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"tracing_mock::field\",\n#13 0.600     location: tracing-mock/src/field.rs:610,\n#13 0.600     fields: {fake_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 [debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"fake\",\n#13 0.600     target: \"tracing_mock::field\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"tracing_mock::field\",\n#13 0.600     location: tracing-mock/src/field.rs:610,\n#13 0.600     fields: {fake_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"fake\",\n#13 0.600     target: \"tracing_mock::field\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"tracing_mock::field\",\n#13 0.600     location: tracing-mock/src/field.rs:610,\n#13 0.600     fields: {fake_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 ok\n#13 0.600 test display_shorthand ... ok\n#13 0.600 [dotted_field_name] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [dotted_field_name] enabled -> true\n#13 0.600 [debug_shorthand] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [debug_shorthand] enabled -> true\n#13 0.600 [explicit_child] register_callsite: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [explicit_child] enabled: Metadata {\n#13 0.600     name: \"event tracing/tests/event.rs:309\",\n#13 0.600     target: \"event\",\n#13 0.600     level: Level(\n#13 0.600         Trace,\n#13 0.600     ),\n#13 0.600     module_path: \"event\",\n#13 0.600     location: tracing/tests/event.rs:309,\n#13 0.600     fields: {my_field},\n#13 0.600     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.600     kind: Kind(EVENT),\n#13 0.600 }\n#13 0.600 [explicit_child] enabled -> true\n#13 0.600 [dotted_field_name] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled -> true\n#13 0.601 [debug_shorthand] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled -> true\n#13 0.601 [explicit_child] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:205\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:205,\n#13 0.601     fields: {foo.bar, foo.baz},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled -> true\n#13 0.601 [dotted_field_name] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled -> true\n#13 0.601 [debug_shorthand] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled -> true\n#13 0.601 [explicit_child] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:289\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:289,\n#13 0.601     fields: {my_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled -> true\n#13 0.601 [dotted_field_name] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled -> true\n#13 0.601 [debug_shorthand] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled -> true\n#13 0.601 [explicit_child] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:330\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:330,\n#13 0.601     fields: {display_field, debug_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled -> true\n#13 0.601 [dotted_field_name] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled -> true\n#13 0.601 [debug_shorthand] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled -> true\n#13 0.601 [explicit_child] register_callsite: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled: Metadata {\n#13 0.601     name: \"event tracing/tests/event.rs:227\",\n#13 0.601     target: \"event\",\n#13 0.601     level: Level(\n#13 0.601         Info,\n#13 0.601     ),\n#13 0.601     module_path: \"event\",\n#13 0.601     location: tracing/tests/event.rs:227,\n#13 0.601     fields: {foo},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [explicit_child] enabled -> true\n#13 0.601 [dotted_field_name] register_callsite: Metadata {\n#13 0.601     name: \"fake\",\n#13 0.601     target: \"tracing_mock::field\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"tracing_mock::field\",\n#13 0.601     location: tracing-mock/src/field.rs:610,\n#13 0.601     fields: {fake_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled: Metadata {\n#13 0.601     name: \"fake\",\n#13 0.601     target: \"tracing_mock::field\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"tracing_mock::field\",\n#13 0.601     location: tracing-mock/src/field.rs:610,\n#13 0.601     fields: {fake_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [dotted_field_name] enabled -> true\n#13 0.601 [debug_shorthand] register_callsite: Metadata {\n#13 0.601     name: \"fake\",\n#13 0.601     target: \"tracing_mock::field\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"tracing_mock::field\",\n#13 0.601     location: tracing-mock/src/field.rs:610,\n#13 0.601     fields: {fake_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled: Metadata {\n#13 0.601     name: \"fake\",\n#13 0.601     target: \"tracing_mock::field\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"tracing_mock::field\",\n#13 0.601     location: tracing-mock/src/field.rs:610,\n#13 0.601     fields: {fake_field},\n#13 0.601     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.601     kind: Kind(EVENT),\n#13 0.601 }\n#13 0.601 [debug_shorthand] enabled -> true\n#13 0.601 [explicit_child] register_callsite: Metadata {\n#13 0.601     name: \"fake\",\n#13 0.601     target: \"tracing_mock::field\",\n#13 0.601     level: Level(\n#13 0.601         Trace,\n#13 0.601     ),\n#13 0.601     module_path: \"tracing_mock::field\",\n#13 0.601     location: tracing-mock/src/field.rs:610,\n#13 0.601     fields: {fake_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled: Metadata {\n#13 0.602     name: \"fake\",\n#13 0.602     target: \"tracing_mock::field\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"tracing_mock::field\",\n#13 0.602     location: tracing-mock/src/field.rs:610,\n#13 0.602     fields: {fake_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled -> true\n#13 0.602 [dotted_field_name] register_callsite: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled -> true\n#13 0.602 [debug_shorthand] register_callsite: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled -> true\n#13 0.602 [explicit_child] register_callsite: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled -> true\n#13 0.602 [event_with_message] register_callsite: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled: Metadata {\n#13 0.602     name: \"foo\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:346,\n#13 0.602     fields: {},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(SPAN),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled -> true\n#13 0.602 [dotted_field_name] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled -> true\n#13 0.602 [debug_shorthand] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled -> true\n#13 0.602 [explicit_child] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled -> true\n#13 0.602 [event_with_message] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:309\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:309,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled -> true\n#13 0.602 [dotted_field_name] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled -> true\n#13 0.602 [debug_shorthand] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [debug_shorthand] enabled -> true\n#13 0.602 [explicit_child] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [explicit_child] enabled -> true\n#13 0.602 [event_with_message] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:205\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Info,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:205,\n#13 0.602     fields: {foo.bar, foo.baz},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [event_with_message] enabled -> true\n#13 0.602 [dotted_field_name] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:289\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:289,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:289\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:289,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.602     kind: Kind(EVENT),\n#13 0.602 }\n#13 0.602 [dotted_field_name] enabled -> true\n#13 0.602 [debug_shorthand] register_callsite: Metadata {\n#13 0.602     name: \"event tracing/tests/event.rs:289\",\n#13 0.602     target: \"event\",\n#13 0.602     level: Level(\n#13 0.602         Trace,\n#13 0.602     ),\n#13 0.602     module_path: \"event\",\n#13 0.602     location: tracing/tests/event.rs:289,\n#13 0.602     fields: {my_field},\n#13 0.602     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:289\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:289,\n#13 0.603     fields: {my_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled -> true\n#13 0.603 [explicit_child] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:289\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:289,\n#13 0.603     fields: {my_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:289\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:289,\n#13 0.603     fields: {my_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled -> true\n#13 0.603 [event_with_message] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:289\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:289,\n#13 0.603     fields: {my_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:289\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:289,\n#13 0.603     fields: {my_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled -> true\n#13 0.603 [dotted_field_name] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled -> true\n#13 0.603 [debug_shorthand] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled -> true\n#13 0.603 [explicit_child] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled -> true\n#13 0.603 [event_with_message] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:330\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:330,\n#13 0.603     fields: {display_field, debug_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled -> true\n#13 0.603 [dotted_field_name] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled -> true\n#13 0.603 [debug_shorthand] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled -> true\n#13 0.603 [explicit_child] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled -> true\n#13 0.603 [event_with_message] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:227\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Info,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:227,\n#13 0.603     fields: {foo},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled -> true\n#13 0.603 [dotted_field_name] register_callsite: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [dotted_field_name] enabled -> true\n#13 0.603 [debug_shorthand] register_callsite: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [debug_shorthand] enabled -> true\n#13 0.603 [explicit_child] register_callsite: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [explicit_child] enabled -> true\n#13 0.603 [event_with_message] register_callsite: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled: Metadata {\n#13 0.603     name: \"fake\",\n#13 0.603     target: \"tracing_mock::field\",\n#13 0.603     level: Level(\n#13 0.603         Trace,\n#13 0.603     ),\n#13 0.603     module_path: \"tracing_mock::field\",\n#13 0.603     location: tracing-mock/src/field.rs:610,\n#13 0.603     fields: {fake_field},\n#13 0.603     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.603     kind: Kind(EVENT),\n#13 0.603 }\n#13 0.603 [event_with_message] enabled -> true\n#13 0.603 [dotted_field_name] register_callsite: Metadata {\n#13 0.603     name: \"event tracing/tests/event.rs:72\",\n#13 0.603     target: \"event\",\n#13 0.603     level: Level(\n#13 0.603         Debug,\n#13 0.603     ),\n#13 0.603     module_path: \"event\",\n#13 0.603     location: tracing/tests/event.rs:72,\n#13 0.603     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled -> true\n#13 0.604 [debug_shorthand] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled -> true\n#13 0.604 [explicit_child] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled -> true\n#13 0.604 [event_with_message] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled -> true\n#13 0.604 [event_without_message] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:72\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Debug,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:72,\n#13 0.604     fields: {message},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled -> true\n#13 0.604 [dotted_field_name] register_callsite: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled -> true\n#13 0.604 [debug_shorthand] register_callsite: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled -> true\n#13 0.604 [explicit_child] register_callsite: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled -> true\n#13 0.604 [event_with_message] register_callsite: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled -> true\n#13 0.604 [event_without_message] register_callsite: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled: Metadata {\n#13 0.604     name: \"foo\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:346,\n#13 0.604     fields: {},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(SPAN),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled -> true\n#13 0.604 [dotted_field_name] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled -> true\n#13 0.604 [debug_shorthand] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled -> true\n#13 0.604 [explicit_child] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [explicit_child] enabled -> true\n#13 0.604 [event_with_message] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_with_message] enabled -> true\n#13 0.604 [event_without_message] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:309\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Trace,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:309,\n#13 0.604     fields: {my_field},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [event_without_message] enabled -> true\n#13 0.604 [dotted_field_name] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:205\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Info,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:205,\n#13 0.604     fields: {foo.bar, foo.baz},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:205\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Info,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:205,\n#13 0.604     fields: {foo.bar, foo.baz},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [dotted_field_name] enabled -> true\n#13 0.604 [debug_shorthand] register_callsite: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:205\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Info,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:205,\n#13 0.604     fields: {foo.bar, foo.baz},\n#13 0.604     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.604     kind: Kind(EVENT),\n#13 0.604 }\n#13 0.604 [debug_shorthand] enabled: Metadata {\n#13 0.604     name: \"event tracing/tests/event.rs:205\",\n#13 0.604     target: \"event\",\n#13 0.604     level: Level(\n#13 0.604         Info,\n#13 0.604     ),\n#13 0.604     module_path: \"event\",\n#13 0.604     location: tracing/tests/event.rs:205,\n#13 0.604     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled -> true\n#13 0.605 [explicit_child] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled -> true\n#13 0.605 [event_with_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled -> true\n#13 0.605 [event_without_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:205\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:205,\n#13 0.605     fields: {foo.bar, foo.baz},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled -> true\n#13 0.605 [dotted_field_name] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled -> true\n#13 0.605 [debug_shorthand] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled -> true\n#13 0.605 [explicit_child] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled -> true\n#13 0.605 [event_with_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled -> true\n#13 0.605 [event_without_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:289\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:289,\n#13 0.605     fields: {my_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled -> true\n#13 0.605 [dotted_field_name] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled -> true\n#13 0.605 [debug_shorthand] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled -> true\n#13 0.605 [explicit_child] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled -> true\n#13 0.605 [event_with_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_with_message] enabled -> true\n#13 0.605 [event_without_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:330\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Trace,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:330,\n#13 0.605     fields: {display_field, debug_field},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [event_without_message] enabled -> true\n#13 0.605 [dotted_field_name] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [dotted_field_name] enabled -> true\n#13 0.605 [debug_shorthand] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [debug_shorthand] enabled -> true\n#13 0.605 [explicit_child] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.605     level: Level(\n#13 0.605         Info,\n#13 0.605     ),\n#13 0.605     module_path: \"event\",\n#13 0.605     location: tracing/tests/event.rs:227,\n#13 0.605     fields: {foo},\n#13 0.605     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.605     kind: Kind(EVENT),\n#13 0.605 }\n#13 0.605 [explicit_child] enabled -> true\n#13 0.605 [event_with_message] register_callsite: Metadata {\n#13 0.605     name: \"event tracing/tests/event.rs:227\",\n#13 0.605     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:227,\n#13 0.606     fields: {foo},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:227\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:227,\n#13 0.606     fields: {foo},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled -> true\n#13 0.606 [event_without_message] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:227\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:227,\n#13 0.606     fields: {foo},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:227\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:227,\n#13 0.606     fields: {foo},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled -> true\n#13 0.606 [dotted_field_name] register_callsite: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled -> true\n#13 0.606 [debug_shorthand] register_callsite: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [debug_shorthand] enabled: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [debug_shorthand] enabled -> true\n#13 0.606 [explicit_child] register_callsite: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child] enabled: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child] enabled -> true\n#13 0.606 [event_with_message] register_callsite: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled -> true\n#13 0.606 [event_without_message] register_callsite: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled: Metadata {\n#13 0.606     name: \"fake\",\n#13 0.606     target: \"tracing_mock::field\",\n#13 0.606     level: Level(\n#13 0.606         Trace,\n#13 0.606     ),\n#13 0.606     module_path: \"tracing_mock::field\",\n#13 0.606     location: tracing-mock/src/field.rs:610,\n#13 0.606     fields: {fake_field},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled -> true\n#13 0.606 [dotted_field_name] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled -> true\n#13 0.606 [debug_shorthand] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [debug_shorthand] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [debug_shorthand] enabled -> true\n#13 0.606 [explicit_child] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child] enabled -> true\n#13 0.606 [event_with_message] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_with_message] enabled -> true\n#13 0.606 [event_without_message] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [event_without_message] enabled -> true\n#13 0.606 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child_at_levels] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:50\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Info,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:50,\n#13 0.606     fields: {answer, to_question},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [explicit_child_at_levels] enabled -> true\n#13 0.606 [dotted_field_name] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:72\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Debug,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:72,\n#13 0.606     fields: {message},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:72\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Debug,\n#13 0.606     ),\n#13 0.606     module_path: \"event\",\n#13 0.606     location: tracing/tests/event.rs:72,\n#13 0.606     fields: {message},\n#13 0.606     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.606     kind: Kind(EVENT),\n#13 0.606 }\n#13 0.606 [dotted_field_name] enabled -> true\n#13 0.606 [debug_shorthand] register_callsite: Metadata {\n#13 0.606     name: \"event tracing/tests/event.rs:72\",\n#13 0.606     target: \"event\",\n#13 0.606     level: Level(\n#13 0.606         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [debug_shorthand] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [debug_shorthand] enabled -> true\n#13 0.607 [explicit_child] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [explicit_child] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [explicit_child] enabled -> true\n#13 0.607 [event_with_message] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [event_with_message] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [event_with_message] enabled -> true\n#13 0.607 [event_without_message] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [event_without_message] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [event_without_message] enabled -> true\n#13 0.607 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [explicit_child_at_levels] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:72\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Debug,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:72,\n#13 0.607     fields: {message},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [explicit_child_at_levels] enabled -> true\n#13 0.607 [dotted_field_name] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [dotted_field_name] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [dotted_field_name] enabled -> true\n#13 0.607 [debug_shorthand] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [debug_shorthand] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [debug_shorthand] enabled -> true\n#13 0.607 [explicit_child] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [explicit_child] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [explicit_child] enabled -> true\n#13 0.607 [event_with_message] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [event_with_message] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [event_with_message] enabled -> true\n#13 0.607 [event_without_message] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [event_without_message] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [event_without_message] enabled -> true\n#13 0.607 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [explicit_child_at_levels] enabled: Metadata {\n#13 0.607     name: \"foo\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:346,\n#13 0.607     fields: {},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(SPAN),\n#13 0.607 }\n#13 0.607 [explicit_child_at_levels] enabled -> true\n#13 0.607 [dotted_field_name] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:309\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:309,\n#13 0.607     fields: {my_field},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [dotted_field_name] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:309\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:309,\n#13 0.607     fields: {my_field},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [dotted_field_name] enabled -> true\n#13 0.607 [debug_shorthand] register_callsite: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:309\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:309,\n#13 0.607     fields: {my_field},\n#13 0.607     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.607     kind: Kind(EVENT),\n#13 0.607 }\n#13 0.607 [debug_shorthand] enabled: Metadata {\n#13 0.607     name: \"event tracing/tests/event.rs:309\",\n#13 0.607     target: \"event\",\n#13 0.607     level: Level(\n#13 0.607         Trace,\n#13 0.607     ),\n#13 0.607     module_path: \"event\",\n#13 0.607     location: tracing/tests/event.rs:309,\n#13 0.607     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [debug_shorthand] enabled -> true\n#13 0.608 [explicit_child] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child] enabled -> true\n#13 0.608 [event_with_message] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_with_message] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_with_message] enabled -> true\n#13 0.608 [event_without_message] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_without_message] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_without_message] enabled -> true\n#13 0.608 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child_at_levels] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:309\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:309,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child_at_levels] enabled -> true\n#13 0.608 [dotted_field_name] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [dotted_field_name] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [dotted_field_name] enabled -> true\n#13 0.608 [debug_shorthand] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [debug_shorthand] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [debug_shorthand] enabled -> true\n#13 0.608 [explicit_child] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child] enabled -> true\n#13 0.608 [event_with_message] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_with_message] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_with_message] enabled -> true\n#13 0.608 [event_without_message] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_without_message] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [event_without_message] enabled -> true\n#13 0.608 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child_at_levels] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:205\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Info,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:205,\n#13 0.608     fields: {foo.bar, foo.baz},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [explicit_child_at_levels] enabled -> true\n#13 0.608 [dotted_field_name] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:289\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:289,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [dotted_field_name] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:289\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:289,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [dotted_field_name] enabled -> true\n#13 0.608 [debug_shorthand] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:289\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:289,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [debug_shorthand] enabled: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:289\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:289,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.608 }\n#13 0.608 [debug_shorthand] enabled -> true\n#13 0.608 [explicit_child] register_callsite: Metadata {\n#13 0.608     name: \"event tracing/tests/event.rs:289\",\n#13 0.608     target: \"event\",\n#13 0.608     level: Level(\n#13 0.608         Trace,\n#13 0.608     ),\n#13 0.608     module_path: \"event\",\n#13 0.608     location: tracing/tests/event.rs:289,\n#13 0.608     fields: {my_field},\n#13 0.608     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.608     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled -> true\n#13 0.609 [event_with_message] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_with_message] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_with_message] enabled -> true\n#13 0.609 [event_without_message] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_without_message] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_without_message] enabled -> true\n#13 0.609 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child_at_levels] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:289\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:289,\n#13 0.609     fields: {my_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child_at_levels] enabled -> true\n#13 0.609 [dotted_field_name] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [dotted_field_name] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [dotted_field_name] enabled -> true\n#13 0.609 [debug_shorthand] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [debug_shorthand] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [debug_shorthand] enabled -> true\n#13 0.609 [explicit_child] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled -> true\n#13 0.609 [event_with_message] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_with_message] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_with_message] enabled -> true\n#13 0.609 [event_without_message] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_without_message] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_without_message] enabled -> true\n#13 0.609 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child_at_levels] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:330\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Trace,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:330,\n#13 0.609     fields: {display_field, debug_field},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child_at_levels] enabled -> true\n#13 0.609 [dotted_field_name] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [dotted_field_name] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [dotted_field_name] enabled -> true\n#13 0.609 [debug_shorthand] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [debug_shorthand] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [debug_shorthand] enabled -> true\n#13 0.609 [explicit_child] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [explicit_child] enabled -> true\n#13 0.609 [event_with_message] register_callsite: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.609         Info,\n#13 0.609     ),\n#13 0.609     module_path: \"event\",\n#13 0.609     location: tracing/tests/event.rs:227,\n#13 0.609     fields: {foo},\n#13 0.609     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.609     kind: Kind(EVENT),\n#13 0.609 }\n#13 0.609 [event_with_message] enabled: Metadata {\n#13 0.609     name: \"event tracing/tests/event.rs:227\",\n#13 0.609     target: \"event\",\n#13 0.609     level: Level(\n#13 0.610         Info,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:227,\n#13 0.610     fields: {foo},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_with_message] enabled -> true\n#13 0.610 [event_without_message] register_callsite: Metadata {\n#13 0.610     name: \"event tracing/tests/event.rs:227\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Info,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:227,\n#13 0.610     fields: {foo},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_without_message] enabled: Metadata {\n#13 0.610     name: \"event tracing/tests/event.rs:227\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Info,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:227,\n#13 0.610     fields: {foo},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_without_message] enabled -> true\n#13 0.610 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.610     name: \"event tracing/tests/event.rs:227\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Info,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:227,\n#13 0.610     fields: {foo},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child_at_levels] enabled: Metadata {\n#13 0.610     name: \"event tracing/tests/event.rs:227\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Info,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:227,\n#13 0.610     fields: {foo},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child_at_levels] enabled -> true\n#13 0.610 [dotted_field_name] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [dotted_field_name] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [dotted_field_name] enabled -> true\n#13 0.610 [debug_shorthand] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [debug_shorthand] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [debug_shorthand] enabled -> true\n#13 0.610 [explicit_child] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child] enabled -> true\n#13 0.610 [event_with_message] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_with_message] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_with_message] enabled -> true\n#13 0.610 [event_without_message] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_without_message] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [event_without_message] enabled -> true\n#13 0.610 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child_at_levels] enabled: Metadata {\n#13 0.610     name: \"fake\",\n#13 0.610     target: \"tracing_mock::field\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"tracing_mock::field\",\n#13 0.610     location: tracing-mock/src/field.rs:610,\n#13 0.610     fields: {fake_field},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.610     kind: Kind(EVENT),\n#13 0.610 }\n#13 0.610 [explicit_child_at_levels] enabled -> true\n#13 0.610 [dotted_field_name] register_callsite: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:367,\n#13 0.610     fields: {},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(SPAN),\n#13 0.610 }\n#13 0.610 [dotted_field_name] enabled: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:367,\n#13 0.610     fields: {},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(SPAN),\n#13 0.610 }\n#13 0.610 [dotted_field_name] enabled -> true\n#13 0.610 [debug_shorthand] register_callsite: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:367,\n#13 0.610     fields: {},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(SPAN),\n#13 0.610 }\n#13 0.610 [debug_shorthand] enabled: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:367,\n#13 0.610     fields: {},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(SPAN),\n#13 0.610 }\n#13 0.610 [debug_shorthand] enabled -> true\n#13 0.610 [explicit_child] register_callsite: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.610     location: tracing/tests/event.rs:367,\n#13 0.610     fields: {},\n#13 0.610     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.610     kind: Kind(SPAN),\n#13 0.610 }\n#13 0.610 [explicit_child] enabled: Metadata {\n#13 0.610     name: \"foo\",\n#13 0.610     target: \"event\",\n#13 0.610     level: Level(\n#13 0.610         Trace,\n#13 0.610     ),\n#13 0.610     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [explicit_child] enabled -> true\n#13 0.611 [event_with_message] register_callsite: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [event_with_message] enabled: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [event_with_message] enabled -> true\n#13 0.611 [event_without_message] register_callsite: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [event_without_message] enabled: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [event_without_message] enabled -> true\n#13 0.611 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [explicit_child_at_levels] enabled: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [explicit_child_at_levels] enabled -> true\n#13 0.611 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.611     name: \"foo\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Trace,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:367,\n#13 0.611     fields: {},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(SPAN),\n#13 0.611 }\n#13 0.611 [keyword_ident_in_field_name] enabled -> true\n#13 0.611 [dotted_field_name] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [dotted_field_name] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [dotted_field_name] enabled -> true\n#13 0.611 [debug_shorthand] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [debug_shorthand] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [debug_shorthand] enabled -> true\n#13 0.611 [explicit_child] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [explicit_child] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [explicit_child] enabled -> true\n#13 0.611 [event_with_message] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [event_with_message] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [event_with_message] enabled -> true\n#13 0.611 [event_without_message] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [event_without_message] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [event_without_message] enabled -> true\n#13 0.611 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [explicit_child_at_levels] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [explicit_child_at_levels] enabled -> true\n#13 0.611 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:50\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Info,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:50,\n#13 0.611     fields: {answer, to_question},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2010, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [keyword_ident_in_field_name] enabled -> true\n#13 0.611 [dotted_field_name] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:72\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Debug,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:72,\n#13 0.611     fields: {message},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [dotted_field_name] enabled: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:72\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Debug,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.611     location: tracing/tests/event.rs:72,\n#13 0.611     fields: {message},\n#13 0.611     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.611     kind: Kind(EVENT),\n#13 0.611 }\n#13 0.611 [dotted_field_name] enabled -> true\n#13 0.611 [debug_shorthand] register_callsite: Metadata {\n#13 0.611     name: \"event tracing/tests/event.rs:72\",\n#13 0.611     target: \"event\",\n#13 0.611     level: Level(\n#13 0.611         Debug,\n#13 0.611     ),\n#13 0.611     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [debug_shorthand] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [debug_shorthand] enabled -> true\n#13 0.612 [explicit_child] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [explicit_child] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [explicit_child] enabled -> true\n#13 0.612 [event_with_message] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [event_with_message] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [event_with_message] enabled -> true\n#13 0.612 [event_without_message] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [event_without_message] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [event_without_message] enabled -> true\n#13 0.612 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [explicit_child_at_levels] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [explicit_child_at_levels] enabled -> true\n#13 0.612 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:72\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Debug,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:72,\n#13 0.612     fields: {message},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2058, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(EVENT),\n#13 0.612 }\n#13 0.612 [keyword_ident_in_field_name] enabled -> true\n#13 0.612 [dotted_field_name] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [dotted_field_name] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [dotted_field_name] enabled -> true\n#13 0.612 [debug_shorthand] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [debug_shorthand] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [debug_shorthand] enabled -> true\n#13 0.612 [explicit_child] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [explicit_child] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [explicit_child] enabled -> true\n#13 0.612 [event_with_message] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [event_with_message] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [event_with_message] enabled -> true\n#13 0.612 [event_without_message] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [event_without_message] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [event_without_message] enabled -> true\n#13 0.612 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [explicit_child_at_levels] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [explicit_child_at_levels] enabled -> true\n#13 0.612 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.612     name: \"foo\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:346,\n#13 0.612     fields: {},\n#13 0.612     callsite: Identifier(Pointer { addr: 0x5622831d2148, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.612     kind: Kind(SPAN),\n#13 0.612 }\n#13 0.612 [keyword_ident_in_field_name] enabled -> true\n#13 0.612 [dotted_field_name] register_callsite: Metadata {\n#13 0.612     name: \"event tracing/tests/event.rs:309\",\n#13 0.612     target: \"event\",\n#13 0.612     level: Level(\n#13 0.612         Trace,\n#13 0.612     ),\n#13 0.612     module_path: \"event\",\n#13 0.612     location: tracing/tests/event.rs:309,\n#13 0.612     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [dotted_field_name] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [dotted_field_name] enabled -> true\n#13 0.613 [debug_shorthand] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [debug_shorthand] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [debug_shorthand] enabled -> true\n#13 0.613 [explicit_child] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child] enabled -> true\n#13 0.613 [event_with_message] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_with_message] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_with_message] enabled -> true\n#13 0.613 [event_without_message] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_without_message] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_without_message] enabled -> true\n#13 0.613 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child_at_levels] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child_at_levels] enabled -> true\n#13 0.613 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:309\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Trace,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:309,\n#13 0.613     fields: {my_field},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d2118, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [keyword_ident_in_field_name] enabled -> true\n#13 0.613 [dotted_field_name] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [dotted_field_name] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [dotted_field_name] enabled -> true\n#13 0.613 [debug_shorthand] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [debug_shorthand] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [debug_shorthand] enabled -> true\n#13 0.613 [explicit_child] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child] enabled -> true\n#13 0.613 [event_with_message] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_with_message] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_with_message] enabled -> true\n#13 0.613 [event_without_message] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_without_message] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [event_without_message] enabled -> true\n#13 0.613 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child_at_levels] enabled: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.613     module_path: \"event\",\n#13 0.613     location: tracing/tests/event.rs:205,\n#13 0.613     fields: {foo.bar, foo.baz},\n#13 0.613     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.613     kind: Kind(EVENT),\n#13 0.613 }\n#13 0.613 [explicit_child_at_levels] enabled -> true\n#13 0.613 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.613     name: \"event tracing/tests/event.rs:205\",\n#13 0.613     target: \"event\",\n#13 0.613     level: Level(\n#13 0.613         Info,\n#13 0.613     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:205,\n#13 0.614     fields: {foo.bar, foo.baz},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:205\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Info,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:205,\n#13 0.614     fields: {foo.bar, foo.baz},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d20d0, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [keyword_ident_in_field_name] enabled -> true\n#13 0.614 [dotted_field_name] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [dotted_field_name] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [dotted_field_name] enabled -> true\n#13 0.614 [debug_shorthand] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [debug_shorthand] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [debug_shorthand] enabled -> true\n#13 0.614 [explicit_child] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child] enabled -> true\n#13 0.614 [event_with_message] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_with_message] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_with_message] enabled -> true\n#13 0.614 [event_without_message] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_without_message] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_without_message] enabled -> true\n#13 0.614 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child_at_levels] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child_at_levels] enabled -> true\n#13 0.614 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:289\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:289,\n#13 0.614     fields: {my_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2100, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [keyword_ident_in_field_name] enabled -> true\n#13 0.614 [dotted_field_name] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [dotted_field_name] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [dotted_field_name] enabled -> true\n#13 0.614 [debug_shorthand] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [debug_shorthand] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [debug_shorthand] enabled -> true\n#13 0.614 [explicit_child] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [explicit_child] enabled -> true\n#13 0.614 [event_with_message] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_with_message] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_with_message] enabled -> true\n#13 0.614 [event_without_message] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_without_message] enabled: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.614     level: Level(\n#13 0.614         Trace,\n#13 0.614     ),\n#13 0.614     module_path: \"event\",\n#13 0.614     location: tracing/tests/event.rs:330,\n#13 0.614     fields: {display_field, debug_field},\n#13 0.614     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.614     kind: Kind(EVENT),\n#13 0.614 }\n#13 0.614 [event_without_message] enabled -> true\n#13 0.614 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.614     name: \"event tracing/tests/event.rs:330\",\n#13 0.614     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:330,\n#13 0.615     fields: {display_field, debug_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child_at_levels] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:330\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:330,\n#13 0.615     fields: {display_field, debug_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child_at_levels] enabled -> true\n#13 0.615 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:330\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:330,\n#13 0.615     fields: {display_field, debug_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:330\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:330,\n#13 0.615     fields: {display_field, debug_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d2130, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [keyword_ident_in_field_name] enabled -> true\n#13 0.615 [dotted_field_name] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [dotted_field_name] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [dotted_field_name] enabled -> true\n#13 0.615 [debug_shorthand] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [debug_shorthand] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [debug_shorthand] enabled -> true\n#13 0.615 [explicit_child] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child] enabled -> true\n#13 0.615 [event_with_message] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [event_with_message] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [event_with_message] enabled -> true\n#13 0.615 [event_without_message] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [event_without_message] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [event_without_message] enabled -> true\n#13 0.615 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child_at_levels] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child_at_levels] enabled -> true\n#13 0.615 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.615     name: \"event tracing/tests/event.rs:227\",\n#13 0.615     target: \"event\",\n#13 0.615     level: Level(\n#13 0.615         Info,\n#13 0.615     ),\n#13 0.615     module_path: \"event\",\n#13 0.615     location: tracing/tests/event.rs:227,\n#13 0.615     fields: {foo},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d20e8, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [keyword_ident_in_field_name] enabled -> true\n#13 0.615 [dotted_field_name] register_callsite: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [dotted_field_name] enabled: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [dotted_field_name] enabled -> true\n#13 0.615 [debug_shorthand] register_callsite: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [debug_shorthand] enabled: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [debug_shorthand] enabled -> true\n#13 0.615 [explicit_child] register_callsite: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child] enabled: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [explicit_child] enabled -> true\n#13 0.615 [event_with_message] register_callsite: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.615     level: Level(\n#13 0.615         Trace,\n#13 0.615     ),\n#13 0.615     module_path: \"tracing_mock::field\",\n#13 0.615     location: tracing-mock/src/field.rs:610,\n#13 0.615     fields: {fake_field},\n#13 0.615     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.615     kind: Kind(EVENT),\n#13 0.615 }\n#13 0.615 [event_with_message] enabled: Metadata {\n#13 0.615     name: \"fake\",\n#13 0.615     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_with_message] enabled -> true\n#13 0.616 [event_without_message] register_callsite: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_without_message] enabled: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_without_message] enabled -> true\n#13 0.616 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child_at_levels] enabled: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child_at_levels] enabled -> true\n#13 0.616 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.616     name: \"fake\",\n#13 0.616     target: \"tracing_mock::field\",\n#13 0.616     level: Level(\n#13 0.616         Trace,\n#13 0.616     ),\n#13 0.616     module_path: \"tracing_mock::field\",\n#13 0.616     location: tracing-mock/src/field.rs:610,\n#13 0.616     fields: {fake_field},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d23a0, metadata: DynMetadata(0x5622831ca578) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [keyword_ident_in_field_name] enabled -> true\n#13 0.616 [dotted_field_name] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [dotted_field_name] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [dotted_field_name] enabled -> true\n#13 0.616 [debug_shorthand] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [debug_shorthand] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [debug_shorthand] enabled -> true\n#13 0.616 [explicit_child] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child] enabled -> true\n#13 0.616 [event_with_message] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_with_message] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_with_message] enabled -> true\n#13 0.616 [event_without_message] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_without_message] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [event_without_message] enabled -> true\n#13 0.616 [explicit_child_at_levels] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child_at_levels] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [explicit_child_at_levels] enabled -> true\n#13 0.616 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [keyword_ident_in_field_name] enabled -> true\n#13 0.616 [message_without_delims] register_callsite: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.616     level: Level(\n#13 0.616         Error,\n#13 0.616     ),\n#13 0.616     module_path: \"event\",\n#13 0.616     location: tracing/tests/event.rs:618,\n#13 0.616     fields: {message, crate},\n#13 0.616     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.616     kind: Kind(EVENT),\n#13 0.616 }\n#13 0.616 [message_without_delims] enabled: Metadata {\n#13 0.616     name: \"event tracing/tests/event.rs:618\",\n#13 0.616     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Error,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:618,\n#13 0.617     fields: {message, crate},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2340, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(EVENT),\n#13 0.617 }\n#13 0.617 [message_without_delims] enabled -> true\n#13 0.617 [dotted_field_name] register_callsite: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [dotted_field_name] enabled: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [dotted_field_name] enabled -> true\n#13 0.617 [debug_shorthand] register_callsite: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [debug_shorthand] enabled: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [debug_shorthand] enabled -> true\n#13 0.617 [explicit_child] register_callsite: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [explicit_child] enabled: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     location: tracing/tests/event.rs:367,\n#13 0.617     fields: {},\n#13 0.617     callsite: Identifier(Pointer { addr: 0x5622831d2178, metadata: DynMetadata(0x5622831c0928) }),\n#13 0.617     kind: Kind(SPAN),\n#13 0.617 }\n#13 0.617 [explicit_child] enabled -> true\n#13 0.617 [event_with_message] register_callsite: Metadata {\n#13 0.617     name: \"foo\",\n#13 0.617     target: \"event\",\n#13 0.617     level: Level(\n#13 0.617         Trace,\n#13 0.617     ),\n#13 0.617     module_path: \"event\",\n#13 0.617     locat\n#13 0.617 [output clipped, log limit 200KiB/s reached]\n#13 0.817      Running tests/filter_caching_is_lexically_scoped.rs (target/debug/deps/filter_caching_is_lexically_scoped-65dd074a99eb7869)\n#13 0.819      Running tests/filters_are_not_reevaluated_for_the_same_span.rs (target/debug/deps/filters_are_not_reevaluated_for_the_same_span-1d6c2b861dde1240)\n#13 0.821      Running tests/filters_are_reevaluated_for_different_call_sites.rs (target/debug/deps/filters_are_reevaluated_for_different_call_sites-9ac8aebe3f9244c1)\n#13 0.823      Running tests/filters_dont_leak.rs (target/debug/deps/filters_dont_leak-43845863a931490a)\n#13 0.827      Running tests/future_send.rs (target/debug/deps/future_send-ddb3974ef07e6d23)\n#13 0.830      Running tests/instrument.rs (target/debug/deps/instrument-a47ea8b4babde974)\n#13 0.833      Running tests/macro_imports.rs (target/debug/deps/macro_imports-fe02506a9810858b)\n#13 0.835      Running tests/macros.rs (target/debug/deps/macros-aecdd04cdc164e4e)\n#13 0.843      Running tests/macros_incompatible_concat.rs (target/debug/deps/macros_incompatible_concat-1cc000af0d6a1885)\n#13 0.845      Running tests/max_level_hint.rs (target/debug/deps/max_level_hint-cf6ffdbe63eb678b)\n#13 0.847 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.847     name: \"event tracing/tests/max_level_hint.rs:31\",\n#13 0.847     target: \"max_level_hint\",\n#13 0.847     level: Level(\n#13 0.847         Info,\n#13 0.847     ),\n#13 0.847     module_path: \"max_level_hint\",\n#13 0.847     location: tracing/tests/max_level_hint.rs:31,\n#13 0.847     fields: {message},\n#13 0.847     callsite: Identifier(Pointer { addr: 0x55f1100a8010, metadata: DynMetadata(0x55f1100984d8) }),\n#13 0.847     kind: Kind(EVENT),\n#13 0.847 }\n#13 0.847 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.847     name: \"event tracing/tests/max_level_hint.rs:33\",\n#13 0.847     target: \"max_level_hint\",\n#13 0.847     level: Level(\n#13 0.847         Warn,\n#13 0.847     ),\n#13 0.847     module_path: \"max_level_hint\",\n#13 0.847     location: tracing/tests/max_level_hint.rs:33,\n#13 0.847     fields: {message},\n#13 0.847     callsite: Identifier(Pointer { addr: 0x55f1100a8040, metadata: DynMetadata(0x55f1100984d8) }),\n#13 0.847     kind: Kind(EVENT),\n#13 0.847 }\n#13 0.848 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.848     name: \"event tracing/tests/max_level_hint.rs:35\",\n#13 0.848     target: \"max_level_hint\",\n#13 0.848     level: Level(\n#13 0.848         Error,\n#13 0.848     ),\n#13 0.848     module_path: \"max_level_hint\",\n#13 0.848     location: tracing/tests/max_level_hint.rs:35,\n#13 0.848     fields: {message},\n#13 0.848     callsite: Identifier(Pointer { addr: 0x55f1100a8070, metadata: DynMetadata(0x55f1100984d8) }),\n#13 0.848     kind: Kind(EVENT),\n#13 0.848 }\n#13 0.848      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-c4147fc0b4079d89)\n#13 0.952      Running tests/multiple_max_level_hints.rs (target/debug/deps/multiple_max_level_hints-f7f9739cbfc36991)\n#13 0.955 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.955     Info,\n#13 0.955 )\n#13 0.955 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.955     Warn,\n#13 0.955 )\n#13 0.955 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.955     Error,\n#13 0.955 )\n#13 0.955 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.955     Error,\n#13 0.955 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.956     Error,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.956     Warn,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.956     Warn,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.956     Info,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.956     Info,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.956     Debug,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.956     Debug,\n#13 0.956 )\n#13 0.956 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.956     Debug,\n#13 0.956 )\n#13 0.957      Running tests/no_subscriber.rs (target/debug/deps/no_subscriber-a50c92f97cb7f7f4)\n#13 0.960      Running tests/register_callsite_deadlock.rs (target/debug/deps/register_callsite_deadlock-42a0812960255d8b)\n#13 0.963      Running tests/scoped_clobbers_default.rs (target/debug/deps/scoped_clobbers_default-b187719e730ed561)\n#13 0.967      Running tests/span.rs (target/debug/deps/span-a7cfe38cc7bfb8c7)\n#13 1.714      Running tests/subscriber.rs (target/debug/deps/subscriber-a5a3ff6315fec54c)\n#13 1.719      Running unittests src/lib.rs (target/debug/deps/tracing_appender-04368258e11243ac)\n#13 1.722 \n#13 1.722 thread 'rolling::test::test_never_date_rounding' panicked at tracing-appender/src/rolling.rs:551:17:\n#13 1.722 internal error: entered unreachable code: Rotation::NEVER is impossible to round.\n#13 1.722 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 6.743      Running unittests src/lib.rs (target/debug/deps/tracing_attributes-77bfca6ff021554e)\n#13 6.747      Running tests/async_fn.rs (target/debug/deps/async_fn-7f67cbcf7ef6c2b0)\n#13 6.781      Running tests/dead_code.rs (target/debug/deps/dead_code-189550194a125f7a)\n#13 6.784      Running tests/destructuring.rs (target/debug/deps/destructuring-2cef51104a51a7c9)\n#13 6.795      Running tests/err.rs (target/debug/deps/err-1f4c8a07afba1e9f)\n#13 6.860      Running tests/fields.rs (target/debug/deps/fields-765d54db324829c9)\n#13 6.892      Running tests/follows_from.rs (target/debug/deps/follows_from-d88bbf60bf2e3ba0)\n#13 6.899      Running tests/instrument.rs (target/debug/deps/instrument-9d49f534aeecfb87)\n#13 6.924      Running tests/levels.rs (target/debug/deps/levels-218a1349cbf08bfb)\n#13 6.932      Running tests/names.rs (target/debug/deps/names-babb4b7a0c035795)\n#13 6.937      Running tests/parents.rs (target/debug/deps/parents-f28b3e589cd2c881)\n#13 6.941      Running tests/ret.rs (target/debug/deps/ret-3bf3c0720fd12a00)\n#13 7.000      Running tests/targets.rs (target/debug/deps/targets-97a17d23db869b34)\n#13 7.005      Running tests/ui.rs (target/debug/deps/ui-3221c9d7be663047)\n#13 7.084    Compiling tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.219     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.17s\n#13 7.274 \n#13 7.274 \n#13 7.274 test tests/ui/pass/type_shadowing.rs ... ok\n#13 7.387 \n#13 7.387 WARNINGS:\n#13 7.387 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.387 warning: unused import: `Bar::*`\n#13 7.387   --> tests/ui/pass/type_shadowing.rs:14:9\n#13 7.387    |\n#13 7.387 14 |     use Bar::*;\n#13 7.387    |         ^^^^^^\n#13 7.387    |\n#13 7.387    = note: `#[warn(unused_imports)]` on by default\n#13 7.387 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.387 \n#13 7.387 STDERR:\n#13 7.387 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.387 warning: unused import: `Bar::*`\n#13 7.387   --> /workspace/tracing-attributes/tests/ui/pass/type_shadowing.rs:14:9\n#13 7.387    |\n#13 7.387 14 |     use Bar::*;\n#13 7.387    |         ^^^^^^\n#13 7.387    |\n#13 7.387    = note: `#[warn(unused_imports)]` on by default\n#13 7.387 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.387 \n#13 7.387 \n#13 7.387 \n#13 7.429     Checking tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.466     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.07s\n#13 7.516 \n#13 7.516 \n#13 7.693 test tests/ui/fail/async_instrument.rs ... ok\n#13 7.693 test tests/ui/fail/const_instrument.rs ... ok\n#13 7.693 test tests/ui/fail/unused_instrumented_fn.rs ... ok\n#13 7.693 \n#13 7.693 \n#13 7.694      Running unittests src/lib.rs (target/debug/deps/tracing_core-734d01840db1e916)\n#13 7.698      Running tests/dispatch.rs (target/debug/deps/dispatch-75c9d1a443927b39)\n#13 7.701      Running tests/global_dispatch.rs (target/debug/deps/global_dispatch-e28841795b95072c)\n#13 7.704      Running tests/local_dispatch_before_init.rs (target/debug/deps/local_dispatch_before_init-de2b7849bbc31f2a)\n#13 7.707 [tracing-core/tests/local_dispatch_before_init.rs:15:47] current = Dispatch::Global(\n#13 7.707     Pointer { addr: 0x55ede4b64b76, metadata: DynMetadata(0x55ede4b8b510) },\n#13 7.707 )\n#13 7.707 [tracing-core/tests/local_dispatch_before_init.rs:25:21] current = Dispatch::Scoped(\n#13 7.707     0x7ff7b06f7610,\n#13 7.707 )\n#13 7.707 [tracing-core/tests/local_dispatch_before_init.rs:39:13] current = Dispatch::Global(\n#13 7.707     Pointer { addr: 0x7ff7ac000d50, metadata: DynMetadata(0x55ede4b84ce0) },\n#13 7.707 )\n#13 7.707      Running tests/macros.rs (target/debug/deps/macros-1d65857f050f4003)\n#13 7.710      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-6eed3a01502a01bf)\n#13 7.723      Running unittests src/lib.rs (target/debug/deps/tracing_error-23aeb8e58b602ab1)\n#13 7.725 [tracing-error/src/backtrace.rs:285:13] &span_trace = SpanTrace [\n#13 7.725     { target: \"tracing_error::backtrace::tests\", name: \"test span\", file: \"tracing-error/src/backtrace.rs\", line: 280 },\n#13 7.725 ]\n#13 7.725 [tracing-error/src/backtrace.rs:298:13] &span_trace = SpanTrace []\n#13 7.725 [tracing-error/src/backtrace.rs:314:13] &span_trace = SpanTrace []\n#13 7.726      Running unittests src/lib.rs (target/debug/deps/tracing_flame-35f2bd68cbb6e0db)\n#13 7.729      Running tests/collapsed.rs (target/debug/deps/collapsed-107fe0355326d447)\n#13 8.348      Running tests/concurrent.rs (target/debug/deps/concurrent-d30dc24ba1fefae1)\n#13 8.483      Running unittests src/lib.rs (target/debug/deps/tracing_futures-2cbbccacd703eaf2)\n#13 8.488      Running tests/std_future.rs (target/debug/deps/std_future-b9f19c63b694ba50)\n#13 8.493      Running unittests src/lib.rs (target/debug/deps/tracing_journald-87169daee49b2f8b)\n#13 8.495      Running tests/journal.rs (target/debug/deps/journal-85cc291f5ef386fd)\n#13 8.498 \n#13 8.498 thread 'journal_fields' panicked at tracing-journald/tests/journal.rs:288:10:\n#13 8.498 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.498 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 8.498 \n#13 8.498 thread 'custom_priorities' panicked at tracing-journald/tests/journal.rs:196:10:\n#13 8.498 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.498 \n#13 8.498 thread 'internal_null_byte' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.498 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.498 \n#13 8.498 thread 'multiline_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.498 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.498 \n#13 8.498 thread 'multiline_message_trailing_newline' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.498 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'multiple_spans_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'simple_metadata' panicked at tracing-journald/tests/journal.rs:269:10:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'simple_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'span_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'spans_field_collision' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.499 \n#13 8.499 thread 'large_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.499 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.500 error: test failed, to rerun pass `-p tracing-journald --test journal`\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_custom_target] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"fake\",\n#13 8.574     target: \"tracing_mock::field\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_mock::field\",\n#13 8.574     location: tracing-mock/src/field.rs:610,\n#13 8.574     fields: {fake_field},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096268, metadata: DynMetadata(0x561ed20783d0) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_custom_target] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096070, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_warn] new_span: name=\"ret_warn\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] enter: ret_warn; id=Id(1);\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_with_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096040, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"ret_async\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960e8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] new_span: name=\"ret_async\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_warn_info\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096208, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_warn_info] new_span: name=\"ret_warn_info\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_async] enter: ret_async; id=Id(1);\n#13 8.574 [test_warn_info] enter: ret_warn_info; id=Id(1);\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_custom_target] new_span: name=\"ret_with_target\"; target=\"my_target\"; id=Id(1);\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_dbg_warn\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096238, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_custom_target] enter: ret_with_target; id=Id(1);\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:68,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096088, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_dbg_warn] new_span: name=\"ret_dbg_warn\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_warn] event: event tracing-attributes/tests/ret.rs:68;\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_warn] exit: ret_warn; id=Id(1);\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_mut\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960a0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_warn] drop_span: ret_warn; id=Id(1); refs=1;\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 test test_warn ... ok[test_warn] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_dbg_warn] enter: ret_dbg_warn; id=Id(1);\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"ret_and_err\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096178, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_and_ok\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961c0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_mut] new_span: name=\"ret_mut\"; target=\"ret\"; id=Id(1);\n#13 8.574 \n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"ret\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096010, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_ret_and_err] new_span: name=\"ret_and_err\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"ret_impl_type\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096118, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test] new_span: name=\"ret\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_custom_target] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_custom_target] enabled -> true\n#13 8.574 [test_mut] enter: ret_mut; id=Id(1);\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"ret_display\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096148, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] new_span: name=\"ret_display\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_ret_and_ok] new_span: name=\"ret_and_ok\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_impl_type] new_span: name=\"ret_impl_type\"; target=\"ret\"; id=Id(1);\n#13 8.574 [test_dbg] enter: ret_display; id=Id(1);\n#13 8.574 [test] enter: ret; id=Id(1);\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_ret_and_ok] enter: ret_and_ok; id=Id(1);\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_impl_type] enter: ret_impl_type; id=Id(1);\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_ret_and_err] enter: ret_and_err; id=Id(1);\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:16,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096058, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_custom_target] event: event tracing-attributes/tests/ret.rs:16;\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Warn,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:285,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096250, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_custom_target] exit: ret_with_target; id=Id(1);\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:260,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096220, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_custom_target] drop_span: ret_with_target; id=Id(1); refs=1;\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 test test_custom_target ... ok[test_dbg_warn] event: event tracing-attributes/tests/ret.rs:285;\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:125,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096100, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] exit: ret_dbg_warn; id=Id(1);\n#13 8.574 [test_async] event: event tracing-attributes/tests/ret.rs:125;\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_async] exit: ret_async; id=Id(1);\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_dbg_warn] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg_warn] enabled -> true\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:152,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096130, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_async] enter: ret_async; id=Id(1);\n#13 8.574 [test_impl_type] event: event tracing-attributes/tests/ret.rs:152;\n#13 8.574 [test_warn_info] event: event tracing-attributes/tests/ret.rs:260;\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:96,\n#13 8.574     fields: {a},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960b8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_mut] event: event tracing-attributes/tests/ret.rs:96;\n#13 8.574 [test_async] exit: ret_async; id=Id(1);\n#13 8.574 [test_warn_info] exit: ret_warn_info; id=Id(1);\n#13 8.574 [test_async] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_async] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:177,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096160, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:231,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961d8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_dbg] event: event tracing-attributes/tests/ret.rs:177;\n#13 8.574 [test_dbg_warn] drop_span: ret_dbg_warn; id=Id(1); refs=1;\n#13 8.574 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_ok] enabled -> true\n#13 8.574 [test_warn_info] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:11,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed2096028, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_warn_info] enabled -> true\n#13 8.574 [test_ret_and_ok] event: event tracing-attributes/tests/ret.rs:231;\n#13 8.574 [test] event: event tracing-attributes/tests/ret.rs:11;\n#13 8.574 \n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test_async] drop_span: ret_async; id=Id(1); refs=1;\n#13 8.574 [test_warn_info] drop_span: ret_warn_info; id=Id(1); refs=1;\n#13 8.574 [test_impl_type] exit: ret_impl_type; id=Id(1);\n#13 8.574 [test] enabled -> true\n#13 8.574 [test_impl_type] drop_span: ret_impl_type; id=Id(1); refs=1;\n#13 8.574 test test_dbg_warn ... [test_ret_and_ok] exit: ret_and_ok; id=Id(1);\n#13 8.574 [test_dbg] exit: ret_display; id=Id(1);\n#13 8.574 [test_ret_and_ok] drop_span: ret_and_ok; id=Id(1); refs=1;\n#13 8.574 [test_impl_type] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_impl_type] enabled -> true\n#13 8.574 ok\n#13 8.574 [test] exit: ret; id=Id(1);\n#13 8.574 [test_dbg] drop_span: ret_display; id=Id(1); refs=1;\n#13 8.574 [test_dbg] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_dbg] enabled -> true\n#13 8.574 [test] drop_span: ret; id=Id(1); refs=1;\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_mut] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_mut] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Error,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:202,\n#13 8.574     fields: {error},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20961a8, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_err] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled: Metadata {\n#13 8.574     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.574     target: \"ret\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"ret\",\n#13 8.574     location: tracing-attributes/tests/ret.rs:93,\n#13 8.574     fields: {return},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x561ed20960d0, metadata: DynMetadata(0x561ed206e020) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [test_ret_and_err] enabled -> true\n#13 8.574 [test_ret_and_err] event: event tracing-attributes/tests/ret.rs:202;\n#13 8.574 [test_mut] event: event tracing-attributes/tests/ret.rs:93;\n#13 8.574 test test_warn_info ... ok[test_ret_and_err] exit: ret_and_err; id=Id(1);\n#13 8.574 \n#13 8.574 [test_mut] exit: ret_mut; id=Id(1);\n#13 8.574 [test_ret_and_err] drop_span: ret_and_err; id=Id(1); refs=1;\n#13 8.574 [test_mut] drop_span: ret_mut; id=Id(1); refs=1;\n#13 8.574 test test_async ... ok\n#13 8.574 test test_impl_type ... ok\n#13 8.574 test test_ret_and_ok ... ok\n#13 8.574 test test_dbg ... ok\n#13 8.574 test test ... ok\n#13 8.574 test test_ret_and_err ... ok\n#13 8.574 test test_mut ... ok\n#13 8.574 \n#13 8.574 test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 2 tests\n#13 8.574 [custom_targets] register_callsite: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled -> true\n#13 8.574 [custom_targets] register_callsite: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled -> true\n#13 8.574 [custom_targets] new_span: name=\"custom_target\"; target=\"my_target\"; id=Id(1);\n#13 8.574 [default_targets] register_callsite: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:8,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08028, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled -> true\n#13 8.574 [custom_targets] enter: custom_target; id=Id(1);\n#13 8.574 [custom_targets] register_callsite: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:5,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08010, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:5,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08010, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled -> true\n#13 8.574 [custom_targets] exit: custom_target; id=Id(1);\n#13 8.574 [default_targets] register_callsite: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:5,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08010, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:5,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08010, metadata: DynMetadata(0x5618d0cf8240) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled -> true\n#13 8.574 [custom_targets] drop_span: custom_target; id=Id(1); refs=1;\n#13 8.574 [default_targets] new_span: name=\"default_target\"; target=\"targets\"; id=Id(1);\n#13 8.574 [custom_targets] register_callsite: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_other_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:19,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08058, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_other_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:19,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08058, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled -> true\n#13 8.574 [default_targets] enter: default_target; id=Id(1);\n#13 8.574 [default_targets] register_callsite: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_other_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:19,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08058, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled: Metadata {\n#13 8.574     name: \"custom_target\",\n#13 8.574     target: \"my_other_target\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:19,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08058, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled -> true\n#13 8.574 [default_targets] exit: default_target; id=Id(1);\n#13 8.574 [custom_targets] new_span: name=\"custom_target\"; target=\"my_other_target\"; id=Id(2);\n#13 8.574 [default_targets] drop_span: default_target; id=Id(1); refs=1;\n#13 8.574 [custom_targets] enter: custom_target; id=Id(2);\n#13 8.574 [custom_targets] register_callsite: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets::my_mod\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08040, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets::my_mod\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08040, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [custom_targets] enabled -> true\n#13 8.574 [custom_targets] exit: custom_target; id=Id(2);\n#13 8.574 [default_targets] register_callsite: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets::my_mod\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08040, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled: Metadata {\n#13 8.574     name: \"default_target\",\n#13 8.574     target: \"targets::my_mod\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"targets::my_mod\",\n#13 8.574     location: tracing-attributes/tests/targets.rs:16,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x5618d0d08040, metadata: DynMetadata(0x5618d0cf8a38) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [default_targets] enabled -> true\n#13 8.574 [custom_targets] drop_span: custom_target; id=Id(2); refs=1;\n#13 8.574 [default_targets] new_span: name=\"default_target\"; target=\"targets::my_mod\"; id=Id(2);\n#13 8.574 [default_targets] enter: default_target; id=Id(2);\n#13 8.574 [default_targets] exit: default_target; id=Id(2);\n#13 8.574 [default_targets] drop_span: default_target; id=Id(2); refs=1;\n#13 8.574 test custom_targets ... ok\n#13 8.574 test default_targets ... ok\n#13 8.574 \n#13 8.574 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 2 tests\n#13 8.574 test pass ... ok\n#13 8.574 test compile_fail ... ok\n#13 8.574 \n#13 8.574 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.69s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 20 tests\n#13 8.574 test dispatcher::test::default_dispatch ... ok\n#13 8.574 test dispatcher::test::dispatch_downcasts ... ok\n#13 8.574 test dispatcher::test::default_no_subscriber ... ok\n#13 8.574 test dispatcher::test::dispatch_is ... ok\n#13 8.574 test dispatcher::test::events_dont_infinite_loop ... ok\n#13 8.574 test dispatcher::test::spans_dont_infinite_loop ... ok\n#13 8.574 test field::test::empty_fields_are_skipped ... ok\n#13 8.574 test field::test::empty_value_set_is_empty ... ok\n#13 8.574 test field::test::fields_from_other_callsets_are_skipped ... ok\n#13 8.574 test field::test::index_of_field_in_fieldset_is_correct ... ok\n#13 8.574 test field::test::record_bytes ... ok\n#13 8.574 test field::test::record_debug_fn ... ok\n#13 8.574 test field::test::record_error ... ok\n#13 8.574 test field::test::sparse_value_sets_are_not_empty ... ok\n#13 8.574 test field::test::value_set_with_no_values_is_empty ... ok\n#13 8.574 test field::test::value_sets_with_fields_from_other_callsites_are_empty ... ok\n#13 8.574 test metadata::tests::level_filter_is_usize_sized ... ok\n#13 8.574 test metadata::tests::filter_level_conversion ... ok\n#13 8.574 test metadata::tests::level_filter_reprs ... ok\n#13 8.574 test metadata::tests::level_from_str ... ok\n#13 8.574 \n#13 8.574 test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 2 tests\n#13 8.574 test nested_set_default ... ok\n#13 8.574 test set_default_dispatch ... ok\n#13 8.574 \n#13 8.574 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test global_dispatch ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test local_dispatch_before_init ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test metadata_macro_api ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test event_before_register ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 3 tests\n#13 8.574 test backtrace::tests::capture_supported ... ok\n#13 8.574 test backtrace::tests::capture_empty ... ok\n#13 8.574 test backtrace::tests::capture_unsupported ... ok\n#13 8.574 \n#13 8.574 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 0 tests\n#13 8.574 \n#13 8.574 test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test capture_supported ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.62s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 ThreadId(2)-capture_supported 413391\n#13 8.574 ThreadId(2)-capture_supported;concurrent::main 38229\n#13 8.574 ThreadId(3);concurrent::main;concurrent::outer 10885294\n#13 8.574 ThreadId(2)-capture_supported;concurrent::main;concurrent::outer 30432370\n#13 8.574 ThreadId(3);concurrent::main;concurrent::outer;concurrent::Inner 50132225\n#13 8.574 \n#13 8.574 test capture_supported ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.13s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 3 tests\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:671,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2028, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.574 test tests::futures_01_tests::future_enter_exit_is_reasonable ... [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.574 ok[tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:650,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2010, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.574 \n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:696,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2040, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.574     location: tracing-futures/src/lib.rs:696,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x56018bcf2040, metadata: DynMetadata(0x56018bce2ce0) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.574 test tests::futures_01_tests::future_error_ends_span ... [tests::futures_01_tests::stream_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.574 ok\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [tests::futures_01_tests::stream_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 test tests::futures_01_tests::stream_enter_exit_is_reasonable ... ok\n#13 8.574 \n#13 8.574 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 3 tests\n#13 8.574 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled -> true\n#13 8.574 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled -> true\n#13 8.574 [enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.574 [error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled -> true\n#13 8.574 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled -> true\n#13 8.574 [error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled -> true\n#13 8.574 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [error_ends_span] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled -> true\n#13 8.574 [error_ends_span] enter: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.574 [error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled -> true\n#13 8.574 [span_on_drop] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:41,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e028, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled -> true\n#13 8.574 [error_ends_span] exit: foo; id=Id(1);\n#13 8.574 [enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [enter_exit_is_reasonable] enabled -> true\n#13 8.574 [error_ends_span] enter: foo; id=Id(1);\n#13 8.574 [error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled -> true\n#13 8.574 test enter_exit_is_reasonable ... [span_on_drop] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:22,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e010, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled -> true\n#13 8.574 [error_ends_span] exit: foo; id=Id(1);\n#13 8.574 [error_ends_span] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:95,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e058, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:95,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e058, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [error_ends_span] enabled -> true\n#13 8.574 [span_on_drop] register_callsite: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:95,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e058, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled: Metadata {\n#13 8.574     name: \"foo\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:95,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e058, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled -> true\n#13 8.574 [span_on_drop] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.574 [error_ends_span] enter: foo; id=Id(1);\n#13 8.574 [error_ends_span] exit: foo; id=Id(1);\n#13 8.574 ok[error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 \n#13 8.574 [span_on_drop] enter: foo; id=Id(1);\n#13 8.574 [span_on_drop] register_callsite: Metadata {\n#13 8.574     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:54,\n#13 8.574     fields: {message},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e040, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled: Metadata {\n#13 8.574     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Info,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:54,\n#13 8.574     fields: {message},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e040, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(EVENT),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled -> true\n#13 8.574 test error_ends_span ... [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.574 ok\n#13 8.574 ----> [span_on_drop] check MockSpan { name: \"foo\" } against actual parent with Id=Id(1)\n#13 8.574 [span_on_drop] exit: foo; id=Id(1);\n#13 8.574 [span_on_drop] enter: foo; id=Id(1);\n#13 8.574 [span_on_drop] exit: foo; id=Id(1);\n#13 8.574 [span_on_drop] drop_span: foo; id=Id(1); refs=1;\n#13 8.574 [span_on_drop] register_callsite: Metadata {\n#13 8.574     name: \"bar\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:100,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e070, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled: Metadata {\n#13 8.574     name: \"bar\",\n#13 8.574     target: \"std_future\",\n#13 8.574     level: Level(\n#13 8.574         Trace,\n#13 8.574     ),\n#13 8.574     module_path: \"std_future\",\n#13 8.574     location: tracing-futures/tests/std_future.rs:100,\n#13 8.574     fields: {},\n#13 8.574     callsite: Identifier(Pointer { addr: 0x55d4b2f8e070, metadata: DynMetadata(0x55d4b2f7d8b8) }),\n#13 8.574     kind: Kind(SPAN),\n#13 8.574 }\n#13 8.574 [span_on_drop] enabled -> true\n#13 8.574 [span_on_drop] new_span: name=\"bar\"; target=\"std_future\"; id=Id(2);\n#13 8.574 [span_on_drop] enter: bar; id=Id(2);\n#13 8.574 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.574 ----> [span_on_drop] check MockSpan { name: \"bar\" } against actual parent with Id=Id(2)\n#13 8.574 [span_on_drop] exit: bar; id=Id(2);\n#13 8.574 [span_on_drop] drop_span: bar; id=Id(2); refs=1;\n#13 8.574 test span_on_drop ... ok\n#13 8.574 \n#13 8.574 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 1 test\n#13 8.574 test socket::cmsg_buffer_size_for_one_fd ... ok\n#13 8.574 \n#13 8.574 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 8.574 \n#13 8.574 running 11 tests\n#13 8.574 test custom_priorities ... FAILED\n#13 8.574 test multiline_message ... FAILED\n#13 8.574 test internal_null_byte ... FAILED\n#13 8.574 test journal_fields ... FAILED\n#13 8.574 test multiline_message_trailing_newline ... FAILED\n#13 8.574 test multiple_spans_metadata ... FAILED\n#13 8.574 test simple_metadata ... FAILED\n#13 8.574 test span_metadata ... FAILED\n#13 8.574 test simple_message ... FAILED\n#13 8.574 test spans_field_collision ... FAILED\n#13 8.574 test large_message ... FAILED\n#13 8.574 \n#13 8.574 failures:\n#13 8.574 \n#13 8.574 failures:\n#13 8.574     custom_priorities\n#13 8.574     internal_null_byte\n#13 8.574     journal_fields\n#13 8.574     large_message\n#13 8.574     multiline_message\n#13 8.574     multiline_message_trailing_newline\n#13 8.574     multiple_spans_metadata\n#13 8.574     simple_message\n#13 8.574     simple_metadata\n#13 8.574     span_metadata\n#13 8.574     spans_field_collision\n#13 8.574 \n#13 8.574 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.574 \n#13 ERROR: process \"/bin/sh -c set -eux;     cargo test --workspace -- --nocapture;     cargo nextest run --profile ci;     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender;     cargo +nightly bench --workspace\" did not complete successfully: exit code: 101\n------\n > [stage-0  7/11] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     set -eux;     cargo test --workspace -- --nocapture;     cargo nextest run --profile ci;     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender;     cargo +nightly bench --workspace:\n8.574     multiline_message\n8.574     multiline_message_trailing_newline\n8.574     multiple_spans_metadata\n8.574     simple_message\n8.574     simple_metadata\n8.574     span_metadata\n8.574     spans_field_collision\n8.574 \n8.574 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n8.574 \n------\nERROR: failed to solve: process \"/bin/sh -c set -eux;     cargo test --workspace -- --nocapture;     cargo nextest run --profile ci;     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender;     cargo +nightly bench --workspace\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}