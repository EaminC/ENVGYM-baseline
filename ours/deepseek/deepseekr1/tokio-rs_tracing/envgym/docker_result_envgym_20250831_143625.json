{
  "timestamp": "20250831_143625",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756650863",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.63kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.2s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/rust:latest\n#5 DONE 0.2s\n\n#6 [stage-0 1/9] FROM docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf\n#6 resolve docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf done\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 420.97kB 0.0s done\n#7 DONE 0.0s\n\n#8 [stage-0 2/9] RUN apt-get update &&     apt-get install -y pkg-config libssl-dev chromium &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [stage-0 3/9] WORKDIR /workspace\n#9 CACHED\n\n#10 [stage-0 4/9] COPY . .\n#10 DONE 0.1s\n\n#11 [stage-0 5/9] RUN --mount=type=cache,target=/usr/local/cargo/registry     rustup component add rustfmt clippy &&     rustup target add wasm32-unknown-unknown &&     rustup toolchain install nightly &&     cargo install cargo-hack cargo-minimal-versions wasm-pack cargo-nextest\n#11 0.373 info: downloading component 'rustfmt'\n#11 0.539 info: installing component 'rustfmt'\n#11 0.946 info: downloading component 'clippy'\n#11 1.058 info: installing component 'clippy'\n#11 1.639 info: downloading component 'rust-std' for 'wasm32-unknown-unknown'\n#11 2.978 info: installing component 'rust-std' for 'wasm32-unknown-unknown'\n#11 4.565 info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n#11 4.769 info: latest update on 2025-08-31, rust version 1.91.0-nightly (523d3999d 2025-08-30)\n#11 4.769 info: downloading component 'cargo'\n#11 5.303 info: downloading component 'rust-std'\n#11 5.556 info: downloading component 'rustc'\n#11 12.51 info: installing component 'cargo'\n#11 13.29 info: installing component 'rust-std'\n#11 15.38 info: installing component 'rustc'\n#11 20.63 \n#11 20.64   nightly-x86_64-unknown-linux-gnu installed - rustc 1.91.0-nightly (523d3999d 2025-08-30)\n#11 20.64 \n#11 20.64 info: checking for self-update\n#11 20.75     Updating crates.io index\n#11 20.91   Installing cargo-hack v0.6.37\n#11 20.94     Updating crates.io index\n#11 21.09      Locking 53 packages to latest compatible versions\n#11 21.16    Compiling serde v1.0.219\n#11 21.16    Compiling proc-macro2 v1.0.101\n#11 21.16    Compiling unicode-ident v1.0.18\n#11 21.16    Compiling winnow v0.7.13\n#11 21.16    Compiling libc v0.2.175\n#11 21.16    Compiling cfg_aliases v0.2.1\n#11 21.16    Compiling bitflags v2.9.3\n#11 21.16    Compiling hashbrown v0.15.5\n#11 21.16    Compiling serde_json v1.0.143\n#11 21.16    Compiling anyhow v1.0.99\n#11 21.16    Compiling cfg-if v1.0.3\n#11 21.16    Compiling equivalent v1.0.2\n#11 21.16    Compiling ryu v1.0.20\n#11 21.16    Compiling toml_writer v1.0.2\n#11 21.16    Compiling itoa v1.0.15\n#11 21.16    Compiling memchr v2.7.5\n#11 21.16    Compiling lexopt v0.3.1\n#11 21.16    Compiling same-file v1.0.6\n#11 21.16    Compiling termcolor v1.4.1\n#11 21.19    Compiling nix v0.30.1\n#11 21.65    Compiling indexmap v2.11.0\n#11 21.73    Compiling quote v1.0.40\n#11 21.85    Compiling syn v2.0.106\n#11 22.57    Compiling toml_parser v1.0.2\n#11 23.06    Compiling serde_derive v1.0.219\n#11 23.27    Compiling toml_datetime v0.7.0\n#11 23.27    Compiling serde_spanned v1.0.0\n#11 23.41    Compiling toml v0.9.5\n#11 23.41    Compiling toml_edit v0.23.4\n#11 23.49    Compiling ctrlc v3.4.7\n#11 24.66    Compiling cargo-config2 v0.1.35\n#11 33.54    Compiling cargo-hack v0.6.37\n#11 52.64     Finished `release` profile [optimized] target(s) in 31.91s\n#11 52.67   Installing /usr/local/cargo/bin/cargo-hack\n#11 52.67    Installed package `cargo-hack v0.6.37` (executable `cargo-hack`)\n#11 52.68   Installing cargo-minimal-versions v0.1.31\n#11 52.72     Updating crates.io index\n#11 52.88      Locking 51 packages to latest compatible versions\n#11 52.94    Compiling cfg_aliases v0.2.1\n#11 52.94    Compiling libc v0.2.175\n#11 52.94    Compiling serde v1.0.219\n#11 52.94    Compiling semver v1.0.26\n#11 52.94    Compiling winnow v0.7.13\n#11 52.94    Compiling anyhow v1.0.99\n#11 52.94    Compiling cfg-if v1.0.3\n#11 52.94    Compiling serde_json v1.0.143\n#11 52.94    Compiling bitflags v2.9.3\n#11 52.94    Compiling hashbrown v0.15.5\n#11 52.94    Compiling equivalent v1.0.2\n#11 52.94    Compiling toml_datetime v0.7.0\n#11 52.94    Compiling ryu v1.0.20\n#11 52.94    Compiling toml_writer v1.0.2\n#11 52.94    Compiling memchr v2.7.5\n#11 52.94    Compiling itoa v1.0.15\n#11 52.95    Compiling lexopt v0.3.1\n#11 52.95    Compiling same-file v1.0.6\n#11 52.95    Compiling termcolor v1.4.1\n#11 52.98    Compiling nix v0.30.1\n#11 53.39    Compiling indexmap v2.11.0\n#11 54.25    Compiling toml_parser v1.0.2\n#11 54.56    Compiling toml_edit v0.23.4\n#11 55.24    Compiling ctrlc v3.4.7\n#11 56.34    Compiling cargo-minimal-versions v0.1.31\n#11 64.75     Finished `release` profile [optimized] target(s) in 44.02s\n#11 64.77   Installing /usr/local/cargo/bin/cargo-minimal-versions\n#11 64.77    Installed package `cargo-minimal-versions v0.1.31` (executable `cargo-minimal-versions`)\n#11 64.78   Installing wasm-pack v0.13.1\n#11 64.82     Updating crates.io index\n#11 65.17      Locking 248 packages to latest compatible versions\n#11 65.18       Adding cargo_metadata v0.15.4 (available: v0.22.0)\n#11 65.20       Adding console v0.15.11 (available: v0.16.0)\n#11 65.20       Adding dialoguer v0.10.4 (available: v0.12.0)\n#11 65.20       Adding env_logger v0.10.2 (available: v0.11.8)\n#11 65.21       Adding human-panic v1.2.3 (available: v2.0.3)\n#11 65.25       Adding siphasher v0.3.11 (available: v1.0.1)\n#11 65.25       Adding strsim v0.10.0 (available: v0.11.1)\n#11 65.26       Adding toml v0.7.8 (available: v0.9.5)\n#11 65.26       Adding ureq v2.12.1 (available: v3.1.0)\n#11 65.27       Adding which v4.4.2 (available: v8.0.0)\n#11 65.36    Compiling proc-macro2 v1.0.101\n#11 65.36    Compiling unicode-ident v1.0.18\n#11 65.36    Compiling libc v0.2.175\n#11 65.36    Compiling shlex v1.3.0\n#11 65.36    Compiling cfg-if v1.0.3\n#11 65.36    Compiling serde v1.0.219\n#11 65.36    Compiling pkg-config v0.3.32\n#11 65.36    Compiling stable_deref_trait v1.2.0\n#11 65.36    Compiling version_check v0.9.5\n#11 65.36    Compiling typenum v1.18.0\n#11 65.36    Compiling writeable v0.6.1\n#11 65.36    Compiling bitflags v2.9.3\n#11 65.36    Compiling litemap v0.8.0\n#11 65.36    Compiling subtle v2.6.1\n#11 65.36    Compiling memchr v2.7.5\n#11 65.36    Compiling getrandom v0.3.3\n#11 65.37    Compiling smallvec v1.15.1\n#11 65.37    Compiling equivalent v1.0.2\n#11 65.37    Compiling log v0.4.27\n#11 65.37    Compiling autocfg v1.5.0\n#11 65.37    Compiling hashbrown v0.15.5\n#11 65.37    Compiling icu_properties_data v2.0.1\n#11 65.38    Compiling icu_normalizer_data v2.0.0\n#11 65.38    Compiling rustix v1.0.8\n#11 65.38    Compiling adler2 v2.0.1\n#11 65.38    Compiling crc32fast v1.5.0\n#11 65.38    Compiling once_cell v1.21.3\n#11 65.38    Compiling linux-raw-sys v0.9.4\n#11 65.39    Compiling byteorder v1.5.0\n#11 65.39    Compiling zstd-safe v7.2.4\n#11 65.42    Compiling utf8parse v0.2.2\n#11 65.43    Compiling untrusted v0.9.0\n#11 65.43    Compiling rustix v0.38.44\n#11 65.43    Compiling serde_json v1.0.143\n#11 65.44    Compiling anstyle-query v1.1.4\n#11 65.44    Compiling utf8_iter v1.0.4\n#11 65.45    Compiling anstyle v1.0.11\n#11 65.46    Compiling object v0.36.7\n#11 65.46    Compiling powerfmt v0.2.0\n#11 65.47    Compiling is_terminal_polyfill v1.70.1\n#11 65.47    Compiling linux-raw-sys v0.4.15\n#11 65.47    Compiling colorchoice v1.0.4\n#11 65.48    Compiling crc-catalog v2.4.0\n#11 65.48    Compiling thiserror v2.0.16\n#11 65.48    Compiling itoa v1.0.15\n#11 65.48    Compiling percent-encoding v2.3.2\n#11 65.49    Compiling rustls v0.23.31\n#11 65.49    Compiling cpufeatures v0.2.17\n#11 65.50    Compiling ryu v1.0.20\n#11 65.50    Compiling camino v1.1.12\n#11 65.50    Compiling parking_lot_core v0.9.11\n#11 65.50    Compiling zip v2.4.2\n#11 65.51    Compiling toml_write v0.1.2\n#11 65.51    Compiling bumpalo v3.19.0\n#11 65.51    Compiling anyhow v1.0.99\n#11 65.52    Compiling gimli v0.31.1\n#11 65.53    Compiling thiserror v1.0.69\n#11 65.53    Compiling simd-adler32 v0.3.7\n#11 65.53    Compiling time-core v0.1.4\n#11 65.53    Compiling semver v1.0.26\n#11 65.53    Compiling num-conv v0.1.0\n#11 65.53    Compiling deflate64 v0.1.9\n#11 65.53    Compiling base64 v0.22.1\n#11 65.54    Compiling unicode-width v0.2.1\n#11 65.54    Compiling constant_time_eq v0.3.1\n#11 65.54    Compiling winnow v0.5.40\n#11 65.54    Compiling fastrand v2.3.0\n#11 65.54    Compiling strsim v0.11.1\n#11 65.55    Compiling clap_lex v0.7.5\n#11 65.55    Compiling scopeguard v1.2.0\n#11 65.55    Compiling heck v0.5.0\n#11 65.55    Compiling rustc-demangle v0.1.26\n#11 65.55    Compiling shell-words v1.1.0\n#11 65.56    Compiling iana-time-zone v0.1.63\n#11 65.56    Compiling home v0.5.11\n#11 65.56    Compiling same-file v1.0.6\n#11 65.57    Compiling hex v0.4.3\n#11 65.57    Compiling either v1.15.0\n#11 65.57    Compiling siphasher v0.3.11\n#11 65.58    Compiling is_executable v0.1.2\n#11 65.58    Compiling strsim v0.10.0\n#11 65.58    Compiling path-clean v1.0.1\n#11 65.59    Compiling glob v0.3.3\n#11 65.61    Compiling generic-array v0.14.7\n#11 65.61    Compiling miniz_oxide v0.8.9\n#11 65.61    Compiling anstyle-parse v0.2.7\n#11 65.61    Compiling deranged v0.4.0\n#11 65.62    Compiling crc v3.3.0\n#11 65.62    Compiling env_logger v0.10.2\n#11 65.64    Compiling form_urlencoded v1.2.2\n#11 65.65    Compiling walkdir v2.5.0\n#11 65.69    Compiling lock_api v0.4.13\n#11 65.69    Compiling num-traits v0.2.19\n#11 65.73    Compiling anstream v0.6.20\n#11 65.77    Compiling lzma-rs v0.3.0\n#11 65.79    Compiling zopfli v0.8.2\n#11 65.90    Compiling clap_builder v4.5.46\n#11 66.05    Compiling flate2 v1.1.2\n#11 66.06    Compiling quote v1.0.40\n#11 66.07    Compiling indexmap v2.11.0\n#11 66.18    Compiling syn v2.0.106\n#11 66.22    Compiling jobserver v0.1.34\n#11 66.24    Compiling getrandom v0.2.16\n#11 66.24    Compiling filetime v0.2.26\n#11 66.24    Compiling dirs-sys-next v0.1.2\n#11 66.25    Compiling socks v0.3.4\n#11 66.25    Compiling console v0.15.11\n#11 66.32    Compiling time v0.3.41\n#11 66.33    Compiling uuid v1.18.0\n#11 66.34    Compiling dirs-next v2.0.0\n#11 66.38    Compiling cc v1.2.34\n#11 66.45    Compiling parking_lot v0.12.4\n#11 66.52    Compiling chrono v0.4.41\n#11 66.73    Compiling crypto-common v0.1.6\n#11 66.73    Compiling block-buffer v0.10.4\n#11 66.73    Compiling inout v0.1.4\n#11 66.80    Compiling cipher v0.4.4\n#11 66.80    Compiling digest v0.10.7\n#11 66.94    Compiling hmac v0.12.1\n#11 66.94    Compiling sha1 v0.10.6\n#11 66.95    Compiling aes v0.8.4\n#11 67.01    Compiling pbkdf2 v0.12.2\n#11 67.13    Compiling xattr v1.5.1\n#11 67.13    Compiling tempfile v3.21.0\n#11 67.18    Compiling zstd-sys v2.0.15+zstd.1.5.7\n#11 67.18    Compiling ring v0.17.14\n#11 67.18    Compiling bzip2-sys v0.1.13+1.0.8\n#11 67.18    Compiling lzma-sys v0.1.20\n#11 67.22    Compiling tar v0.4.44\n#11 67.32    Compiling fs4 v0.6.6\n#11 67.32    Compiling which v4.4.2\n#11 67.41    Compiling addr2line v0.24.2\n#11 67.52    Compiling bzip2 v0.5.2\n#11 67.56    Compiling xz2 v0.1.7\n#11 68.75    Compiling backtrace v0.3.75\n#11 68.83    Compiling synstructure v0.13.2\n#11 69.14    Compiling serde_derive v1.0.219\n#11 69.14    Compiling zerofrom-derive v0.1.6\n#11 69.14    Compiling yoke-derive v0.8.0\n#11 69.14    Compiling displaydoc v0.2.5\n#11 69.14    Compiling zerovec-derive v0.11.1\n#11 69.14    Compiling zeroize_derive v1.4.2\n#11 69.14    Compiling thiserror-impl v2.0.16\n#11 69.14    Compiling thiserror-impl v1.0.69\n#11 69.14    Compiling clap_derive v4.5.45\n#11 69.75    Compiling zeroize v1.8.1\n#11 69.84    Compiling rustls-pki-types v1.12.0\n#11 69.84    Compiling dialoguer v0.10.4\n#11 70.04    Compiling zerofrom v0.1.6\n#11 70.08    Compiling webpki-roots v1.0.2\n#11 70.11    Compiling yoke v0.8.0\n#11 70.14    Compiling webpki-roots v0.26.11\n#11 70.23    Compiling zerovec v0.11.4\n#11 70.23    Compiling zerotrie v0.2.2\n#11 70.51    Compiling clap v4.5.46\n#11 70.95    Compiling tinystr v0.8.1\n#11 70.95    Compiling potential_utf v0.1.3\n#11 71.02    Compiling icu_collections v2.0.0\n#11 71.06    Compiling icu_locale_core v2.0.0\n#11 71.52    Compiling icu_provider v2.0.0\n#11 71.68    Compiling icu_properties v2.0.1\n#11 71.68    Compiling icu_normalizer v2.0.0\n#11 72.39    Compiling idna_adapter v1.2.1\n#11 72.44    Compiling idna v1.1.0\n#11 72.65    Compiling rustls-webpki v0.103.4\n#11 72.98    Compiling toml_datetime v0.6.11\n#11 72.98    Compiling serde_spanned v0.6.9\n#11 72.98    Compiling url v2.5.7\n#11 72.99    Compiling os_info v3.12.0\n#11 72.99    Compiling cargo-platform v0.1.9\n#11 72.99    Compiling serde_ignored v0.1.12\n#11 73.13    Compiling toml_edit v0.22.27\n#11 73.13    Compiling toml_edit v0.19.15\n#11 73.74    Compiling cargo_metadata v0.15.4\n#11 73.82    Compiling toml v0.8.23\n#11 74.14    Compiling human-panic v1.2.3\n#11 74.58    Compiling toml v0.7.8\n#11 76.22    Compiling ureq v2.12.1\n#11 76.97    Compiling zstd v0.13.3\n#11 78.22    Compiling binary-install v0.4.1\n#11 78.41    Compiling wasm-pack v0.13.1\n#11 81.56     Finished `release` profile [optimized] target(s) in 1m 00s\n#11 81.62   Installing /usr/local/cargo/bin/wasm-pack\n#11 81.62    Installed package `wasm-pack v0.13.1` (executable `wasm-pack`)\n#11 81.69   Installing cargo-nextest v0.9.103\n#11 81.73     Updating crates.io index\n#11 82.75      Locking 388 packages to latest compatible versions\n#11 82.80       Adding dialoguer v0.11.0 (available: v0.12.0)\n#11 82.83       Adding idna_adapter v1.0.0 (available: v1.2.1)\n#11 83.14    Compiling proc-macro2 v1.0.101\n#11 83.14    Compiling unicode-ident v1.0.18\n#11 83.14    Compiling libc v0.2.175\n#11 83.14    Compiling serde v1.0.219\n#11 83.14    Compiling cfg-if v1.0.3\n#11 83.14    Compiling memchr v2.7.5\n#11 83.14    Compiling once_cell v1.21.3\n#11 83.14    Compiling log v0.4.27\n#11 83.14    Compiling pin-project-lite v0.2.16\n#11 83.14    Compiling foldhash v0.1.5\n#11 83.14    Compiling equivalent v1.0.2\n#11 83.14    Compiling allocator-api2 v0.2.21\n#11 83.14    Compiling bitflags v2.9.3\n#11 83.15    Compiling itoa v1.0.15\n#11 83.15    Compiling futures-core v0.3.31\n#11 83.15    Compiling smallvec v1.15.1\n#11 83.15    Compiling getrandom v0.3.3\n#11 83.16    Compiling rustix v1.0.8\n#11 83.16    Compiling shlex v1.3.0\n#11 83.16    Compiling linux-raw-sys v0.9.4\n#11 83.17    Compiling bytes v1.10.1\n#11 83.17    Compiling autocfg v1.5.0\n#11 83.17    Compiling futures-sink v0.3.31\n#11 83.18    Compiling slab v0.4.11\n#11 83.18    Compiling pin-utils v0.1.0\n#11 83.18    Compiling version_check v0.9.5\n#11 83.18    Compiling unicode-width v0.2.1\n#11 83.18    Compiling ryu v1.0.20\n#11 83.19    Compiling futures-io v0.3.31\n#11 83.19    Compiling percent-encoding v2.3.2\n#11 83.20    Compiling fnv v1.0.7\n#11 83.20    Compiling futures-task v0.3.31\n#11 83.21    Compiling serde_json v1.0.143\n#11 83.21    Compiling winnow v0.7.13\n#11 83.22    Compiling camino v1.1.12\n#11 83.22    Compiling adler2 v2.0.1\n#11 83.23    Compiling zeroize v1.8.1\n#11 83.23    Compiling zerocopy v0.8.26\n#11 83.23    Compiling semver v1.0.26\n#11 83.23    Compiling object v0.36.7\n#11 83.23    Compiling utf8_iter v1.0.4\n#11 83.24    Compiling idna_adapter v1.0.0\n#11 83.24    Compiling target-lexicon v0.13.2\n#11 83.24    Compiling typeid v1.0.3\n#11 83.25    Compiling typenum v1.18.0\n#11 83.25    Compiling guppy-workspace-hack v0.1.0\n#11 83.25    Compiling gimli v0.31.1\n#11 83.27    Compiling untrusted v0.9.0\n#11 83.27    Compiling thiserror v2.0.16\n#11 83.27    Compiling owo-colors v4.2.2\n#11 83.27    Compiling httparse v1.10.1\n#11 83.28    Compiling signal-hook v0.3.18\n#11 83.29    Compiling tower-service v0.3.3\n#11 83.29    Compiling target-spec v3.5.0\n#11 83.30    Compiling pkg-config v0.3.32\n#11 83.30    Compiling try-lock v0.2.5\n#11 83.34    Compiling rustc-demangle v0.1.26\n#11 83.34    Compiling toml_write v0.1.2\n#11 83.35    Compiling rustls v0.23.31\n#11 83.36    Compiling atomic-waker v1.1.2\n#11 83.36    Compiling fastrand v2.3.0\n#11 83.36    Compiling subtle v2.6.1\n#11 83.36    Compiling portable-atomic v1.11.1\n#11 83.37    Compiling regex-syntax v0.8.6\n#11 83.38    Compiling ipnet v2.11.0\n#11 83.38    Compiling tower-layer v0.3.3\n#11 83.39    Compiling nextest-workspace-hack v0.1.0\n#11 83.40    Compiling lazy_static v1.5.0\n#11 83.41    Compiling unicode-segmentation v1.12.0\n#11 83.41    Compiling is_ci v1.2.0\n#11 83.43    Compiling either v1.15.0\n#11 83.44    Compiling thiserror v1.0.69\n#11 83.44    Compiling crc32fast v1.5.0\n#11 83.45    Compiling base64 v0.22.1\n#11 83.45    Compiling unicode-linebreak v0.1.5\n#11 83.45    Compiling parking_lot_core v0.9.11\n#11 83.46    Compiling unicode-xid v0.2.6\n#11 83.47    Compiling zstd-safe v7.2.4\n#11 83.47    Compiling fixedbitset v0.5.7\n#11 83.48    Compiling supports-unicode v3.0.0\n#11 83.49    Compiling unicode-width v0.1.14\n#11 83.49    Compiling rustix v0.38.44\n#11 83.50    Compiling cfg_aliases v0.2.1\n#11 83.50    Compiling iri-string v0.7.8\n#11 83.51    Compiling debug-ignore v1.0.5\n#11 83.51    Compiling supports-hyperlinks v3.1.0\n#11 83.51    Compiling scopeguard v1.2.0\n#11 83.52    Compiling utf8parse v0.2.2\n#11 83.52    Compiling pulldown-cmark v0.13.0\n#11 83.53    Compiling iana-time-zone v0.1.63\n#11 83.54    Compiling litrs v0.4.2\n#11 83.54    Compiling self_update v0.42.0\n#11 83.54    Compiling anstyle v1.0.11\n#11 83.54    Compiling color-spantrace v0.3.0\n#11 83.56    Compiling hashbrown v0.15.5\n#11 83.57    Compiling futures-channel v0.3.31\n#11 83.58    Compiling tracing-core v0.1.34\n#11 83.58    Compiling num-traits v0.2.19\n#11 83.59    Compiling form_urlencoded v1.2.2\n#11 83.59    Compiling miniz_oxide v0.8.9\n#11 83.60    Compiling idna v1.1.0\n#11 83.62    Compiling rustls-pki-types v1.12.0\n#11 83.62    Compiling generic-array v0.14.7\n#11 83.62    Compiling want v0.3.1\n#11 83.62    Compiling sync_wrapper v1.0.2\n#11 83.62    Compiling lock_api v0.4.13\n#11 83.63    Compiling ahash v0.8.12\n#11 83.64    Compiling supports-color v3.0.2\n#11 83.65    Compiling thread_local v1.1.9\n#11 83.66    Compiling sharded-slab v0.1.7\n#11 83.69    Compiling colorchoice v1.0.4\n#11 83.70    Compiling static_assertions v1.1.0\n#11 83.71    Compiling anstyle-query v1.1.4\n#11 83.72    Compiling linux-raw-sys v0.4.15\n#11 83.72    Compiling nested v0.1.1\n#11 83.74    Compiling unicase v2.8.1\n#11 83.74    Compiling eyre v0.6.12\n#11 83.74    Compiling is_terminal_polyfill v1.70.1\n#11 83.75    Compiling number_prefix v0.4.0\n#11 83.75    Compiling tinyvec_macros v0.1.1\n#11 83.75    Compiling strsim v0.11.1\n#11 83.76    Compiling shared_thread v0.2.0\n#11 83.76    Compiling urlencoding v2.1.3\n#11 83.80    Compiling aho-corasick v1.1.3\n#11 83.82    Compiling textwrap v0.16.2\n#11 83.83    Compiling nix v0.30.1\n#11 83.83    Compiling anstyle-parse v0.2.7\n#11 83.86    Compiling vte v0.14.1\n#11 83.87    Compiling bstr v1.12.0\n#11 83.87    Compiling quick-xml v0.37.5\n#11 83.88    Compiling itertools v0.14.0\n#11 83.91    Compiling cpufeatures v0.2.17\n#11 83.92    Compiling recursion v0.5.4\n#11 83.93    Compiling rustc-hash v2.1.1\n#11 83.93    Compiling shell-words v1.1.0\n#11 83.94    Compiling unit-prefix v0.5.1\n#11 83.94    Compiling clap_lex v0.7.5\n#11 83.94    Compiling toml_writer v1.0.2\n#11 83.94    Compiling heck v0.5.0\n#11 83.94    Compiling humantime v2.2.0\n#11 83.94    Compiling indenter v0.3.4\n#11 83.95    Compiling indent_write v2.2.0\n#11 83.96    Compiling swrite v0.1.0\n#11 83.97    Compiling hex v0.4.3\n#11 83.97    Compiling home v0.5.11\n#11 83.98    Compiling xxhash-rust v0.8.15\n#11 83.99    Compiling enable-ansi-support v0.2.1\n#11 84.02    Compiling http v1.3.1\n#11 84.03    Compiling convert_case v0.7.1\n#11 84.04    Compiling tracing-log v0.2.0\n#11 84.06    Compiling tinyvec v1.10.0\n#11 84.09    Compiling webpki-roots v1.0.2\n#11 84.11    Compiling document-features v0.2.11\n#11 84.12    Compiling strip-ansi-escapes v0.2.1\n#11 84.13    Compiling anstream v0.6.20\n#11 84.14    Compiling quote v1.0.40\n#11 84.18    Compiling flate2 v1.1.2\n#11 84.29    Compiling iddqd v0.3.11\n#11 84.35    Compiling cfg-expr v0.20.2\n#11 84.36    Compiling syn v2.0.106\n#11 84.40    Compiling tracing-subscriber v0.3.20\n#11 84.43    Compiling jobserver v0.1.34\n#11 84.46    Compiling cargo-nextest v0.9.103\n#11 84.59    Compiling cc v1.2.34\n#11 84.65    Compiling unicode-normalization v0.1.24\n#11 84.76    Compiling http-body v1.0.1\n#11 84.77    Compiling ordered-float v2.10.1\n#11 84.77    Compiling chrono v0.4.41\n#11 84.84    Compiling http-body-util v0.1.3\n#11 84.93    Compiling toml_parser v1.0.2\n#11 85.16    Compiling crypto-common v0.1.6\n#11 85.16    Compiling block-buffer v0.10.4\n#11 85.20    Compiling regex-automata v0.4.10\n#11 85.24    Compiling digest v0.10.7\n#11 85.29    Compiling signal-hook-registry v1.4.6\n#11 85.29    Compiling mio v1.0.4\n#11 85.29    Compiling socket2 v0.6.0\n#11 85.29    Compiling getrandom v0.2.16\n#11 85.29    Compiling console v0.15.11\n#11 85.29    Compiling os_pipe v1.2.2\n#11 85.30    Compiling filetime v0.2.26\n#11 85.30    Compiling console v0.16.0\n#11 85.41    Compiling sha2 v0.10.9\n#11 85.45    Compiling uuid v1.18.0\n#11 85.45    Compiling rand_core v0.9.3\n#11 85.51    Compiling parking_lot v0.12.4\n#11 85.52    Compiling ppv-lite86 v0.2.21\n#11 85.60    Compiling ring v0.17.14\n#11 85.60    Compiling zstd-sys v2.0.15+zstd.1.5.7\n#11 85.69    Compiling addr2line v0.24.2\n#11 85.70    Compiling sigchld v0.2.4\n#11 85.75    Compiling signal-hook-mio v0.2.4\n#11 85.77    Compiling indicatif v0.18.0\n#11 85.78    Compiling newtype-uuid v1.3.0\n#11 85.79    Compiling shared_child v1.1.1\n#11 85.81    Compiling indicatif v0.17.11\n#11 85.84    Compiling rand_chacha v0.9.0\n#11 85.93    Compiling duct v1.1.0\n#11 85.98    Compiling tempfile v3.21.0\n#11 85.98    Compiling terminal_size v0.4.3\n#11 85.98    Compiling xattr v1.5.1\n#11 86.02    Compiling rand v0.9.2\n#11 86.04    Compiling clap_builder v4.5.46\n#11 86.12    Compiling tar v0.4.44\n#11 86.27    Compiling self-replace v1.5.0\n#11 86.27    Compiling atomicwrites v0.4.4\n#11 87.56    Compiling backtrace v0.3.75\n#11 87.79    Compiling serde_derive v1.0.219\n#11 87.79    Compiling tokio-macros v2.5.0\n#11 87.79    Compiling futures-macro v0.3.31\n#11 87.79    Compiling tracing-attributes v0.1.30\n#11 87.79    Compiling thiserror-impl v2.0.16\n#11 87.79    Compiling miette-derive v7.6.0\n#11 87.79    Compiling thiserror-impl v1.0.69\n#11 87.80    Compiling derive_more-impl v2.0.1\n#11 87.80    Compiling pin-project-internal v1.1.10\n#11 87.80    Compiling clap_derive v4.5.45\n#11 87.80    Compiling derive-where v1.6.0\n#11 87.81    Compiling regex v1.11.2\n#11 87.81    Compiling globset v0.4.16\n#11 88.03    Compiling backtrace-ext v0.2.1\n#11 88.42    Compiling tokio v1.47.1\n#11 88.56    Compiling derive_more v2.0.1\n#11 88.59    Compiling futures-util v0.3.31\n#11 88.60    Compiling crossterm v0.29.0\n#11 88.71    Compiling pin-project v1.1.10\n#11 88.83    Compiling tracing v0.1.41\n#11 88.91    Compiling miette v7.6.0\n#11 88.94    Compiling dialoguer v0.11.0\n#11 88.96    Compiling tracing-error v0.2.1\n#11 89.15    Compiling color-eyre v0.6.5\n#11 89.32    Compiling clap v4.5.46\n#11 90.74    Compiling futures-executor v0.3.31\n#11 90.74    Compiling future-queue v0.4.0\n#11 90.84    Compiling futures v0.3.31\n#11 91.86    Compiling indexmap v2.11.0\n#11 91.86    Compiling url v2.5.7\n#11 91.86    Compiling toml_datetime v0.6.11\n#11 91.86    Compiling serde_spanned v0.6.9\n#11 91.86    Compiling erased-serde v0.4.6\n#11 91.87    Compiling serde-value v0.7.0\n#11 91.87    Compiling cargo-platform v0.2.0\n#11 91.87    Compiling toml_datetime v0.7.0\n#11 91.88    Compiling serde_spanned v1.0.0\n#11 91.89    Compiling smol_str v0.3.2\n#11 91.89    Compiling serde_urlencoded v0.7.1\n#11 91.89    Compiling serde_path_to_error v0.1.17\n#11 91.89    Compiling serde_ignored v0.1.12\n#11 91.89    Compiling humantime-serde v1.1.1\n#11 91.96    Compiling rustls-webpki v0.103.4\n#11 92.06    Compiling tokio-util v0.7.16\n#11 92.06    Compiling tower v0.5.2\n#11 92.06    Compiling tokio-stream v0.1.17\n#11 92.06    Compiling async-scoped v0.9.0\n#11 92.13    Compiling pathdiff v0.2.3\n#11 92.13    Compiling camino-tempfile v1.4.1\n#11 92.37    Compiling serde-untagged v0.1.8\n#11 92.47    Compiling tower-http v0.6.6\n#11 92.62    Compiling toml_edit v0.22.27\n#11 92.62    Compiling h2 v0.4.12\n#11 92.62    Compiling petgraph v0.8.2\n#11 92.62    Compiling toml v0.9.5\n#11 92.62    Compiling quick-junit v0.5.1\n#11 92.62    Compiling toml_edit v0.23.4\n#11 92.66    Compiling mukti-metadata v0.3.0\n#11 93.12    Compiling nextest-metadata v0.12.2\n#11 93.12    Compiling target-spec-miette v0.4.4\n#11 93.34    Compiling config v0.15.15\n#11 94.02    Compiling toml v0.8.23\n#11 94.37    Compiling cargo-util-schemas v0.8.2\n#11 95.23    Compiling hyper v1.7.0\n#11 95.30    Compiling cargo_metadata v0.21.0\n#11 95.74    Compiling zstd v0.13.3\n#11 95.76    Compiling tokio-rustls v0.26.2\n#11 96.09    Compiling hyper-util v0.1.16\n#11 96.11    Compiling guppy v0.17.20\n#11 97.01    Compiling hyper-rustls v0.27.7\n#11 97.16    Compiling reqwest v0.12.23\n#11 97.48    Compiling nextest-filtering v0.16.0\n#11 99.04    Compiling nextest-runner v0.86.0\n#11 112.5     Finished `release` profile [optimized] target(s) in 1m 31s\n#11 112.6   Installing /usr/local/cargo/bin/cargo-nextest\n#11 112.6    Installed package `cargo-nextest v0.9.103` (executable `cargo-nextest`)\n#11 112.7      Summary Successfully installed cargo-hack, cargo-minimal-versions, wasm-pack, cargo-nextest!\n#11 DONE 112.8s\n\n#12 [stage-0 6/9] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     cargo build --workspace &&     cargo test --workspace -- --show-output &&     cargo nextest run --profile ci --workspace -- --show-output &&     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender &&     cargo bench --workspace\n#12 0.342     Updating crates.io index\n#12 1.129      Locking 332 packages to latest compatible versions\n#12 1.132       Adding ahash v0.7.8 (available: v0.8.12)\n#12 1.155       Adding criterion v0.3.6 (available: v0.7.0)\n#12 1.158       Adding crossterm v0.28.1 (available: v0.29.0)\n#12 1.164       Adding futures v0.1.31 (available: v0.3.31)\n#12 1.171       Adding http v0.2.12 (available: v1.3.1)\n#12 1.178       Adding hyper v0.14.32 (available: v1.7.0)\n#12 1.181       Adding inferno v0.11.21 (available: v0.12.3)\n#12 1.187       Adding lru v0.7.8 (available: v0.16.0)\n#12 1.188       Adding mio v0.6.23 (available: v1.0.4)\n#12 1.199       Adding rand v0.7.3 (available: v0.9.2)\n#12 1.230       Adding snafu v0.6.10 (available: v0.8.8)\n#12 1.242       Adding tokio v0.1.22 (available: v1.47.1)\n#12 1.247       Adding tower v0.4.13 (available: v0.5.2)\n#12 1.249       Adding unicode-width v0.2.0 (available: v0.2.1)\n#12 1.354     Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.02s\n#12 1.602     Finished `test` profile [unoptimized + debuginfo] target(s) in 0.14s\n#12 1.626      Running unittests src/lib.rs (target/debug/deps/tracing-923b47c8b5a17290)\n#12 1.629 \n#12 1.629 running 1 test\n#12 1.629 test span::test::test_record_backwards_compat ... ok\n#12 1.629 \n#12 1.629 successes:\n#12 1.629 \n#12 1.629 successes:\n#12 1.629     span::test::test_record_backwards_compat\n#12 1.629 \n#12 1.629 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 1.629 \n#12 1.629      Running tests/enabled.rs (target/debug/deps/enabled-bd0f7fa6f9ef314d)\n#12 1.631 \n#12 1.631 running 2 tests\n#12 1.632 test level_and_target ... ok\n#12 1.632 test span_and_event ... ok\n#12 1.632 \n#12 1.632 successes:\n#12 1.632 \n#12 1.632 ---- level_and_target stdout ----\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> true\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> true\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:22\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Error,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:22,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea028, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:22\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Error,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:22,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea028, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> true\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:22\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Error,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:22,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea028, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:22\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Error,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:22,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea028, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:22\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Error,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:22,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea028, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> true\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:23\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:23,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea040, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:23\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:23,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea040, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> false\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:23\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:23,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea040, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:23\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:23,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea040, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> false\n#12 1.632 \n#12 1.632 ---- span_and_event stdout ----\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> true\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:21\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:21,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea010, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:47\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:47,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea058, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:47\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:47,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea058, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> false\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:47\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:47,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea058, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:47\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:47,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea058, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> false\n#12 1.632 [level_and_target] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [level_and_target] enabled -> false\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:48\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:48,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea070, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:49\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:49,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea088, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:49\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:49,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea088, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:49\",\n#12 1.632     target: \"enabled\",\n#12 1.632     level: Level(\n#12 1.632         Trace,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:49,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea088, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:52\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:52,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0a0, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:52\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:52,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0a0, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:52\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:52,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0a0, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(SPAN | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] register_callsite: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:53\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:53,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0b8, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:53\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:53,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0b8, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 [span_and_event] enabled: Metadata {\n#12 1.632     name: \"enabled tracing/tests/enabled.rs:53\",\n#12 1.632     target: \"debug_module\",\n#12 1.632     level: Level(\n#12 1.632         Debug,\n#12 1.632     ),\n#12 1.632     module_path: \"enabled\",\n#12 1.632     location: tracing/tests/enabled.rs:53,\n#12 1.632     fields: {},\n#12 1.632     callsite: Identifier(Pointer { addr: 0x55d8f4dea0b8, metadata: DynMetadata(0x55d8f4dda900) }),\n#12 1.632     kind: Kind(EVENT | HINT),\n#12 1.632 }\n#12 1.632 [span_and_event] enabled -> true\n#12 1.632 \n#12 1.632 \n#12 1.632 successes:\n#12 1.632     level_and_target\n#12 1.632     span_and_event\n#12 1.632 \n#12 1.632 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 1.633 \n#12 1.633      Running tests/event.rs (target/debug/deps/event-5b5e69cada366cbb)\n#12 1.635 \n#12 1.635 running 23 tests\n#12 1.637 test borrowed_field ... ok\n#12 1.637 test both_shorthands ... ok\n#12 1.637 test debug_shorthand ... ok\n#12 1.683 test event_with_message ... ok\n#12 1.684 test moved_field ... ok\n#12 1.684 test keyword_ident_in_field_name ... ok\n#12 1.685 test string_field ... ok\n#12 1.686 test option_values ... ok\n#12 1.686 test display_shorthand ... ok\n#12 1.686 test dotted_field_name ... ok\n#12 1.686 test explicit_child ... ok\n#12 1.686 test event_without_message ... ok\n#12 1.686 test raw_ident_in_field_name ... ok\n#12 1.686 test one_with_everything ... ok\n#12 1.687 test move_field_out_of_struct ... ok\n#12 1.687 test constant_field_name ... ok\n#12 1.687 test message_without_delims ... ok\n#12 1.687 test option_ref_values ... ok\n#12 1.687 test explicit_child_at_levels ... ok\n#12 1.687 test nonzeroi32_event_without_message ... ok\n#12 1.688 test option_ref_mut_values ... ok\n#12 1.688 test string_message_without_delims ... ok\n#12 1.688 test wrapping_event_without_message ... ok\n#12 1.689 \n#12 1.689 successes:\n#12 1.696 \n#12 1.696 ---- borrowed_field stdout ----\n#12 1.696 [borrowed_field] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [borrowed_field] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [borrowed_field] enabled -> true\n#12 1.696 [borrowed_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [borrowed_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [borrowed_field] enabled -> true\n#12 1.696 [borrowed_field] event: event tracing/tests/event.rs:227;\n#12 1.696 \n#12 1.696 ---- both_shorthands stdout ----\n#12 1.696 [both_shorthands] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled -> true\n#12 1.696 [both_shorthands] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled -> true\n#12 1.696 [both_shorthands] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled -> true\n#12 1.696 [both_shorthands] event: event tracing/tests/event.rs:330;\n#12 1.696 \n#12 1.696 ---- debug_shorthand stdout ----\n#12 1.696 [both_shorthands] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [both_shorthands] enabled -> true\n#12 1.696 [debug_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled -> true\n#12 1.696 [debug_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled -> true\n#12 1.696 [debug_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled -> true\n#12 1.696 [debug_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [debug_shorthand] enabled -> true\n#12 1.696 [debug_shorthand] event: event tracing/tests/event.rs:309;\n#12 1.696 \n#12 1.696 ---- event_with_message stdout ----\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [string_message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled -> true\n#12 1.696 [wrapping_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled -> true\n#12 1.696 [event_with_message] event: event tracing/tests/event.rs:72;\n#12 1.696 \n#12 1.696 ---- moved_field stdout ----\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [string_message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled -> true\n#12 1.696 [wrapping_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled -> true\n#12 1.696 [moved_field] event: event tracing/tests/event.rs:184;\n#12 1.696 \n#12 1.696 ---- keyword_ident_in_field_name stdout ----\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:309\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:309,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548118, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:330\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:330,\n#12 1.696     fields: {display_field, debug_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548130, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:227\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:227,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480e8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"fake\",\n#12 1.696     target: \"tracing_mock::field\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"tracing_mock::field\",\n#12 1.696     location: tracing-mock/src/field.rs:610,\n#12 1.696     fields: {fake_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5483a0, metadata: DynMetadata(0x55a81e540578) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [string_message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_message_without_delims] enabled -> true\n#12 1.696 [wrapping_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [wrapping_event_without_message] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] event: event tracing/tests/event.rs:618;\n#12 1.696 \n#12 1.696 ---- string_field stdout ----\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:630\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:630,\n#12 1.696     fields: {this.type},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548358, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:401\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:401,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548208, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:437\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:437,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548220, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:473\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:473,\n#12 1.696     fields: {some_str, none_str, some_bool, none_bool, some_u64, none_u64},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548238, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:158\",\n#12 1.696     target: \"whatever\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:158,\n#12 1.696     fields: {message, foo, bar, like_a_butterfly},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480a0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:52\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:52,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548040, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:269\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:269,\n#12 1.696     fields: {x, y},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548388, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:289\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:289,\n#12 1.696     fields: {my_field},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548100, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:101\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:101,\n#12 1.696     fields: {message, answer, question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548070, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:618\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Error,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:618,\n#12 1.696     fields: {message, crate},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548340, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:367,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548178, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"foo\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Trace,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:346,\n#12 1.696     fields: {},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548148, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(SPAN),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:50\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:50,\n#12 1.696     fields: {answer, to_question},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548010, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:184\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:184,\n#12 1.696     fields: {foo},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480b8, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:205\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:205,\n#12 1.696     fields: {foo.bar, foo.baz},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e5480d0, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_values] enabled -> true\n#12 1.696 [option_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_values] enabled -> true\n#12 1.696 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [raw_ident_in_field_name] enabled -> true\n#12 1.696 [string_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:72\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Debug,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:72,\n#12 1.696     fields: {message},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548058, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [string_field] enabled -> true\n#12 1.696 [constant_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [constant_field_name] enabled -> true\n#12 1.696 [event_with_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_with_message] enabled -> true\n#12 1.696 [dotted_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [dotted_field_name] enabled -> true\n#12 1.696 [moved_field] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [moved_field] enabled -> true\n#12 1.696 [event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [event_without_message] enabled -> true\n#12 1.696 [explicit_child] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child] enabled -> true\n#12 1.696 [explicit_child_at_levels] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [explicit_child_at_levels] enabled -> true\n#12 1.696 [keyword_ident_in_field_name] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [keyword_ident_in_field_name] enabled -> true\n#12 1.696 [message_without_delims] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [message_without_delims] enabled -> true\n#12 1.696 [display_shorthand] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [display_shorthand] enabled -> true\n#12 1.696 [move_field_out_of_struct] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [move_field_out_of_struct] enabled -> true\n#12 1.696 [nonzeroi32_event_without_message] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [nonzeroi32_event_without_message] enabled -> true\n#12 1.696 [one_with_everything] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [one_with_everything] enabled -> true\n#12 1.696 [option_ref_mut_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.696     kind: Kind(EVENT),\n#12 1.696 }\n#12 1.696 [option_ref_mut_values] enabled -> true\n#12 1.696 [option_ref_values] register_callsite: Metadata {\n#12 1.696     name: \"event tracing/tests/event.rs:541\",\n#12 1.696     target: \"event\",\n#12 1.696     level: Level(\n#12 1.696         Info,\n#12 1.696     ),\n#12 1.696     module_path: \"event\",\n#12 1.696     location: tracing/tests/event.rs:541,\n#12 1.696     fields: {message, foo, constant string, foo.bar},\n#12 1.696     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.697     kind: Kind(EVENT),\n#12 1.697 }\n#12 1.697 [option_ref_values] enabled: Metadata {\n#12 1.697     name: \"event tracing/tests/event.rs:541\",\n#12 1.697     target: \"event\",\n#12 1.697     level: Level(\n#12 1.697         Info,\n#12 1.697     ),\n#12 1.697     module_path: \"event\",\n#12 1.697     location: tracing/tests/event.rs:541,\n#12 1.697     fields: {message, foo, constant string, foo.bar},\n#12 1.697     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.697     kind: Kind(EVENT),\n#12 1.697 }\n#12 1.697 [option_ref_values] enabled -> true\n#12 1.697 [option_values] register_callsite: Metadata {\n#12 1.697     name: \"event tracing/tests/event.rs:541\",\n#12 1.697     target: \"event\",\n#12 1.697     level: Level(\n#12 1.697         Info,\n#12 1.697     ),\n#12 1.697     module_path: \"event\",\n#12 1.697     location: tracing/tests/event.rs:541,\n#12 1.697     fields: {message, foo, constant string, foo.bar},\n#12 1.697     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.697     kind: Kind(EVENT),\n#12 1.697 }\n#12 1.697 [option_values] enabled: Metadata {\n#12 1.697     name: \"event tracing/tests/event.rs:541\",\n#12 1.697     target: \"event\",\n#12 1.697     level: Level(\n#12 1.697         Info,\n#12 1.697     ),\n#12 1.697     module_path: \"event\",\n#12 1.697     location: tracing/tests/event.rs:541,\n#12 1.697     fields: {message, foo, constant string, foo.bar},\n#12 1.697     callsite: Identifier(Pointer { addr: 0x55a81e548280, metadata: DynMetadata(0x55a81e536928) }),\n#12 1.697     kind: Kind(EVENT),\n#12 1.697 }\n#12 1.697 [option_values] enabled -> true\n#12 1.697 [raw_ident_in_field_name] register_callsite: Metadata {\n#12 1.697  \n#12 1.697 [output clipped, log limit 200KiB/s reached]\n#12 1.700      Running tests/filter_caching_is_lexically_scoped.rs (target/debug/deps/filter_caching_is_lexically_scoped-65dd074a99eb7869)\n#12 1.703      Running tests/filters_are_not_reevaluated_for_the_same_span.rs (target/debug/deps/filters_are_not_reevaluated_for_the_same_span-1d6c2b861dde1240)\n#12 1.707      Running tests/filters_are_reevaluated_for_different_call_sites.rs (target/debug/deps/filters_are_reevaluated_for_different_call_sites-9ac8aebe3f9244c1)\n#12 1.709      Running tests/filters_dont_leak.rs (target/debug/deps/filters_dont_leak-43845863a931490a)\n#12 1.712      Running tests/future_send.rs (target/debug/deps/future_send-ddb3974ef07e6d23)\n#12 1.715      Running tests/instrument.rs (target/debug/deps/instrument-a47ea8b4babde974)\n#12 1.719      Running tests/macro_imports.rs (target/debug/deps/macro_imports-fe02506a9810858b)\n#12 1.722      Running tests/macros.rs (target/debug/deps/macros-aecdd04cdc164e4e)\n#12 1.730      Running tests/macros_incompatible_concat.rs (target/debug/deps/macros_incompatible_concat-1cc000af0d6a1885)\n#12 1.733      Running tests/max_level_hint.rs (target/debug/deps/max_level_hint-cf6ffdbe63eb678b)\n#12 1.736      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-c4147fc0b4079d89)\n#12 1.839      Running tests/multiple_max_level_hints.rs (target/debug/deps/multiple_max_level_hints-f7f9739cbfc36991)\n#12 1.843      Running tests/no_subscriber.rs (target/debug/deps/no_subscriber-a50c92f97cb7f7f4)\n#12 1.846      Running tests/register_callsite_deadlock.rs (target/debug/deps/register_callsite_deadlock-42a0812960255d8b)\n#12 1.849      Running tests/scoped_clobbers_default.rs (target/debug/deps/scoped_clobbers_default-b187719e730ed561)\n#12 1.853      Running tests/span.rs (target/debug/deps/span-a7cfe38cc7bfb8c7)\n#12 2.101      Running tests/subscriber.rs (target/debug/deps/subscriber-a5a3ff6315fec54c)\n#12 2.104      Running unittests src/lib.rs (target/debug/deps/tracing_appender-04368258e11243ac)\n#12 7.124      Running unittests src/lib.rs (target/debug/deps/tracing_attributes-77bfca6ff021554e)\n#12 7.128      Running tests/async_fn.rs (target/debug/deps/async_fn-7f67cbcf7ef6c2b0)\n#12 7.137      Running tests/dead_code.rs (target/debug/deps/dead_code-189550194a125f7a)\n#12 7.140      Running tests/destructuring.rs (target/debug/deps/destructuring-2cef51104a51a7c9)\n#12 7.146      Running tests/err.rs (target/debug/deps/err-1f4c8a07afba1e9f)\n#12 7.161      Running tests/fields.rs (target/debug/deps/fields-765d54db324829c9)\n#12 7.171      Running tests/follows_from.rs (target/debug/deps/follows_from-d88bbf60bf2e3ba0)\n#12 7.175      Running tests/instrument.rs (target/debug/deps/instrument-9d49f534aeecfb87)\n#12 7.182      Running tests/levels.rs (target/debug/deps/levels-218a1349cbf08bfb)\n#12 7.186      Running tests/names.rs (target/debug/deps/names-babb4b7a0c035795)\n#12 7.189      Running tests/parents.rs (target/debug/deps/parents-f28b3e589cd2c881)\n#12 7.193      Running tests/ret.rs (target/debug/deps/ret-3bf3c0720fd12a00)\n#12 7.206      Running tests/targets.rs (target/debug/deps/targets-97a17d23db869b34)\n#12 7.210      Running tests/ui.rs (target/debug/deps/ui-3221c9d7be663047)\n#12 7.287    Compiling tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#12 7.424     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.17s\n#12 7.480 \n#12 7.480 \n#12 7.480 test tests/ui/pass/type_shadowing.rs ... ok\n#12 7.590 \n#12 7.590 WARNINGS:\n#12 7.590 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#12 7.590 warning: unused import: `Bar::*`\n#12 7.590   --> tests/ui/pass/type_shadowing.rs:14:9\n#12 7.590    |\n#12 7.590 14 |     use Bar::*;\n#12 7.590    |         ^^^^^^\n#12 7.590    |\n#12 7.590    = note: `#[warn(unused_imports)]` on by default\n#12 7.590 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#12 7.590 \n#12 7.590 STDERR:\n#12 7.590 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#12 7.590 warning: unused import: `Bar::*`\n#12 7.590   --> /workspace/tracing-attributes/tests/ui/pass/type_shadowing.rs:14:9\n#12 7.590    |\n#12 7.590 14 |     use Bar::*;\n#12 7.590    |         ^^^^^^\n#12 7.590    |\n#12 7.590    = note: `#[warn(unused_imports)]` on by default\n#12 7.590 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#12 7.590 \n#12 7.590 \n#12 7.590 \n#12 7.636     Checking tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#12 7.673     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.07s\n#12 7.721 \n#12 7.721 \n#12 7.900 test tests/ui/fail/async_instrument.rs ... ok\n#12 7.900 test tests/ui/fail/const_instrument.rs ... ok\n#12 7.900 test tests/ui/fail/unused_instrumented_fn.rs ... ok\n#12 7.900 \n#12 7.900 \n#12 7.901      Running unittests src/lib.rs (target/debug/deps/tracing_core-734d01840db1e916)\n#12 7.905      Running tests/dispatch.rs (target/debug/deps/dispatch-75c9d1a443927b39)\n#12 7.908      Running tests/global_dispatch.rs (target/debug/deps/global_dispatch-e28841795b95072c)\n#12 7.912      Running tests/local_dispatch_before_init.rs (target/debug/deps/local_dispatch_before_init-de2b7849bbc31f2a)\n#12 7.915      Running tests/macros.rs (target/debug/deps/macros-1d65857f050f4003)\n#12 7.917      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-6eed3a01502a01bf)\n#12 7.931      Running unittests src/lib.rs (target/debug/deps/tracing_error-23aeb8e58b602ab1)\n#12 7.935      Running unittests src/lib.rs (target/debug/deps/tracing_flame-35f2bd68cbb6e0db)\n#12 7.937      Running tests/collapsed.rs (target/debug/deps/collapsed-107fe0355326d447)\n#12 8.557      Running tests/concurrent.rs (target/debug/deps/concurrent-d30dc24ba1fefae1)\n#12 8.692      Running unittests src/lib.rs (target/debug/deps/tracing_futures-2cbbccacd703eaf2)\n#12 8.695      Running tests/std_future.rs (target/debug/deps/std_future-b9f19c63b694ba50)\n#12 8.699      Running unittests src/lib.rs (target/debug/deps/tracing_journald-87169daee49b2f8b)\n#12 8.702      Running tests/journal.rs (target/debug/deps/journal-85cc291f5ef386fd)\n#12 8.707 error: test failed, to rerun pass `-p tracing-journald --test journal`\n#12 8.783 data: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_custom_target] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_impl_type] new_span: name=\"ret_impl_type\"; target=\"ret\"; id=Id(1);\n#12 8.783 [test_impl_type] enter: ret_impl_type; id=Id(1);\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:152\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997130, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_impl_type] event: event tracing-attributes/tests/ret.rs:152;\n#12 8.783 [test_impl_type] exit: ret_impl_type; id=Id(1);\n#12 8.783 [test_impl_type] drop_span: ret_impl_type; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- test_ret_and_ok stdout ----\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_custom_target] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_and_ok\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971c0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_ret_and_ok] new_span: name=\"ret_and_ok\"; target=\"ret\"; id=Id(1);\n#12 8.783 [test_ret_and_ok] enter: ret_and_ok; id=Id(1);\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:231\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:231,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971d8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_ret_and_ok] event: event tracing-attributes/tests/ret.rs:231;\n#12 8.783 [test_ret_and_ok] exit: ret_and_ok; id=Id(1);\n#12 8.783 [test_ret_and_ok] drop_span: ret_and_ok; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- test_ret_and_err stdout ----\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_custom_target] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_and_err\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997178, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_err] new_span: name=\"ret_and_err\"; target=\"ret\"; id=Id(1);\n#12 8.783 [test_ret_and_err] enter: ret_and_err; id=Id(1);\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:202\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Error,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:202,\n#12 8.783     fields: {error},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9971a8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_err] event: event tracing-attributes/tests/ret.rs:202;\n#12 8.783 [test_ret_and_err] exit: ret_and_err; id=Id(1);\n#12 8.783 [test_ret_and_err] drop_span: ret_and_err; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- test_mut stdout ----\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_impl_type\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:152,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997118, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_warn_info\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Warn,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:260,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997208, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_dbg_warn\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:285,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997238, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_custom_target] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_custom_target] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_with_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997040, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:11,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997010, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:125\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997100, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_async\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:125,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970e8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"fake\",\n#12 8.783     target: \"tracing_mock::field\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_mock::field\",\n#12 8.783     location: tracing-mock/src/field.rs:610,\n#12 8.783     fields: {fake_field},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc997268, metadata: DynMetadata(0x561efc9793d0) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"ret_mut\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970a0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_mut] new_span: name=\"ret_mut\"; target=\"ret\"; id=Id(1);\n#12 8.783 [test_mut] enter: ret_mut; id=Id(1);\n#12 8.783 [test_async] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_async] enabled -> true\n#12 8.783 [test] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test] enabled -> true\n#12 8.783 [test_dbg_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg_warn] enabled -> true\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_impl_type] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_impl_type] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_err] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_err] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_warn] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn] enabled -> true\n#12 8.783 [test_dbg] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_dbg] enabled -> true\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:96\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:96,\n#12 8.783     fields: {a},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970b8, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_mut] event: event tracing-attributes/tests/ret.rs:96;\n#12 8.783 [test_warn_info] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_warn_info] enabled -> true\n#12 8.783 [test_mut] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_ret_and_ok] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_ret_and_ok] enabled -> true\n#12 8.783 [test_mut] enabled: Metadata {\n#12 8.783     name: \"event tracing-attributes/tests/ret.rs:93\",\n#12 8.783     target: \"ret\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"ret\",\n#12 8.783     location: tracing-attributes/tests/ret.rs:93,\n#12 8.783     fields: {return},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x561efc9970d0, metadata: DynMetadata(0x561efc96f020) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [test_mut] enabled -> true\n#12 8.783 [test_mut] event: event tracing-attributes/tests/ret.rs:93;\n#12 8.783 [test_mut] exit: ret_mut; id=Id(1);\n#12 8.783 [test_mut] drop_span: ret_mut; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     test\n#12 8.783     test_async\n#12 8.783     test_custom_target\n#12 8.783     test_dbg\n#12 8.783     test_dbg_warn\n#12 8.783     test_impl_type\n#12 8.783     test_mut\n#12 8.783     test_ret_and_err\n#12 8.783     test_ret_and_ok\n#12 8.783     test_warn\n#12 8.783     test_warn_info\n#12 8.783 \n#12 8.783 test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 2 tests\n#12 8.783 test custom_targets ... ok\n#12 8.783 test default_targets ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- custom_targets stdout ----\n#12 8.783 [custom_targets] register_callsite: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled -> true\n#12 8.783 [custom_targets] new_span: name=\"custom_target\"; target=\"my_target\"; id=Id(1);\n#12 8.783 [custom_targets] enter: custom_target; id=Id(1);\n#12 8.783 [custom_targets] exit: custom_target; id=Id(1);\n#12 8.783 [custom_targets] drop_span: custom_target; id=Id(1); refs=1;\n#12 8.783 [custom_targets] register_callsite: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_other_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:19,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2058, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_other_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:19,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2058, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled -> true\n#12 8.783 [default_targets] register_callsite: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_other_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:19,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2058, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_other_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:19,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2058, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled -> true\n#12 8.783 [custom_targets] new_span: name=\"custom_target\"; target=\"my_other_target\"; id=Id(2);\n#12 8.783 [custom_targets] enter: custom_target; id=Id(2);\n#12 8.783 [custom_targets] exit: custom_target; id=Id(2);\n#12 8.783 [custom_targets] drop_span: custom_target; id=Id(2); refs=1;\n#12 8.783 \n#12 8.783 ---- default_targets stdout ----\n#12 8.783 [custom_targets] register_callsite: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled -> true\n#12 8.783 [default_targets] register_callsite: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled: Metadata {\n#12 8.783     name: \"custom_target\",\n#12 8.783     target: \"my_target\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:8,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2028, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled -> true\n#12 8.783 [custom_targets] register_callsite: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:5,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2010, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:5,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2010, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [custom_targets] enabled -> true\n#12 8.783 [default_targets] register_callsite: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:5,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2010, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:5,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2010, metadata: DynMetadata(0x55bb4a292240) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled -> true\n#12 8.783 [default_targets] new_span: name=\"default_target\"; target=\"targets\"; id=Id(1);\n#12 8.783 [default_targets] enter: default_target; id=Id(1);\n#12 8.783 [default_targets] exit: default_target; id=Id(1);\n#12 8.783 [default_targets] drop_span: default_target; id=Id(1); refs=1;\n#12 8.783 [default_targets] register_callsite: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets::my_mod\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2040, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled: Metadata {\n#12 8.783     name: \"default_target\",\n#12 8.783     target: \"targets::my_mod\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"targets::my_mod\",\n#12 8.783     location: tracing-attributes/tests/targets.rs:16,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x55bb4a2a2040, metadata: DynMetadata(0x55bb4a292a38) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [default_targets] enabled -> true\n#12 8.783 [default_targets] new_span: name=\"default_target\"; target=\"targets::my_mod\"; id=Id(2);\n#12 8.783 [default_targets] enter: default_target; id=Id(2);\n#12 8.783 [default_targets] exit: default_target; id=Id(2);\n#12 8.783 [default_targets] drop_span: default_target; id=Id(2); refs=1;\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     custom_targets\n#12 8.783     default_targets\n#12 8.783 \n#12 8.783 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 2 tests\n#12 8.783 test pass ... ok\n#12 8.783 test compile_fail ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     compile_fail\n#12 8.783     pass\n#12 8.783 \n#12 8.783 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.69s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 20 tests\n#12 8.783 test dispatcher::test::default_dispatch ... ok\n#12 8.783 test dispatcher::test::default_no_subscriber ... ok\n#12 8.783 test dispatcher::test::dispatch_downcasts ... ok\n#12 8.783 test dispatcher::test::dispatch_is ... ok\n#12 8.783 test dispatcher::test::spans_dont_infinite_loop ... ok\n#12 8.783 test dispatcher::test::events_dont_infinite_loop ... ok\n#12 8.783 test field::test::empty_fields_are_skipped ... ok\n#12 8.783 test field::test::empty_value_set_is_empty ... ok\n#12 8.783 test field::test::fields_from_other_callsets_are_skipped ... ok\n#12 8.783 test field::test::index_of_field_in_fieldset_is_correct ... ok\n#12 8.783 test field::test::record_bytes ... ok\n#12 8.783 test field::test::record_debug_fn ... ok\n#12 8.783 test field::test::record_error ... ok\n#12 8.783 test field::test::sparse_value_sets_are_not_empty ... ok\n#12 8.783 test field::test::value_set_with_no_values_is_empty ... ok\n#12 8.783 test field::test::value_sets_with_fields_from_other_callsites_are_empty ... ok\n#12 8.783 test metadata::tests::filter_level_conversion ... ok\n#12 8.783 test metadata::tests::level_filter_is_usize_sized ... ok\n#12 8.783 test metadata::tests::level_filter_reprs ... ok\n#12 8.783 test metadata::tests::level_from_str ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     dispatcher::test::default_dispatch\n#12 8.783     dispatcher::test::default_no_subscriber\n#12 8.783     dispatcher::test::dispatch_downcasts\n#12 8.783     dispatcher::test::dispatch_is\n#12 8.783     dispatcher::test::events_dont_infinite_loop\n#12 8.783     dispatcher::test::spans_dont_infinite_loop\n#12 8.783     field::test::empty_fields_are_skipped\n#12 8.783     field::test::empty_value_set_is_empty\n#12 8.783     field::test::fields_from_other_callsets_are_skipped\n#12 8.783     field::test::index_of_field_in_fieldset_is_correct\n#12 8.783     field::test::record_bytes\n#12 8.783     field::test::record_debug_fn\n#12 8.783     field::test::record_error\n#12 8.783     field::test::sparse_value_sets_are_not_empty\n#12 8.783     field::test::value_set_with_no_values_is_empty\n#12 8.783     field::test::value_sets_with_fields_from_other_callsites_are_empty\n#12 8.783     metadata::tests::filter_level_conversion\n#12 8.783     metadata::tests::level_filter_is_usize_sized\n#12 8.783     metadata::tests::level_filter_reprs\n#12 8.783     metadata::tests::level_from_str\n#12 8.783 \n#12 8.783 test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 2 tests\n#12 8.783 test nested_set_default ... ok\n#12 8.783 test set_default_dispatch ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     nested_set_default\n#12 8.783     set_default_dispatch\n#12 8.783 \n#12 8.783 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test global_dispatch ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     global_dispatch\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test local_dispatch_before_init ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- local_dispatch_before_init stdout ----\n#12 8.783 [tracing-core/tests/local_dispatch_before_init.rs:15:47] current = Dispatch::Global(\n#12 8.783     Pointer { addr: 0x5611944eeb76, metadata: DynMetadata(0x561194515510) },\n#12 8.783 )\n#12 8.783 [tracing-core/tests/local_dispatch_before_init.rs:25:21] current = Dispatch::Scoped(\n#12 8.783     0x7febe959c610,\n#12 8.783 )\n#12 8.783 [tracing-core/tests/local_dispatch_before_init.rs:39:13] current = Dispatch::Global(\n#12 8.783     Pointer { addr: 0x7febe4000d60, metadata: DynMetadata(0x56119450ece0) },\n#12 8.783 )\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     local_dispatch_before_init\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test metadata_macro_api ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     metadata_macro_api\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test event_before_register ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     event_before_register\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 3 tests\n#12 8.783 test backtrace::tests::capture_empty ... ok\n#12 8.783 test backtrace::tests::capture_unsupported ... ok\n#12 8.783 test backtrace::tests::capture_supported ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- backtrace::tests::capture_empty stdout ----\n#12 8.783 [tracing-error/src/backtrace.rs:298:13] &span_trace = SpanTrace []\n#12 8.783 \n#12 8.783 ---- backtrace::tests::capture_unsupported stdout ----\n#12 8.783 [tracing-error/src/backtrace.rs:314:13] &span_trace = SpanTrace []\n#12 8.783 \n#12 8.783 ---- backtrace::tests::capture_supported stdout ----\n#12 8.783 [tracing-error/src/backtrace.rs:285:13] &span_trace = SpanTrace [\n#12 8.783     { target: \"tracing_error::backtrace::tests\", name: \"test span\", file: \"tracing-error/src/backtrace.rs\", line: 280 },\n#12 8.783 ]\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     backtrace::tests::capture_empty\n#12 8.783     backtrace::tests::capture_supported\n#12 8.783     backtrace::tests::capture_unsupported\n#12 8.783 \n#12 8.783 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 0 tests\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test capture_supported ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     capture_supported\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.62s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test capture_supported ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- capture_supported stdout ----\n#12 8.783 ThreadId(2)-capture_supported 411439\n#12 8.783 ThreadId(2)-capture_supported;concurrent::main 33282\n#12 8.783 ThreadId(3);concurrent::main;concurrent::outer 10816510\n#12 8.783 ThreadId(2)-capture_supported;concurrent::main;concurrent::outer 30363021\n#12 8.783 ThreadId(3);concurrent::main;concurrent::outer;concurrent::Inner 50180509\n#12 8.783 \n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     capture_supported\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.13s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 3 tests\n#12 8.783 test tests::futures_01_tests::future_enter_exit_is_reasonable ... ok\n#12 8.783 test tests::futures_01_tests::future_error_ends_span ... ok\n#12 8.783 test tests::futures_01_tests::stream_enter_exit_is_reasonable ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- tests::futures_01_tests::future_enter_exit_is_reasonable stdout ----\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- tests::futures_01_tests::future_error_ends_span stdout ----\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- tests::futures_01_tests::stream_enter_exit_is_reasonable stdout ----\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:671,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507028, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:650,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507010, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:696,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507040, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:696,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507040, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:696,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507040, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"tracing_futures::tests::futures_01_tests\",\n#12 8.783     location: tracing-futures/src/lib.rs:696,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x560ff0507040, metadata: DynMetadata(0x560ff04f7ce0) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [tests::futures_01_tests::stream_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     tests::futures_01_tests::future_enter_exit_is_reasonable\n#12 8.783     tests::futures_01_tests::future_error_ends_span\n#12 8.783     tests::futures_01_tests::stream_enter_exit_is_reasonable\n#12 8.783 \n#12 8.783 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 3 tests\n#12 8.783 test enter_exit_is_reasonable ... ok\n#12 8.783 test error_ends_span ... ok\n#12 8.783 test span_on_drop ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 ---- enter_exit_is_reasonable stdout ----\n#12 8.783 [enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled -> true\n#12 8.783 [enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#12 8.783 [enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- error_ends_span stdout ----\n#12 8.783 [enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled -> true\n#12 8.783 [error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled -> true\n#12 8.783 [enter_exit_is_reasonable] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [enter_exit_is_reasonable] enabled -> true\n#12 8.783 [error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled -> true\n#12 8.783 [error_ends_span] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#12 8.783 [error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [error_ends_span] enter: foo; id=Id(1);\n#12 8.783 [error_ends_span] exit: foo; id=Id(1);\n#12 8.783 [error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 \n#12 8.783 ---- span_on_drop stdout ----\n#12 8.783 [error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled -> true\n#12 8.783 [span_on_drop] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:41,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113028, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled -> true\n#12 8.783 [error_ends_span] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [error_ends_span] enabled -> true\n#12 8.783 [span_on_drop] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:22,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113010, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled -> true\n#12 8.783 [span_on_drop] register_callsite: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:95,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113058, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled: Metadata {\n#12 8.783     name: \"foo\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:95,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113058, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled -> true\n#12 8.783 [span_on_drop] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#12 8.783 [span_on_drop] enter: foo; id=Id(1);\n#12 8.783 [span_on_drop] register_callsite: Metadata {\n#12 8.783     name: \"event tracing-futures/tests/std_future.rs:54\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:54,\n#12 8.783     fields: {message},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113040, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled: Metadata {\n#12 8.783     name: \"event tracing-futures/tests/std_future.rs:54\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Info,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:54,\n#12 8.783     fields: {message},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113040, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(EVENT),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled -> true\n#12 8.783 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#12 8.783 ----> [span_on_drop] check MockSpan { name: \"foo\" } against actual parent with Id=Id(1)\n#12 8.783 [span_on_drop] exit: foo; id=Id(1);\n#12 8.783 [span_on_drop] enter: foo; id=Id(1);\n#12 8.783 [span_on_drop] exit: foo; id=Id(1);\n#12 8.783 [span_on_drop] drop_span: foo; id=Id(1); refs=1;\n#12 8.783 [span_on_drop] register_callsite: Metadata {\n#12 8.783     name: \"bar\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:100,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113070, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled: Metadata {\n#12 8.783     name: \"bar\",\n#12 8.783     target: \"std_future\",\n#12 8.783     level: Level(\n#12 8.783         Trace,\n#12 8.783     ),\n#12 8.783     module_path: \"std_future\",\n#12 8.783     location: tracing-futures/tests/std_future.rs:100,\n#12 8.783     fields: {},\n#12 8.783     callsite: Identifier(Pointer { addr: 0x555b17113070, metadata: DynMetadata(0x555b171028b8) }),\n#12 8.783     kind: Kind(SPAN),\n#12 8.783 }\n#12 8.783 [span_on_drop] enabled -> true\n#12 8.783 [span_on_drop] new_span: name=\"bar\"; target=\"std_future\"; id=Id(2);\n#12 8.783 [span_on_drop] enter: bar; id=Id(2);\n#12 8.783 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#12 8.783 ----> [span_on_drop] check MockSpan { name: \"bar\" } against actual parent with Id=Id(2)\n#12 8.783 [span_on_drop] exit: bar; id=Id(2);\n#12 8.783 [span_on_drop] drop_span: bar; id=Id(2); refs=1;\n#12 8.783 \n#12 8.783 \n#12 8.783 successes:\n#12 8.783     enter_exit_is_reasonable\n#12 8.783     error_ends_span\n#12 8.783     span_on_drop\n#12 8.783 \n#12 8.783 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 1 test\n#12 8.783 test socket::cmsg_buffer_size_for_one_fd ... ok\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783     socket::cmsg_buffer_size_for_one_fd\n#12 8.783 \n#12 8.783 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 8.783 \n#12 8.783 running 11 tests\n#12 8.783 test custom_priorities ... FAILED\n#12 8.783 test internal_null_byte ... FAILED\n#12 8.783 test journal_fields ... FAILED\n#12 8.783 test multiline_message ... FAILED\n#12 8.783 test simple_message ... FAILED\n#12 8.783 test multiline_message_trailing_newline ... FAILED\n#12 8.783 test multiple_spans_metadata ... FAILED\n#12 8.783 test simple_metadata ... FAILED\n#12 8.783 test span_metadata ... FAILED\n#12 8.783 test spans_field_collision ... FAILED\n#12 8.783 test large_message ... FAILED\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 successes:\n#12 8.783 \n#12 8.783 failures:\n#12 8.783 \n#12 8.783 ---- custom_priorities stdout ----\n#12 8.783 \n#12 8.783 thread 'custom_priorities' panicked at tracing-journald/tests/journal.rs:196:10:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#12 8.783 \n#12 8.783 ---- internal_null_byte stdout ----\n#12 8.783 \n#12 8.783 thread 'internal_null_byte' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- journal_fields stdout ----\n#12 8.783 \n#12 8.783 thread 'journal_fields' panicked at tracing-journald/tests/journal.rs:288:10:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- multiline_message stdout ----\n#12 8.783 \n#12 8.783 thread 'multiline_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- simple_message stdout ----\n#12 8.783 \n#12 8.783 thread 'simple_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- multiline_message_trailing_newline stdout ----\n#12 8.783 \n#12 8.783 thread 'multiline_message_trailing_newline' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- multiple_spans_metadata stdout ----\n#12 8.783 \n#12 8.783 thread 'multiple_spans_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- simple_metadata stdout ----\n#12 8.783 \n#12 8.783 thread 'simple_metadata' panicked at tracing-journald/tests/journal.rs:269:10:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- span_metadata stdout ----\n#12 8.783 \n#12 8.783 thread 'span_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- spans_field_collision stdout ----\n#12 8.783 \n#12 8.783 thread 'spans_field_collision' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 ---- large_message stdout ----\n#12 8.783 \n#12 8.783 thread 'large_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#12 8.783 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#12 8.783 \n#12 8.783 \n#12 8.783 failures:\n#12 8.783     custom_priorities\n#12 8.783     internal_null_byte\n#12 8.783     journal_fields\n#12 8.783     large_message\n#12 8.783     multiline_message\n#12 8.783     multiline_message_trailing_newline\n#12 8.783     multiple_spans_metadata\n#12 8.783     simple_message\n#12 8.783     simple_metadata\n#12 8.783     span_metadata\n#12 8.783     spans_field_collision\n#12 8.783 \n#12 8.783 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#12 8.783 \n#12 ERROR: process \"/bin/sh -c cargo build --workspace &&     cargo test --workspace -- --show-output &&     cargo nextest run --profile ci --workspace -- --show-output &&     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender &&     cargo bench --workspace\" did not complete successfully: exit code: 101\n------\n > [stage-0 6/9] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     cargo build --workspace &&     cargo test --workspace -- --show-output &&     cargo nextest run --profile ci --workspace -- --show-output &&     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender &&     cargo bench --workspace:\n8.783     multiline_message\n8.783     multiline_message_trailing_newline\n8.783     multiple_spans_metadata\n8.783     simple_message\n8.783     simple_metadata\n8.783     span_metadata\n8.783     spans_field_collision\n8.783 \n8.783 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n8.783 \n------\nERROR: failed to solve: process \"/bin/sh -c cargo build --workspace &&     cargo test --workspace -- --show-output &&     cargo nextest run --profile ci --workspace -- --show-output &&     cargo hack check --feature-powerset -p tracing -p tracing-attributes -p tracing-appender &&     cargo bench --workspace\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}