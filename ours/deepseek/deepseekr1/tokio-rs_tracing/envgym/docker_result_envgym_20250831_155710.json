{
  "timestamp": "20250831_155710",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756655819",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.35kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.2s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/rust:latest\n#5 DONE 0.2s\n\n#6 [stage-0  1/15] FROM docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf\n#6 resolve docker.io/library/rust:latest@sha256:3329e2de3e9ff2d58da56e95ef99a3180a4e76336a676f3fe2b88f0b0d6bcfbf done\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 5.49MB 0.1s done\n#7 DONE 0.1s\n\n#8 [stage-0  2/15] RUN apt-get update &&     apt-get install -y pkg-config libssl-dev chromium &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [stage-0  3/15] RUN --mount=type=cache,target=/usr/local/cargo/registry     rustup component add rustfmt clippy &&     rustup target add wasm32-unknown-unknown &&     rustup toolchain install nightly &&     cargo install cargo-hack cargo-minimal-versions wasm-pack cargo-nextest\n#9 CACHED\n\n#10 [stage-0  4/15] WORKDIR /workspace\n#10 CACHED\n\n#11 [stage-0  5/15] COPY . .\n#11 DONE 0.1s\n\n#12 [stage-0  6/15] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     cargo build --workspace\n#12 0.297     Updating crates.io index\n#12 1.234      Locking 332 packages to latest compatible versions\n#12 1.236       Adding ahash v0.7.8 (available: v0.8.12)\n#12 1.259       Adding criterion v0.3.6 (available: v0.7.0)\n#12 1.262       Adding crossterm v0.28.1 (available: v0.29.0)\n#12 1.267       Adding futures v0.1.31 (available: v0.3.31)\n#12 1.274       Adding http v0.2.12 (available: v1.3.1)\n#12 1.281       Adding hyper v0.14.32 (available: v1.7.0)\n#12 1.284       Adding inferno v0.11.21 (available: v0.12.3)\n#12 1.290       Adding lru v0.7.8 (available: v0.16.0)\n#12 1.291       Adding mio v0.6.23 (available: v1.0.4)\n#12 1.302       Adding rand v0.7.3 (available: v0.9.2)\n#12 1.333       Adding snafu v0.6.10 (available: v0.8.8)\n#12 1.344       Adding tokio v0.1.22 (available: v1.47.1)\n#12 1.350       Adding tower v0.4.13 (available: v0.5.2)\n#12 1.351       Adding unicode-width v0.2.0 (available: v0.2.1)\n#12 1.455     Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.17s\n#12 DONE 1.5s\n\n#13 [stage-0  7/15] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     cargo test --workspace -- --nocapture\n#13 0.528     Finished `test` profile [unoptimized + debuginfo] target(s) in 0.15s\n#13 0.554      Running unittests src/lib.rs (target/debug/deps/tracing-923b47c8b5a17290)\n#13 0.556 \n#13 0.556 running 1 test\n#13 0.556 test span::test::test_record_backwards_compat ... ok\n#13 0.556 \n#13 0.556 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.556 \n#13 0.557      Running tests/enabled.rs (target/debug/deps/enabled-bd0f7fa6f9ef314d)\n#13 0.559 \n#13 0.559 running 2 tests\n#13 0.559 [level_and_target] register_callsite: Metadata {\n#13 0.559     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.559     target: \"debug_module\",\n#13 0.559     level: Level(\n#13 0.559         Debug,\n#13 0.559     ),\n#13 0.559     module_path: \"enabled\",\n#13 0.559     location: tracing/tests/enabled.rs:21,\n#13 0.559     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> true\n#13 0.560 [level_and_target] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> true\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> true\n#13 0.560 [span_and_event] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:21\",\n#13 0.560     target: \"debug_module\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:21,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9010, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled -> true\n#13 0.560 [level_and_target] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Error,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:22,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9028, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Error,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:22,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9028, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> true\n#13 0.560 [level_and_target] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Trace,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:47,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9058, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Trace,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:47,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9058, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> false\n#13 0.560 [span_and_event] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Error,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:22,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9028, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Error,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:22,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9028, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled -> true\n#13 0.560 [span_and_event] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Trace,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:47,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9058, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:47\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Trace,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:47,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9058, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled -> false\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:22\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Error,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:22,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9028, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> true\n#13 0.560 [level_and_target] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:48,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:48,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> false\n#13 0.560 [span_and_event] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:48,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:48,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled -> true\n#13 0.560 [level_and_target] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:23,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9040, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:23,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9040, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(HINT),\n#13 0.560 }\n#13 0.560 [level_and_target] enabled -> false\n#13 0.560 [span_and_event] enabled: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:48,\n#13 0.560     fields: {},\n#13 0.560     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.560     kind: Kind(EVENT | HINT),\n#13 0.560 }\n#13 0.560 [span_and_event] enabled -> true\n#13 0.560 [span_and_event] register_callsite: Metadata {\n#13 0.560     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.560     target: \"enabled\",\n#13 0.560     level: Level(\n#13 0.560         Debug,\n#13 0.560     ),\n#13 0.560     module_path: \"enabled\",\n#13 0.560     location: tracing/tests/enabled.rs:23,\n#13 0.560     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9040, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:23\",\n#13 0.561     target: \"enabled\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:23,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9040, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> false\n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:48\",\n#13 0.561     target: \"enabled\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:48,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9070, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(EVENT | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 [span_and_event] register_callsite: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.561     target: \"enabled\",\n#13 0.561     level: Level(\n#13 0.561         Trace,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:49,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9088, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.561     target: \"enabled\",\n#13 0.561     level: Level(\n#13 0.561         Trace,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:49,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9088, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 test level_and_target ... [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:49\",\n#13 0.561     target: \"enabled\",\n#13 0.561     level: Level(\n#13 0.561         Trace,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:49,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e9088, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 [span_and_event] register_callsite: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:52,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90a0, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:52,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90a0, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 ok[span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:52\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:52,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90a0, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(SPAN | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 [span_and_event] register_callsite: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:53,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90b8, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(EVENT | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:53,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90b8, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(EVENT | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 \n#13 0.561 [span_and_event] enabled: Metadata {\n#13 0.561     name: \"enabled tracing/tests/enabled.rs:53\",\n#13 0.561     target: \"debug_module\",\n#13 0.561     level: Level(\n#13 0.561         Debug,\n#13 0.561     ),\n#13 0.561     module_path: \"enabled\",\n#13 0.561     location: tracing/tests/enabled.rs:53,\n#13 0.561     fields: {},\n#13 0.561     callsite: Identifier(Pointer { addr: 0x55b4c14e90b8, metadata: DynMetadata(0x55b4c14d9900) }),\n#13 0.561     kind: Kind(EVENT | HINT),\n#13 0.561 }\n#13 0.561 [span_and_event] enabled -> true\n#13 0.561 test span_and_event ... ok\n#13 0.561 \n#13 0.561 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 0.561 \n#13 0.561      Running tests/event.rs (target/debug/deps/event-5b5e69cada366cbb)\n#13 0.563 \n#13 0.563 running 23 tests\n#13 0.564 [borrowed_field] register_callsite: Metadata {\n#13 0.564     name: \"fake\",\n#13 0.564     target: \"tracing_mock::field\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"tracing_mock::field\",\n#13 0.564     location: tracing-mock/src/field.rs:610,\n#13 0.564     fields: {fake_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled: Metadata {\n#13 0.564     name: \"fake\",\n#13 0.564     target: \"tracing_mock::field\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"tracing_mock::field\",\n#13 0.564     location: tracing-mock/src/field.rs:610,\n#13 0.564     fields: {fake_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled -> true\n#13 0.564 [borrowed_field] register_callsite: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled -> true\n#13 0.564 [borrowed_field] register_callsite: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [borrowed_field] enabled -> true\n#13 0.564 [borrowed_field] event: event tracing/tests/event.rs:227;\n#13 0.564 [both_shorthands] register_callsite: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:227\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Info,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:227,\n#13 0.564     fields: {foo},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled -> true\n#13 0.564 [both_shorthands] register_callsite: Metadata {\n#13 0.564     name: \"fake\",\n#13 0.564     target: \"tracing_mock::field\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"tracing_mock::field\",\n#13 0.564     location: tracing-mock/src/field.rs:610,\n#13 0.564     fields: {fake_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled: Metadata {\n#13 0.564     name: \"fake\",\n#13 0.564     target: \"tracing_mock::field\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"tracing_mock::field\",\n#13 0.564     location: tracing-mock/src/field.rs:610,\n#13 0.564     fields: {fake_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled -> true\n#13 0.564 [both_shorthands] register_callsite: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:330\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:330,\n#13 0.564     fields: {display_field, debug_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled: Metadata {\n#13 0.564     name: \"event tracing/tests/event.rs:330\",\n#13 0.564     target: \"event\",\n#13 0.564     level: Level(\n#13 0.564         Trace,\n#13 0.564     ),\n#13 0.564     module_path: \"event\",\n#13 0.564     location: tracing/tests/event.rs:330,\n#13 0.564     fields: {display_field, debug_field},\n#13 0.564     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.564     kind: Kind(EVENT),\n#13 0.564 }\n#13 0.564 [both_shorthands] enabled -> true\n#13 0.564 [both_shorthands] event: event tracing/tests/event.rs:330;\n#13 0.565 [both_shorthands] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [both_shorthands] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [both_shorthands] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:289\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:289,\n#13 0.565     fields: {my_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:289\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:289,\n#13 0.565     fields: {my_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:289\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:289,\n#13 0.565     fields: {my_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:289\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:289,\n#13 0.565     fields: {my_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:330\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:330,\n#13 0.565     fields: {display_field, debug_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled -> true\n#13 0.565 [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled: Metadata {\n#13 0.565     name: \"event tracing/tests/event.rs:227\",\n#13 0.565     target: \"event\",\n#13 0.565     level: Level(\n#13 0.565         Info,\n#13 0.565     ),\n#13 0.565     module_path: \"event\",\n#13 0.565     location: tracing/tests/event.rs:227,\n#13 0.565     fields: {foo},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled -> true\n#13 0.565 test borrowed_field ... [display_shorthand] register_callsite: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [display_shorthand] enabled -> true\n#13 0.565 ok[move_field_out_of_struct] register_callsite: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled: Metadata {\n#13 0.565     name: \"fake\",\n#13 0.565     target: \"tracing_mock::field\",\n#13 0.565     level: Level(\n#13 0.565         Trace,\n#13 0.565     ),\n#13 0.565     module_path: \"tracing_mock::field\",\n#13 0.565     location: tracing-mock/src/field.rs:610,\n#13 0.565     fields: {fake_field},\n#13 0.565     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.565     kind: Kind(EVENT),\n#13 0.565 }\n#13 0.565 [move_field_out_of_struct] enabled -> true\n#13 0.565 \n#13 0.566 test both_shorthands ... ok\n#13 0.566 [display_shorthand] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled -> true\n#13 0.566 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled -> true\n#13 0.566 [dotted_field_name] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:269\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Debug,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:269,\n#13 0.566     fields: {x, y},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled -> true\n#13 0.566 [display_shorthand] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled -> true\n#13 0.566 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled -> true\n#13 0.566 [dotted_field_name] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:289\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:289,\n#13 0.566     fields: {my_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled -> true\n#13 0.566 [display_shorthand] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled -> true\n#13 0.566 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled -> true\n#13 0.566 [dotted_field_name] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:330\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:330,\n#13 0.566     fields: {display_field, debug_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled -> true\n#13 0.566 [display_shorthand] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled -> true\n#13 0.566 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled -> true\n#13 0.566 [dotted_field_name] register_callsite: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled: Metadata {\n#13 0.566     name: \"event tracing/tests/event.rs:227\",\n#13 0.566     target: \"event\",\n#13 0.566     level: Level(\n#13 0.566         Info,\n#13 0.566     ),\n#13 0.566     module_path: \"event\",\n#13 0.566     location: tracing/tests/event.rs:227,\n#13 0.566     fields: {foo},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [dotted_field_name] enabled -> true\n#13 0.566 [display_shorthand] register_callsite: Metadata {\n#13 0.566     name: \"fake\",\n#13 0.566     target: \"tracing_mock::field\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"tracing_mock::field\",\n#13 0.566     location: tracing-mock/src/field.rs:610,\n#13 0.566     fields: {fake_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled: Metadata {\n#13 0.566     name: \"fake\",\n#13 0.566     target: \"tracing_mock::field\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"tracing_mock::field\",\n#13 0.566     location: tracing-mock/src/field.rs:610,\n#13 0.566     fields: {fake_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [display_shorthand] enabled -> true\n#13 0.566 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.566     name: \"fake\",\n#13 0.566     target: \"tracing_mock::field\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"tracing_mock::field\",\n#13 0.566     location: tracing-mock/src/field.rs:610,\n#13 0.566     fields: {fake_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled: Metadata {\n#13 0.566     name: \"fake\",\n#13 0.566     target: \"tracing_mock::field\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"tracing_mock::field\",\n#13 0.566     location: tracing-mock/src/field.rs:610,\n#13 0.566     fields: {fake_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.566     kind: Kind(EVENT),\n#13 0.566 }\n#13 0.566 [move_field_out_of_struct] enabled -> true\n#13 0.566 [dotted_field_name] register_callsite: Metadata {\n#13 0.566     name: \"fake\",\n#13 0.566     target: \"tracing_mock::field\",\n#13 0.566     level: Level(\n#13 0.566         Trace,\n#13 0.566     ),\n#13 0.566     module_path: \"tracing_mock::field\",\n#13 0.566     location: tracing-mock/src/field.rs:610,\n#13 0.566     fields: {fake_field},\n#13 0.566     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled: Metadata {\n#13 0.567     name: \"fake\",\n#13 0.567     target: \"tracing_mock::field\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"tracing_mock::field\",\n#13 0.567     location: tracing-mock/src/field.rs:610,\n#13 0.567     fields: {fake_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled -> true\n#13 0.567 [display_shorthand] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled -> true\n#13 0.567 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled -> true\n#13 0.567 [dotted_field_name] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled -> true\n#13 0.567 [event_with_message] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [event_with_message] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:205\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Info,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:205,\n#13 0.567     fields: {foo.bar, foo.baz},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [event_with_message] enabled -> true\n#13 0.567 [display_shorthand] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled -> true\n#13 0.567 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled -> true\n#13 0.567 [dotted_field_name] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled -> true\n#13 0.567 [event_with_message] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [event_with_message] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:269\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Debug,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:269,\n#13 0.567     fields: {x, y},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [event_with_message] enabled -> true\n#13 0.567 [display_shorthand] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [display_shorthand] enabled -> true\n#13 0.567 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [move_field_out_of_struct] enabled -> true\n#13 0.567 [dotted_field_name] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [dotted_field_name] enabled -> true\n#13 0.567 [event_with_message] register_callsite: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.567     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.567     kind: Kind(EVENT),\n#13 0.567 }\n#13 0.567 [event_with_message] enabled: Metadata {\n#13 0.567     name: \"event tracing/tests/event.rs:289\",\n#13 0.567     target: \"event\",\n#13 0.567     level: Level(\n#13 0.567         Trace,\n#13 0.567     ),\n#13 0.567     module_path: \"event\",\n#13 0.567     location: tracing/tests/event.rs:289,\n#13 0.567     fields: {my_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled -> true\n#13 0.568 [display_shorthand] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled -> true\n#13 0.568 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled -> true\n#13 0.568 [dotted_field_name] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled -> true\n#13 0.568 [event_with_message] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:330\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:330,\n#13 0.568     fields: {display_field, debug_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled -> true\n#13 0.568 [display_shorthand] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled -> true\n#13 0.568 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled -> true\n#13 0.568 [dotted_field_name] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled -> true\n#13 0.568 [event_with_message] register_callsite: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled: Metadata {\n#13 0.568     name: \"event tracing/tests/event.rs:227\",\n#13 0.568     target: \"event\",\n#13 0.568     level: Level(\n#13 0.568         Info,\n#13 0.568     ),\n#13 0.568     module_path: \"event\",\n#13 0.568     location: tracing/tests/event.rs:227,\n#13 0.568     fields: {foo},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled -> true\n#13 0.568 [display_shorthand] register_callsite: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [display_shorthand] enabled -> true\n#13 0.568 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [move_field_out_of_struct] enabled -> true\n#13 0.568 [dotted_field_name] register_callsite: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [dotted_field_name] enabled -> true\n#13 0.568 [event_with_message] register_callsite: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled: Metadata {\n#13 0.568     name: \"fake\",\n#13 0.568     target: \"tracing_mock::field\",\n#13 0.568     level: Level(\n#13 0.568         Trace,\n#13 0.568     ),\n#13 0.568     module_path: \"tracing_mock::field\",\n#13 0.568     location: tracing-mock/src/field.rs:610,\n#13 0.568     fields: {fake_field},\n#13 0.568     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.568     kind: Kind(EVENT),\n#13 0.568 }\n#13 0.568 [event_with_message] enabled -> true\n#13 0.569 [display_shorthand] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled -> true\n#13 0.569 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled -> true\n#13 0.569 [dotted_field_name] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled -> true\n#13 0.569 [event_with_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled -> true\n#13 0.569 [event_without_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:72\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:72,\n#13 0.569     fields: {message},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled -> true\n#13 0.569 [display_shorthand] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled -> true\n#13 0.569 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled -> true\n#13 0.569 [dotted_field_name] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled -> true\n#13 0.569 [event_with_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled -> true\n#13 0.569 [event_without_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:205\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Info,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:205,\n#13 0.569     fields: {foo.bar, foo.baz},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled -> true\n#13 0.569 [display_shorthand] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled -> true\n#13 0.569 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [move_field_out_of_struct] enabled -> true\n#13 0.569 [dotted_field_name] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [dotted_field_name] enabled -> true\n#13 0.569 [event_with_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_with_message] enabled -> true\n#13 0.569 [event_without_message] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:269\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Debug,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:269,\n#13 0.569     fields: {x, y},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [event_without_message] enabled -> true\n#13 0.569 [display_shorthand] register_callsite: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:289\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Trace,\n#13 0.569     ),\n#13 0.569     module_path: \"event\",\n#13 0.569     location: tracing/tests/event.rs:289,\n#13 0.569     fields: {my_field},\n#13 0.569     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.569     kind: Kind(EVENT),\n#13 0.569 }\n#13 0.569 [display_shorthand] enabled: Metadata {\n#13 0.569     name: \"event tracing/tests/event.rs:289\",\n#13 0.569     target: \"event\",\n#13 0.569     level: Level(\n#13 0.569         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled -> true\n#13 0.570 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled -> true\n#13 0.570 [dotted_field_name] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled -> true\n#13 0.570 [event_with_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled -> true\n#13 0.570 [event_without_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:289\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:289,\n#13 0.570     fields: {my_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled -> true\n#13 0.570 [display_shorthand] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled -> true\n#13 0.570 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled -> true\n#13 0.570 [dotted_field_name] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled -> true\n#13 0.570 [event_with_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled -> true\n#13 0.570 [event_without_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:330\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:330,\n#13 0.570     fields: {display_field, debug_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled -> true\n#13 0.570 [display_shorthand] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled -> true\n#13 0.570 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled -> true\n#13 0.570 [dotted_field_name] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [dotted_field_name] enabled -> true\n#13 0.570 [event_with_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_with_message] enabled -> true\n#13 0.570 [event_without_message] register_callsite: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled: Metadata {\n#13 0.570     name: \"event tracing/tests/event.rs:227\",\n#13 0.570     target: \"event\",\n#13 0.570     level: Level(\n#13 0.570         Info,\n#13 0.570     ),\n#13 0.570     module_path: \"event\",\n#13 0.570     location: tracing/tests/event.rs:227,\n#13 0.570     fields: {foo},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [event_without_message] enabled -> true\n#13 0.570 [display_shorthand] register_callsite: Metadata {\n#13 0.570     name: \"fake\",\n#13 0.570     target: \"tracing_mock::field\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"tracing_mock::field\",\n#13 0.570     location: tracing-mock/src/field.rs:610,\n#13 0.570     fields: {fake_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled: Metadata {\n#13 0.570     name: \"fake\",\n#13 0.570     target: \"tracing_mock::field\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"tracing_mock::field\",\n#13 0.570     location: tracing-mock/src/field.rs:610,\n#13 0.570     fields: {fake_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [display_shorthand] enabled -> true\n#13 0.570 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.570     name: \"fake\",\n#13 0.570     target: \"tracing_mock::field\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"tracing_mock::field\",\n#13 0.570     location: tracing-mock/src/field.rs:610,\n#13 0.570     fields: {fake_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled: Metadata {\n#13 0.570     name: \"fake\",\n#13 0.570     target: \"tracing_mock::field\",\n#13 0.570     level: Level(\n#13 0.570         Trace,\n#13 0.570     ),\n#13 0.570     module_path: \"tracing_mock::field\",\n#13 0.570     location: tracing-mock/src/field.rs:610,\n#13 0.570     fields: {fake_field},\n#13 0.570     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.570     kind: Kind(EVENT),\n#13 0.570 }\n#13 0.570 [move_field_out_of_struct] enabled -> true\n#13 0.571 [dotted_field_name] register_callsite: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled -> true\n#13 0.571 [event_with_message] register_callsite: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_with_message] enabled: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_with_message] enabled -> true\n#13 0.571 [event_without_message] register_callsite: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_without_message] enabled: Metadata {\n#13 0.571     name: \"fake\",\n#13 0.571     target: \"tracing_mock::field\",\n#13 0.571     level: Level(\n#13 0.571         Trace,\n#13 0.571     ),\n#13 0.571     module_path: \"tracing_mock::field\",\n#13 0.571     location: tracing-mock/src/field.rs:610,\n#13 0.571     fields: {fake_field},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_without_message] enabled -> true\n#13 0.571 [display_shorthand] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [display_shorthand] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [display_shorthand] enabled -> true\n#13 0.571 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [move_field_out_of_struct] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [move_field_out_of_struct] enabled -> true\n#13 0.571 [dotted_field_name] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled -> true\n#13 0.571 [event_with_message] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_with_message] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_with_message] enabled -> true\n#13 0.571 [event_without_message] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_without_message] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [event_without_message] enabled -> true\n#13 0.571 [debug_shorthand] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [debug_shorthand] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:50\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Info,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:50,\n#13 0.571     fields: {answer, to_question},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [debug_shorthand] enabled -> true\n#13 0.571 [display_shorthand] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [display_shorthand] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [display_shorthand] enabled -> true\n#13 0.571 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [move_field_out_of_struct] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [move_field_out_of_struct] enabled -> true\n#13 0.571 [dotted_field_name] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.571     kind: Kind(EVENT),\n#13 0.571 }\n#13 0.571 [dotted_field_name] enabled -> true\n#13 0.571 [event_with_message] register_callsite: Metadata {\n#13 0.571     name: \"event tracing/tests/event.rs:72\",\n#13 0.571     target: \"event\",\n#13 0.571     level: Level(\n#13 0.571         Debug,\n#13 0.571     ),\n#13 0.571     module_path: \"event\",\n#13 0.571     location: tracing/tests/event.rs:72,\n#13 0.571     fields: {message},\n#13 0.571     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_with_message] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:72\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:72,\n#13 0.572     fields: {message},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_with_message] enabled -> true\n#13 0.572 [event_without_message] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:72\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:72,\n#13 0.572     fields: {message},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_without_message] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:72\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:72,\n#13 0.572     fields: {message},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_without_message] enabled -> true\n#13 0.572 [debug_shorthand] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:72\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:72,\n#13 0.572     fields: {message},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [debug_shorthand] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:72\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:72,\n#13 0.572     fields: {message},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [debug_shorthand] enabled -> true\n#13 0.572 [display_shorthand] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [display_shorthand] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [display_shorthand] enabled -> true\n#13 0.572 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [move_field_out_of_struct] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [move_field_out_of_struct] enabled -> true\n#13 0.572 [dotted_field_name] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [dotted_field_name] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [dotted_field_name] enabled -> true\n#13 0.572 [event_with_message] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_with_message] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_with_message] enabled -> true\n#13 0.572 [event_without_message] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_without_message] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_without_message] enabled -> true\n#13 0.572 [debug_shorthand] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [debug_shorthand] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:205\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Info,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:205,\n#13 0.572     fields: {foo.bar, foo.baz},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [debug_shorthand] enabled -> true\n#13 0.572 [display_shorthand] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [display_shorthand] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [display_shorthand] enabled -> true\n#13 0.572 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [move_field_out_of_struct] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [move_field_out_of_struct] enabled -> true\n#13 0.572 [dotted_field_name] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [dotted_field_name] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [dotted_field_name] enabled -> true\n#13 0.572 [event_with_message] register_callsite: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.572         Debug,\n#13 0.572     ),\n#13 0.572     module_path: \"event\",\n#13 0.572     location: tracing/tests/event.rs:269,\n#13 0.572     fields: {x, y},\n#13 0.572     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.572     kind: Kind(EVENT),\n#13 0.572 }\n#13 0.572 [event_with_message] enabled: Metadata {\n#13 0.572     name: \"event tracing/tests/event.rs:269\",\n#13 0.572     target: \"event\",\n#13 0.572     level: Level(\n#13 0.573         Debug,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:269,\n#13 0.573     fields: {x, y},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_with_message] enabled -> true\n#13 0.573 [event_without_message] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:269\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Debug,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:269,\n#13 0.573     fields: {x, y},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_without_message] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:269\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Debug,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:269,\n#13 0.573     fields: {x, y},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_without_message] enabled -> true\n#13 0.573 [debug_shorthand] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:269\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Debug,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:269,\n#13 0.573     fields: {x, y},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [debug_shorthand] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:269\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Debug,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:269,\n#13 0.573     fields: {x, y},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [debug_shorthand] enabled -> true\n#13 0.573 [display_shorthand] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [display_shorthand] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [display_shorthand] enabled -> true\n#13 0.573 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [move_field_out_of_struct] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [move_field_out_of_struct] enabled -> true\n#13 0.573 [dotted_field_name] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [dotted_field_name] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [dotted_field_name] enabled -> true\n#13 0.573 [event_with_message] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_with_message] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_with_message] enabled -> true\n#13 0.573 [event_without_message] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_without_message] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_without_message] enabled -> true\n#13 0.573 [debug_shorthand] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [debug_shorthand] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:289\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:289,\n#13 0.573     fields: {my_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [debug_shorthand] enabled -> true\n#13 0.573 [display_shorthand] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [display_shorthand] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [display_shorthand] enabled -> true\n#13 0.573 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [move_field_out_of_struct] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [move_field_out_of_struct] enabled -> true\n#13 0.573 [dotted_field_name] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [dotted_field_name] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [dotted_field_name] enabled -> true\n#13 0.573 [event_with_message] register_callsite: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_with_message] enabled: Metadata {\n#13 0.573     name: \"event tracing/tests/event.rs:330\",\n#13 0.573     target: \"event\",\n#13 0.573     level: Level(\n#13 0.573         Trace,\n#13 0.573     ),\n#13 0.573     module_path: \"event\",\n#13 0.573     location: tracing/tests/event.rs:330,\n#13 0.573     fields: {display_field, debug_field},\n#13 0.573     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.573     kind: Kind(EVENT),\n#13 0.573 }\n#13 0.573 [event_with_message] enabled -> true\n#13 0.573 [event_without_message] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:330\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:330,\n#13 0.574     fields: {display_field, debug_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_without_message] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:330\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:330,\n#13 0.574     fields: {display_field, debug_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_without_message] enabled -> true\n#13 0.574 [debug_shorthand] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:330\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:330,\n#13 0.574     fields: {display_field, debug_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [debug_shorthand] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:330\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:330,\n#13 0.574     fields: {display_field, debug_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [debug_shorthand] enabled -> true\n#13 0.574 [display_shorthand] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [display_shorthand] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [display_shorthand] enabled -> true\n#13 0.574 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [move_field_out_of_struct] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [move_field_out_of_struct] enabled -> true\n#13 0.574 [dotted_field_name] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [dotted_field_name] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [dotted_field_name] enabled -> true\n#13 0.574 [event_with_message] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_with_message] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_with_message] enabled -> true\n#13 0.574 [event_without_message] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_without_message] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_without_message] enabled -> true\n#13 0.574 [debug_shorthand] register_callsite: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [debug_shorthand] enabled: Metadata {\n#13 0.574     name: \"event tracing/tests/event.rs:227\",\n#13 0.574     target: \"event\",\n#13 0.574     level: Level(\n#13 0.574         Info,\n#13 0.574     ),\n#13 0.574     module_path: \"event\",\n#13 0.574     location: tracing/tests/event.rs:227,\n#13 0.574     fields: {foo},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [debug_shorthand] enabled -> true\n#13 0.574 [display_shorthand] register_callsite: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [display_shorthand] enabled: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [display_shorthand] enabled -> true\n#13 0.574 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [move_field_out_of_struct] enabled: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [move_field_out_of_struct] enabled -> true\n#13 0.574 [dotted_field_name] register_callsite: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [dotted_field_name] enabled: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [dotted_field_name] enabled -> true\n#13 0.574 [event_with_message] register_callsite: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_with_message] enabled: Metadata {\n#13 0.574     name: \"fake\",\n#13 0.574     target: \"tracing_mock::field\",\n#13 0.574     level: Level(\n#13 0.574         Trace,\n#13 0.574     ),\n#13 0.574     module_path: \"tracing_mock::field\",\n#13 0.574     location: tracing-mock/src/field.rs:610,\n#13 0.574     fields: {fake_field},\n#13 0.574     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.574     kind: Kind(EVENT),\n#13 0.574 }\n#13 0.574 [event_with_message] enabled -> true\n#13 0.575 [event_without_message] register_callsite: Metadata {\n#13 0.575     name: \"fake\",\n#13 0.575     target: \"tracing_mock::field\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"tracing_mock::field\",\n#13 0.575     location: tracing-mock/src/field.rs:610,\n#13 0.575     fields: {fake_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_without_message] enabled: Metadata {\n#13 0.575     name: \"fake\",\n#13 0.575     target: \"tracing_mock::field\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"tracing_mock::field\",\n#13 0.575     location: tracing-mock/src/field.rs:610,\n#13 0.575     fields: {fake_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_without_message] enabled -> true\n#13 0.575 [debug_shorthand] register_callsite: Metadata {\n#13 0.575     name: \"fake\",\n#13 0.575     target: \"tracing_mock::field\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"tracing_mock::field\",\n#13 0.575     location: tracing-mock/src/field.rs:610,\n#13 0.575     fields: {fake_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [debug_shorthand] enabled: Metadata {\n#13 0.575     name: \"fake\",\n#13 0.575     target: \"tracing_mock::field\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"tracing_mock::field\",\n#13 0.575     location: tracing-mock/src/field.rs:610,\n#13 0.575     fields: {fake_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [debug_shorthand] enabled -> true\n#13 0.575 [display_shorthand] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [display_shorthand] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [display_shorthand] enabled -> true\n#13 0.575 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [move_field_out_of_struct] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [move_field_out_of_struct] enabled -> true\n#13 0.575 [dotted_field_name] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [dotted_field_name] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [dotted_field_name] enabled -> true\n#13 0.575 [event_with_message] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_with_message] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_with_message] enabled -> true\n#13 0.575 [event_without_message] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_without_message] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [event_without_message] enabled -> true\n#13 0.575 [debug_shorthand] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [debug_shorthand] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [debug_shorthand] enabled -> true\n#13 0.575 [explicit_child] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [explicit_child] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:309\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Trace,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:309,\n#13 0.575     fields: {my_field},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [explicit_child] enabled -> true\n#13 0.575 [display_shorthand] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:50\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Info,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:50,\n#13 0.575     fields: {answer, to_question},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [display_shorthand] enabled: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:50\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Info,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.575     location: tracing/tests/event.rs:50,\n#13 0.575     fields: {answer, to_question},\n#13 0.575     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.575     kind: Kind(EVENT),\n#13 0.575 }\n#13 0.575 [display_shorthand] enabled -> true\n#13 0.575 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.575     name: \"event tracing/tests/event.rs:50\",\n#13 0.575     target: \"event\",\n#13 0.575     level: Level(\n#13 0.575         Info,\n#13 0.575     ),\n#13 0.575     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [move_field_out_of_struct] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [move_field_out_of_struct] enabled -> true\n#13 0.576 [dotted_field_name] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [dotted_field_name] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [dotted_field_name] enabled -> true\n#13 0.576 [event_with_message] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_with_message] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_with_message] enabled -> true\n#13 0.576 [event_without_message] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_without_message] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_without_message] enabled -> true\n#13 0.576 [debug_shorthand] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [debug_shorthand] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [debug_shorthand] enabled -> true\n#13 0.576 [explicit_child] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [explicit_child] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:50\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Info,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:50,\n#13 0.576     fields: {answer, to_question},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [explicit_child] enabled -> true\n#13 0.576 [display_shorthand] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [display_shorthand] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [display_shorthand] enabled -> true\n#13 0.576 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [move_field_out_of_struct] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [move_field_out_of_struct] enabled -> true\n#13 0.576 [dotted_field_name] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [dotted_field_name] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [dotted_field_name] enabled -> true\n#13 0.576 [event_with_message] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_with_message] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_with_message] enabled -> true\n#13 0.576 [event_without_message] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_without_message] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [event_without_message] enabled -> true\n#13 0.576 [debug_shorthand] register_callsite: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.576     kind: Kind(EVENT),\n#13 0.576 }\n#13 0.576 [debug_shorthand] enabled: Metadata {\n#13 0.576     name: \"event tracing/tests/event.rs:72\",\n#13 0.576     target: \"event\",\n#13 0.576     level: Level(\n#13 0.576         Debug,\n#13 0.576     ),\n#13 0.576     module_path: \"event\",\n#13 0.576     location: tracing/tests/event.rs:72,\n#13 0.576     fields: {message},\n#13 0.576     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [debug_shorthand] enabled -> true\n#13 0.577 [explicit_child] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:72\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:72,\n#13 0.577     fields: {message},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [explicit_child] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:72\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:72,\n#13 0.577     fields: {message},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [explicit_child] enabled -> true\n#13 0.577 [display_shorthand] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [display_shorthand] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [display_shorthand] enabled -> true\n#13 0.577 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [move_field_out_of_struct] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [move_field_out_of_struct] enabled -> true\n#13 0.577 [dotted_field_name] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [dotted_field_name] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [dotted_field_name] enabled -> true\n#13 0.577 [event_with_message] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_with_message] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_with_message] enabled -> true\n#13 0.577 [event_without_message] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_without_message] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_without_message] enabled -> true\n#13 0.577 [debug_shorthand] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [debug_shorthand] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [debug_shorthand] enabled -> true\n#13 0.577 [explicit_child] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [explicit_child] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:205\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Info,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:205,\n#13 0.577     fields: {foo.bar, foo.baz},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [explicit_child] enabled -> true\n#13 0.577 [display_shorthand] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [display_shorthand] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [display_shorthand] enabled -> true\n#13 0.577 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [move_field_out_of_struct] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [move_field_out_of_struct] enabled -> true\n#13 0.577 [dotted_field_name] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [dotted_field_name] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [dotted_field_name] enabled -> true\n#13 0.577 [event_with_message] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_with_message] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_with_message] enabled -> true\n#13 0.577 [event_without_message] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_without_message] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [event_without_message] enabled -> true\n#13 0.577 [debug_shorthand] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [debug_shorthand] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [debug_shorthand] enabled -> true\n#13 0.577 [explicit_child] register_callsite: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.577     module_path: \"event\",\n#13 0.577     location: tracing/tests/event.rs:269,\n#13 0.577     fields: {x, y},\n#13 0.577     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.577     kind: Kind(EVENT),\n#13 0.577 }\n#13 0.577 [explicit_child] enabled: Metadata {\n#13 0.577     name: \"event tracing/tests/event.rs:269\",\n#13 0.577     target: \"event\",\n#13 0.577     level: Level(\n#13 0.577         Debug,\n#13 0.577     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:269,\n#13 0.578     fields: {x, y},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [explicit_child] enabled -> true\n#13 0.578 [display_shorthand] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [display_shorthand] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [display_shorthand] enabled -> true\n#13 0.578 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [move_field_out_of_struct] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [move_field_out_of_struct] enabled -> true\n#13 0.578 [dotted_field_name] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [dotted_field_name] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [dotted_field_name] enabled -> true\n#13 0.578 [event_with_message] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_with_message] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_with_message] enabled -> true\n#13 0.578 [event_without_message] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_without_message] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_without_message] enabled -> true\n#13 0.578 [debug_shorthand] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [debug_shorthand] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [debug_shorthand] enabled -> true\n#13 0.578 [explicit_child] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [explicit_child] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:289\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:289,\n#13 0.578     fields: {my_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926100, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [explicit_child] enabled -> true\n#13 0.578 [display_shorthand] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [display_shorthand] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [display_shorthand] enabled -> true\n#13 0.578 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [move_field_out_of_struct] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [move_field_out_of_struct] enabled -> true\n#13 0.578 [dotted_field_name] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [dotted_field_name] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [dotted_field_name] enabled -> true\n#13 0.578 [event_with_message] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_with_message] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_with_message] enabled -> true\n#13 0.578 [event_without_message] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_without_message] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [event_without_message] enabled -> true\n#13 0.578 [debug_shorthand] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [debug_shorthand] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [debug_shorthand] enabled -> true\n#13 0.578 [explicit_child] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [explicit_child] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:330\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Trace,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:330,\n#13 0.578     fields: {display_field, debug_field},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec926130, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [explicit_child] enabled -> true\n#13 0.578 [display_shorthand] register_callsite: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:227\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Info,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.578     location: tracing/tests/event.rs:227,\n#13 0.578     fields: {foo},\n#13 0.578     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.578     kind: Kind(EVENT),\n#13 0.578 }\n#13 0.578 [display_shorthand] enabled: Metadata {\n#13 0.578     name: \"event tracing/tests/event.rs:227\",\n#13 0.578     target: \"event\",\n#13 0.578     level: Level(\n#13 0.578         Info,\n#13 0.578     ),\n#13 0.578     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [display_shorthand] enabled -> true\n#13 0.579 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [move_field_out_of_struct] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [move_field_out_of_struct] enabled -> true\n#13 0.579 [dotted_field_name] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [dotted_field_name] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [dotted_field_name] enabled -> true\n#13 0.579 [event_with_message] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_with_message] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_with_message] enabled -> true\n#13 0.579 [event_without_message] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_without_message] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_without_message] enabled -> true\n#13 0.579 [debug_shorthand] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [debug_shorthand] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [debug_shorthand] enabled -> true\n#13 0.579 [explicit_child] register_callsite: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [explicit_child] enabled: Metadata {\n#13 0.579     name: \"event tracing/tests/event.rs:227\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Info,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:227,\n#13 0.579     fields: {foo},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9260e8, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [explicit_child] enabled -> true\n#13 0.579 [display_shorthand] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [display_shorthand] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [display_shorthand] enabled -> true\n#13 0.579 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [move_field_out_of_struct] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [move_field_out_of_struct] enabled -> true\n#13 0.579 [dotted_field_name] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [dotted_field_name] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [dotted_field_name] enabled -> true\n#13 0.579 [event_with_message] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_with_message] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_with_message] enabled -> true\n#13 0.579 [event_without_message] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_without_message] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [event_without_message] enabled -> true\n#13 0.579 [debug_shorthand] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [debug_shorthand] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [debug_shorthand] enabled -> true\n#13 0.579 [explicit_child] register_callsite: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [explicit_child] enabled: Metadata {\n#13 0.579     name: \"fake\",\n#13 0.579     target: \"tracing_mock::field\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"tracing_mock::field\",\n#13 0.579     location: tracing-mock/src/field.rs:610,\n#13 0.579     fields: {fake_field},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec9263a0, metadata: DynMetadata(0x5622ec91e578) }),\n#13 0.579     kind: Kind(EVENT),\n#13 0.579 }\n#13 0.579 [explicit_child] enabled -> true\n#13 0.579 [display_shorthand] register_callsite: Metadata {\n#13 0.579     name: \"foo\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.579     ),\n#13 0.579     module_path: \"event\",\n#13 0.579     location: tracing/tests/event.rs:346,\n#13 0.579     fields: {},\n#13 0.579     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.579     kind: Kind(SPAN),\n#13 0.579 }\n#13 0.579 [display_shorthand] enabled: Metadata {\n#13 0.579     name: \"foo\",\n#13 0.579     target: \"event\",\n#13 0.579     level: Level(\n#13 0.579         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [display_shorthand] enabled -> true\n#13 0.580 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [move_field_out_of_struct] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [move_field_out_of_struct] enabled -> true\n#13 0.580 [dotted_field_name] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [dotted_field_name] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [dotted_field_name] enabled -> true\n#13 0.580 [event_with_message] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [event_with_message] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [event_with_message] enabled -> true\n#13 0.580 [event_without_message] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [event_without_message] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [event_without_message] enabled -> true\n#13 0.580 [debug_shorthand] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [debug_shorthand] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [debug_shorthand] enabled -> true\n#13 0.580 [explicit_child] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [explicit_child] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [explicit_child] enabled -> true\n#13 0.580 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.580     name: \"foo\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:346,\n#13 0.580     fields: {},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926148, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(SPAN),\n#13 0.580 }\n#13 0.580 [keyword_ident_in_field_name] enabled -> true\n#13 0.580 [display_shorthand] register_callsite: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [display_shorthand] enabled: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [display_shorthand] enabled -> true\n#13 0.580 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [move_field_out_of_struct] enabled: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [move_field_out_of_struct] enabled -> true\n#13 0.580 [dotted_field_name] register_callsite: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [dotted_field_name] enabled: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [dotted_field_name] enabled -> true\n#13 0.580 [event_with_message] register_callsite: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [event_with_message] enabled: Metadata {\n#13 0.580     name: \"event tracing/tests/event.rs:309\",\n#13 0.580     target: \"event\",\n#13 0.580     level: Level(\n#13 0.580         Trace,\n#13 0.580     ),\n#13 0.580     module_path: \"event\",\n#13 0.580     location: tracing/tests/event.rs:309,\n#13 0.580     fields: {my_field},\n#13 0.580     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.580     kind: Kind(EVENT),\n#13 0.580 }\n#13 0.580 [event_with_message] enabled -> true\n#13 0.580 [event_without_message] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_without_message] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_without_message] enabled -> true\n#13 0.581 [debug_shorthand] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [debug_shorthand] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [debug_shorthand] enabled -> true\n#13 0.581 [explicit_child] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [explicit_child] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [explicit_child] enabled -> true\n#13 0.581 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:309\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Trace,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:309,\n#13 0.581     fields: {my_field},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926118, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [keyword_ident_in_field_name] enabled -> true\n#13 0.581 [display_shorthand] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [display_shorthand] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [display_shorthand] enabled -> true\n#13 0.581 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [move_field_out_of_struct] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [move_field_out_of_struct] enabled -> true\n#13 0.581 [dotted_field_name] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [dotted_field_name] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [dotted_field_name] enabled -> true\n#13 0.581 [event_with_message] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_with_message] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_with_message] enabled -> true\n#13 0.581 [event_without_message] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_without_message] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [event_without_message] enabled -> true\n#13 0.581 [debug_shorthand] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [debug_shorthand] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [debug_shorthand] enabled -> true\n#13 0.581 [explicit_child] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [explicit_child] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [explicit_child] enabled -> true\n#13 0.581 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:50\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Info,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:50,\n#13 0.581     fields: {answer, to_question},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926010, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [keyword_ident_in_field_name] enabled -> true\n#13 0.581 [display_shorthand] register_callsite: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:72\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Debug,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:72,\n#13 0.581     fields: {message},\n#13 0.581     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.581     kind: Kind(EVENT),\n#13 0.581 }\n#13 0.581 [display_shorthand] enabled: Metadata {\n#13 0.581     name: \"event tracing/tests/event.rs:72\",\n#13 0.581     target: \"event\",\n#13 0.581     level: Level(\n#13 0.581         Debug,\n#13 0.581     ),\n#13 0.581     module_path: \"event\",\n#13 0.581     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [display_shorthand] enabled -> true\n#13 0.582 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [move_field_out_of_struct] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [move_field_out_of_struct] enabled -> true\n#13 0.582 [dotted_field_name] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [dotted_field_name] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [dotted_field_name] enabled -> true\n#13 0.582 [event_with_message] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_with_message] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_with_message] enabled -> true\n#13 0.582 [event_without_message] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_without_message] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_without_message] enabled -> true\n#13 0.582 [debug_shorthand] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [debug_shorthand] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [debug_shorthand] enabled -> true\n#13 0.582 [explicit_child] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [explicit_child] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [explicit_child] enabled -> true\n#13 0.582 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:72\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:72,\n#13 0.582     fields: {message},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926058, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [keyword_ident_in_field_name] enabled -> true\n#13 0.582 [display_shorthand] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [display_shorthand] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [display_shorthand] enabled -> true\n#13 0.582 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [move_field_out_of_struct] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [move_field_out_of_struct] enabled -> true\n#13 0.582 [dotted_field_name] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [dotted_field_name] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [dotted_field_name] enabled -> true\n#13 0.582 [event_with_message] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_with_message] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_with_message] enabled -> true\n#13 0.582 [event_without_message] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_without_message] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [event_without_message] enabled -> true\n#13 0.582 [debug_shorthand] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [debug_shorthand] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [debug_shorthand] enabled -> true\n#13 0.582 [explicit_child] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [explicit_child] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [explicit_child] enabled -> true\n#13 0.582 [keyword_ident_in_field_name] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [keyword_ident_in_field_name] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:205\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Info,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:205,\n#13 0.582     fields: {foo.bar, foo.baz},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec9260d0, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [keyword_ident_in_field_name] enabled -> true\n#13 0.582 [display_shorthand] register_callsite: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:269\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:269,\n#13 0.582     fields: {x, y},\n#13 0.582     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.582     kind: Kind(EVENT),\n#13 0.582 }\n#13 0.582 [display_shorthand] enabled: Metadata {\n#13 0.582     name: \"event tracing/tests/event.rs:269\",\n#13 0.582     target: \"event\",\n#13 0.582     level: Level(\n#13 0.582         Debug,\n#13 0.582     ),\n#13 0.582     module_path: \"event\",\n#13 0.582     location: tracing/tests/event.rs:269,\n#13 0.583     fields: {x, y},\n#13 0.583     callsite: Identifier(Pointer { addr: 0x5622ec926388, metadata: DynMetadata(0x5622ec914928) }),\n#13 0.583     kind: Kind(EVENT),\n#13 0.583 }\n#13 0.583 [display_shorthand] enabled -> true\n#13 0.583 [move_field_out_of_struct] register_callsite: Metadata {\n#13 0.583     name: \"event tracing/tests/event.rs:269\",\n#13 0.583     target: \"event\",\n#13 0.583     level: Level(\n#13 0.583         Debug,\n#13 0.583     ),\n#13 0.583     module_path: \"event\",\n#13 0.583     location: tracing/tests/event.rs:269,\n#13 0.583     fiel\n#13 0.583 [output clipped, log limit 200KiB/s reached]\n#13 0.792      Running tests/filter_caching_is_lexically_scoped.rs (target/debug/deps/filter_caching_is_lexically_scoped-65dd074a99eb7869)\n#13 0.794      Running tests/filters_are_not_reevaluated_for_the_same_span.rs (target/debug/deps/filters_are_not_reevaluated_for_the_same_span-1d6c2b861dde1240)\n#13 0.796      Running tests/filters_are_reevaluated_for_different_call_sites.rs (target/debug/deps/filters_are_reevaluated_for_different_call_sites-9ac8aebe3f9244c1)\n#13 0.799      Running tests/filters_dont_leak.rs (target/debug/deps/filters_dont_leak-43845863a931490a)\n#13 0.802      Running tests/future_send.rs (target/debug/deps/future_send-ddb3974ef07e6d23)\n#13 0.804      Running tests/instrument.rs (target/debug/deps/instrument-a47ea8b4babde974)\n#13 0.807      Running tests/macro_imports.rs (target/debug/deps/macro_imports-fe02506a9810858b)\n#13 0.810      Running tests/macros.rs (target/debug/deps/macros-aecdd04cdc164e4e)\n#13 0.816      Running tests/macros_incompatible_concat.rs (target/debug/deps/macros_incompatible_concat-1cc000af0d6a1885)\n#13 0.818      Running tests/max_level_hint.rs (target/debug/deps/max_level_hint-cf6ffdbe63eb678b)\n#13 0.819 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.819     name: \"event tracing/tests/max_level_hint.rs:31\",\n#13 0.819     target: \"max_level_hint\",\n#13 0.819     level: Level(\n#13 0.819         Info,\n#13 0.819     ),\n#13 0.819     module_path: \"max_level_hint\",\n#13 0.819     location: tracing/tests/max_level_hint.rs:31,\n#13 0.819     fields: {message},\n#13 0.819     callsite: Identifier(Pointer { addr: 0x565054d7d010, metadata: DynMetadata(0x565054d6d4d8) }),\n#13 0.820     kind: Kind(EVENT),\n#13 0.820 }\n#13 0.820 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.820     name: \"event tracing/tests/max_level_hint.rs:33\",\n#13 0.820     target: \"max_level_hint\",\n#13 0.820     level: Level(\n#13 0.820         Warn,\n#13 0.820     ),\n#13 0.820     module_path: \"max_level_hint\",\n#13 0.820     location: tracing/tests/max_level_hint.rs:33,\n#13 0.820     fields: {message},\n#13 0.820     callsite: Identifier(Pointer { addr: 0x565054d7d040, metadata: DynMetadata(0x565054d6d4d8) }),\n#13 0.820     kind: Kind(EVENT),\n#13 0.820 }\n#13 0.820 [tracing/tests/max_level_hint.rs:18:17] meta = Metadata {\n#13 0.820     name: \"event tracing/tests/max_level_hint.rs:35\",\n#13 0.820     target: \"max_level_hint\",\n#13 0.820     level: Level(\n#13 0.820         Error,\n#13 0.820     ),\n#13 0.820     module_path: \"max_level_hint\",\n#13 0.820     location: tracing/tests/max_level_hint.rs:35,\n#13 0.820     fields: {message},\n#13 0.820     callsite: Identifier(Pointer { addr: 0x565054d7d070, metadata: DynMetadata(0x565054d6d4d8) }),\n#13 0.820     kind: Kind(EVENT),\n#13 0.820 }\n#13 0.820      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-c4147fc0b4079d89)\n#13 0.924      Running tests/multiple_max_level_hints.rs (target/debug/deps/multiple_max_level_hints-f7f9739cbfc36991)\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Info,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Warn,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Error,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Error,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.927     Error,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Warn,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.927     Warn,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Info,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.927     Info,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:31:25] meta.level() = Level(\n#13 0.927     Debug,\n#13 0.927 )\n#13 0.927 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.927     Debug,\n#13 0.928 )\n#13 0.928 [tracing/tests/multiple_max_level_hints.rs:47:25] meta.level() = Level(\n#13 0.928     Debug,\n#13 0.928 )\n#13 0.928      Running tests/no_subscriber.rs (target/debug/deps/no_subscriber-a50c92f97cb7f7f4)\n#13 0.931      Running tests/register_callsite_deadlock.rs (target/debug/deps/register_callsite_deadlock-42a0812960255d8b)\n#13 0.935      Running tests/scoped_clobbers_default.rs (target/debug/deps/scoped_clobbers_default-b187719e730ed561)\n#13 0.938      Running tests/span.rs (target/debug/deps/span-a7cfe38cc7bfb8c7)\n#13 1.669      Running tests/subscriber.rs (target/debug/deps/subscriber-a5a3ff6315fec54c)\n#13 1.674      Running unittests src/lib.rs (target/debug/deps/tracing_appender-04368258e11243ac)\n#13 1.676 \n#13 1.676 thread 'rolling::test::test_never_date_rounding' panicked at tracing-appender/src/rolling.rs:551:17:\n#13 1.676 internal error: entered unreachable code: Rotation::NEVER is impossible to round.\n#13 1.676 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 6.696      Running unittests src/lib.rs (target/debug/deps/tracing_attributes-77bfca6ff021554e)\n#13 6.700      Running tests/async_fn.rs (target/debug/deps/async_fn-7f67cbcf7ef6c2b0)\n#13 6.731      Running tests/dead_code.rs (target/debug/deps/dead_code-189550194a125f7a)\n#13 6.734      Running tests/destructuring.rs (target/debug/deps/destructuring-2cef51104a51a7c9)\n#13 6.741      Running tests/err.rs (target/debug/deps/err-1f4c8a07afba1e9f)\n#13 6.812      Running tests/fields.rs (target/debug/deps/fields-765d54db324829c9)\n#13 6.847      Running tests/follows_from.rs (target/debug/deps/follows_from-d88bbf60bf2e3ba0)\n#13 6.853      Running tests/instrument.rs (target/debug/deps/instrument-9d49f534aeecfb87)\n#13 6.876      Running tests/levels.rs (target/debug/deps/levels-218a1349cbf08bfb)\n#13 6.885      Running tests/names.rs (target/debug/deps/names-babb4b7a0c035795)\n#13 6.889      Running tests/parents.rs (target/debug/deps/parents-f28b3e589cd2c881)\n#13 6.892      Running tests/ret.rs (target/debug/deps/ret-3bf3c0720fd12a00)\n#13 6.955      Running tests/targets.rs (target/debug/deps/targets-97a17d23db869b34)\n#13 6.959      Running tests/ui.rs (target/debug/deps/ui-3221c9d7be663047)\n#13 7.034    Compiling tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.173     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.17s\n#13 7.226 \n#13 7.226 \n#13 7.226 test tests/ui/pass/type_shadowing.rs ... ok\n#13 7.340 \n#13 7.340 WARNINGS:\n#13 7.340 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.340 warning: unused import: `Bar::*`\n#13 7.340   --> tests/ui/pass/type_shadowing.rs:14:9\n#13 7.340    |\n#13 7.340 14 |     use Bar::*;\n#13 7.340    |         ^^^^^^\n#13 7.340    |\n#13 7.340    = note: `#[warn(unused_imports)]` on by default\n#13 7.340 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.340 \n#13 7.340 STDERR:\n#13 7.340 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.340 warning: unused import: `Bar::*`\n#13 7.340   --> /workspace/tracing-attributes/tests/ui/pass/type_shadowing.rs:14:9\n#13 7.340    |\n#13 7.340 14 |     use Bar::*;\n#13 7.340    |         ^^^^^^\n#13 7.340    |\n#13 7.340    = note: `#[warn(unused_imports)]` on by default\n#13 7.340 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\n#13 7.340 \n#13 7.340 \n#13 7.340 \n#13 7.376     Checking tracing-attributes-tests v0.0.0 (/workspace/target/tests/trybuild/tracing-attributes)\n#13 7.415     Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.07s\n#13 7.465 \n#13 7.465 \n#13 7.642 test tests/ui/fail/async_instrument.rs ... ok\n#13 7.642 test tests/ui/fail/const_instrument.rs ... ok\n#13 7.642 test tests/ui/fail/unused_instrumented_fn.rs ... ok\n#13 7.642 \n#13 7.642 \n#13 7.643      Running unittests src/lib.rs (target/debug/deps/tracing_core-734d01840db1e916)\n#13 7.648      Running tests/dispatch.rs (target/debug/deps/dispatch-75c9d1a443927b39)\n#13 7.651      Running tests/global_dispatch.rs (target/debug/deps/global_dispatch-e28841795b95072c)\n#13 7.653      Running tests/local_dispatch_before_init.rs (target/debug/deps/local_dispatch_before_init-de2b7849bbc31f2a)\n#13 7.655 [tracing-core/tests/local_dispatch_before_init.rs:15:47] current = Dispatch::Global(\n#13 7.655     Pointer { addr: 0x5635f8e69b76, metadata: DynMetadata(0x5635f8e90510) },\n#13 7.655 )\n#13 7.655 [tracing-core/tests/local_dispatch_before_init.rs:25:21] current = Dispatch::Scoped(\n#13 7.655     0x7efe0bbaf610,\n#13 7.655 )\n#13 7.655 [tracing-core/tests/local_dispatch_before_init.rs:39:13] current = Dispatch::Global(\n#13 7.655     Pointer { addr: 0x7efe04000d50, metadata: DynMetadata(0x5635f8e89ce0) },\n#13 7.656 )\n#13 7.656      Running tests/macros.rs (target/debug/deps/macros-1d65857f050f4003)\n#13 7.659      Running tests/missed_register_callsite.rs (target/debug/deps/missed_register_callsite-6eed3a01502a01bf)\n#13 7.672      Running unittests src/lib.rs (target/debug/deps/tracing_error-23aeb8e58b602ab1)\n#13 7.675 [tracing-error/src/backtrace.rs:298:13] &span_trace = SpanTrace []\n#13 7.675 [tracing-error/src/backtrace.rs:285:13] &span_trace = SpanTrace [\n#13 7.675     { target: \"tracing_error::backtrace::tests\", name: \"test span\", file: \"tracing-error/src/backtrace.rs\", line: 280 },\n#13 7.675 ]\n#13 7.675 [tracing-error/src/backtrace.rs:314:13] &span_trace = SpanTrace []\n#13 7.676      Running unittests src/lib.rs (target/debug/deps/tracing_flame-35f2bd68cbb6e0db)\n#13 7.678      Running tests/collapsed.rs (target/debug/deps/collapsed-107fe0355326d447)\n#13 8.298      Running tests/concurrent.rs (target/debug/deps/concurrent-d30dc24ba1fefae1)\n#13 8.433      Running unittests src/lib.rs (target/debug/deps/tracing_futures-2cbbccacd703eaf2)\n#13 8.437      Running tests/std_future.rs (target/debug/deps/std_future-b9f19c63b694ba50)\n#13 8.442      Running unittests src/lib.rs (target/debug/deps/tracing_journald-87169daee49b2f8b)\n#13 8.445      Running tests/journal.rs (target/debug/deps/journal-85cc291f5ef386fd)\n#13 8.448 \n#13 8.448 thread 'custom_priorities' panicked at tracing-journald/tests/journal.rs:196:10:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#13 8.448 \n#13 8.448 thread 'internal_null_byte' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'journal_fields' panicked at tracing-journald/tests/journal.rs:288:10:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'multiline_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'multiline_message_trailing_newline' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'multiple_spans_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'simple_metadata' panicked at tracing-journald/tests/journal.rs:269:10:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'simple_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'span_metadata' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.448 \n#13 8.448 thread 'spans_field_collision' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.448 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.449 \n#13 8.449 thread 'large_message' panicked at tracing-journald/tests/journal.rs:22:14:\n#13 8.449 called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\n#13 8.449 error: test failed, to rerun pass `-p tracing-journald --test journal`\n#13 8.526 e: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"fake\",\n#13 8.526     target: \"tracing_mock::field\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_mock::field\",\n#13 8.526     location: tracing-mock/src/field.rs:610,\n#13 8.526     fields: {fake_field},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8268, metadata: DynMetadata(0x556079e8a3d0) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_and_err\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8178, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_err] new_span: name=\"ret_and_err\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_ret_and_err] enter: ret_and_err; id=Id(1);\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"ret_impl_type\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8118, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_warn_info\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8208, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_warn_info] new_span: name=\"ret_warn_info\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_impl_type] new_span: name=\"ret_impl_type\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"ret_display\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8148, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn_info] enter: ret_warn_info; id=Id(1);\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_impl_type] enter: ret_impl_type; id=Id(1);\n#13 8.526 [test_dbg] new_span: name=\"ret_display\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"ret\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8010, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test] new_span: name=\"ret\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_custom_target] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_custom_target] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_custom_target] enabled -> true\n#13 8.526 [test_dbg] enter: ret_display; id=Id(1);\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test] enter: ret; id=Id(1);\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"ret_async\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80e8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_async] new_span: name=\"ret_async\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8070, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn] new_span: name=\"ret_warn\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] enter: ret_async; id=Id(1);\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"ret_dbg_warn\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8238, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"ret_mut\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80a0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] enter: ret_warn; id=Id(1);\n#13 8.526 [test_mut] new_span: name=\"ret_mut\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"ret_with_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8040, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_dbg_warn] new_span: name=\"ret_dbg_warn\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_mut] enter: ret_mut; id=Id(1);\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_custom_target] new_span: name=\"ret_with_target\"; target=\"my_target\"; id=Id(1);\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"ret_and_ok\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81c0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:260\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:260,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8220, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_warn_info] event: event tracing-attributes/tests/ret.rs:260;\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_dbg_warn] enter: ret_dbg_warn; id=Id(1);\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_custom_target] enter: ret_with_target; id=Id(1);\n#13 8.526 [test_warn_info] exit: ret_warn_info; id=Id(1);\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:202\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Error,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:202,\n#13 8.526     fields: {error},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81a8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_ret_and_err] event: event tracing-attributes/tests/ret.rs:202;\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:177\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:177,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8160, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_dbg] event: event tracing-attributes/tests/ret.rs:177;\n#13 8.526 [test_ret_and_ok] new_span: name=\"ret_and_ok\"; target=\"ret\"; id=Id(1);\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enter: ret_and_ok; id=Id(1);\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn_info] drop_span: ret_warn_info; id=Id(1); refs=1;\n#13 8.526 [test_async] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 test test_warn_info ... [test] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg] exit: ret_display; id=Id(1);\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_ret_and_err] exit: ret_and_err; id=Id(1);\n#13 8.526 [test_dbg] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg] enabled -> true\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:152\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:152,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8130, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_ret_and_err] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_err] enabled -> true\n#13 8.526 [test_dbg] drop_span: ret_display; id=Id(1); refs=1;\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_ret_and_err] drop_span: ret_and_err; id=Id(1); refs=1;\n#13 8.526 ok[test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test_warn_info] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn_info] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:68\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:68,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8088, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 \n#13 8.526 [test_impl_type] event: event tracing-attributes/tests/ret.rs:152;\n#13 8.526 [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_warn] event: event tracing-attributes/tests/ret.rs:68;\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_async] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:125\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:125,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8100, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_async] enabled -> true\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 test test_dbg ... [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:285\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Warn,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:285,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8250, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_dbg_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_dbg_warn] enabled -> true\n#13 8.526 [test_async] event: event tracing-attributes/tests/ret.rs:125;\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_warn] exit: ret_warn; id=Id(1);\n#13 8.526 [test] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:11\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:11,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8028, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test] enabled -> true\n#13 8.526 [test_custom_target] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_custom_target] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_custom_target] enabled -> true\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_async] exit: ret_async; id=Id(1);\n#13 8.526 [test_async] enter: ret_async; id=Id(1);\n#13 8.526 [test_warn] drop_span: ret_warn; id=Id(1); refs=1;\n#13 8.526 [test_async] exit: ret_async; id=Id(1);\n#13 8.526 [test_impl_type] exit: ret_impl_type; id=Id(1);\n#13 8.526 [test] event: event tracing-attributes/tests/ret.rs:11;\n#13 8.526 [test_dbg_warn] event: event tracing-attributes/tests/ret.rs:285;\n#13 8.526 [test_impl_type] drop_span: ret_impl_type; id=Id(1); refs=1;\n#13 8.526 [test_warn] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:16\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:16,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea8058, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_warn] enabled -> true\n#13 8.526 [test_async] drop_span: ret_async; id=Id(1); refs=1;\n#13 8.526 [test_custom_target] event: event tracing-attributes/tests/ret.rs:16;\n#13 8.526 [test_impl_type] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_impl_type] enabled -> true\n#13 8.526 [test] exit: ret; id=Id(1);\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 [test_custom_target] exit: ret_with_target; id=Id(1);\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:231\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:231,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea81d8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 [test] drop_span: ret; id=Id(1); refs=1;\n#13 8.526 [test_ret_and_ok] event: event tracing-attributes/tests/ret.rs:231;\n#13 8.526 [test_dbg_warn] exit: ret_dbg_warn; id=Id(1);\n#13 8.526 [test_custom_target] drop_span: ret_with_target; id=Id(1); refs=1;\n#13 8.526 [test_dbg_warn] drop_span: ret_dbg_warn; id=Id(1); refs=1;\n#13 8.526 [test_ret_and_ok] exit: ret_and_ok; id=Id(1);\n#13 8.526 ok[test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:96\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:96,\n#13 8.526     fields: {a},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80b8, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 \n#13 8.526 [test_mut] event: event tracing-attributes/tests/ret.rs:96;\n#13 8.526 [test_ret_and_ok] drop_span: ret_and_ok; id=Id(1); refs=1;\n#13 8.526 test test_ret_and_err ... [test_ret_and_ok] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80d0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80d0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_ret_and_ok] enabled -> true\n#13 8.526 ok\n#13 8.526 [test_mut] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80d0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled: Metadata {\n#13 8.526     name: \"event tracing-attributes/tests/ret.rs:93\",\n#13 8.526     target: \"ret\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"ret\",\n#13 8.526     location: tracing-attributes/tests/ret.rs:93,\n#13 8.526     fields: {return},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x556079ea80d0, metadata: DynMetadata(0x556079e80020) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [test_mut] enabled -> true\n#13 8.526 test test_warn ... ok\n#13 8.526 test test_impl_type ... [test_mut] event: event tracing-attributes/tests/ret.rs:93;\n#13 8.526 ok\n#13 8.526 [test_mut] exit: ret_mut; id=Id(1);\n#13 8.526 test test_async ... [test_mut] drop_span: ret_mut; id=Id(1); refs=1;\n#13 8.526 ok\n#13 8.526 test test ... ok\n#13 8.526 test test_custom_target ... ok\n#13 8.526 test test_dbg_warn ... ok\n#13 8.526 test test_ret_and_ok ... ok\n#13 8.526 test test_mut ... ok\n#13 8.526 \n#13 8.526 test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 2 tests\n#13 8.526 [custom_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled -> true\n#13 8.526 [default_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled -> true\n#13 8.526 [custom_targets] register_callsite: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:5,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6010, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:5,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6010, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled -> true\n#13 8.526 [custom_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled -> true\n#13 8.526 [default_targets] register_callsite: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:5,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6010, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:5,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6010, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled -> true\n#13 8.526 [default_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:8,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6028, metadata: DynMetadata(0x5655308b6240) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled -> true\n#13 8.526 [default_targets] new_span: name=\"default_target\"; target=\"targets\"; id=Id(1);\n#13 8.526 [custom_targets] new_span: name=\"custom_target\"; target=\"my_target\"; id=Id(1);\n#13 8.526 [default_targets] enter: default_target; id=Id(1);\n#13 8.526 [custom_targets] enter: custom_target; id=Id(1);\n#13 8.526 [default_targets] exit: default_target; id=Id(1);\n#13 8.526 [custom_targets] exit: custom_target; id=Id(1);\n#13 8.526 [default_targets] drop_span: default_target; id=Id(1); refs=1;\n#13 8.526 [custom_targets] drop_span: custom_target; id=Id(1); refs=1;\n#13 8.526 [custom_targets] register_callsite: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets::my_mod\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6040, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets::my_mod\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6040, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled -> true\n#13 8.526 [custom_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_other_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:19,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6058, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_other_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:19,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6058, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [custom_targets] enabled -> true\n#13 8.526 [default_targets] register_callsite: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets::my_mod\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6040, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled: Metadata {\n#13 8.526     name: \"default_target\",\n#13 8.526     target: \"targets::my_mod\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:16,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6040, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled -> true\n#13 8.526 [default_targets] register_callsite: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_other_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:19,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6058, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled: Metadata {\n#13 8.526     name: \"custom_target\",\n#13 8.526     target: \"my_other_target\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"targets::my_mod\",\n#13 8.526     location: tracing-attributes/tests/targets.rs:19,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x5655308c6058, metadata: DynMetadata(0x5655308b6a38) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [default_targets] enabled -> true\n#13 8.526 [default_targets] new_span: name=\"default_target\"; target=\"targets::my_mod\"; id=Id(2);\n#13 8.526 [custom_targets] new_span: name=\"custom_target\"; target=\"my_other_target\"; id=Id(2);\n#13 8.526 [default_targets] enter: default_target; id=Id(2);\n#13 8.526 [custom_targets] enter: custom_target; id=Id(2);\n#13 8.526 [default_targets] exit: default_target; id=Id(2);\n#13 8.526 [custom_targets] exit: custom_target; id=Id(2);\n#13 8.526 [default_targets] drop_span: default_target; id=Id(2); refs=1;\n#13 8.526 [custom_targets] drop_span: custom_target; id=Id(2); refs=1;\n#13 8.526 test default_targets ... ok\n#13 8.526 test custom_targets ... ok\n#13 8.526 \n#13 8.526 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 2 tests\n#13 8.526 test pass ... ok\n#13 8.526 test compile_fail ... ok\n#13 8.526 \n#13 8.526 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.68s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 20 tests\n#13 8.526 test dispatcher::test::default_no_subscriber ... ok\n#13 8.526 test dispatcher::test::default_dispatch ... ok\n#13 8.526 test dispatcher::test::dispatch_downcasts ... ok\n#13 8.526 test dispatcher::test::dispatch_is ... ok\n#13 8.526 test dispatcher::test::events_dont_infinite_loop ... ok\n#13 8.526 test dispatcher::test::spans_dont_infinite_loop ... ok\n#13 8.526 test field::test::empty_fields_are_skipped ... ok\n#13 8.526 test field::test::empty_value_set_is_empty ... ok\n#13 8.526 test field::test::fields_from_other_callsets_are_skipped ... ok\n#13 8.526 test field::test::index_of_field_in_fieldset_is_correct ... ok\n#13 8.526 test field::test::record_bytes ... ok\n#13 8.526 test field::test::record_debug_fn ... ok\n#13 8.526 test field::test::record_error ... ok\n#13 8.526 test field::test::sparse_value_sets_are_not_empty ... ok\n#13 8.526 test field::test::value_set_with_no_values_is_empty ... ok\n#13 8.526 test field::test::value_sets_with_fields_from_other_callsites_are_empty ... ok\n#13 8.526 test metadata::tests::filter_level_conversion ... ok\n#13 8.526 test metadata::tests::level_filter_is_usize_sized ... ok\n#13 8.526 test metadata::tests::level_filter_reprs ... ok\n#13 8.526 test metadata::tests::level_from_str ... ok\n#13 8.526 \n#13 8.526 test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 2 tests\n#13 8.526 test set_default_dispatch ... ok\n#13 8.526 test nested_set_default ... ok\n#13 8.526 \n#13 8.526 test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test global_dispatch ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test local_dispatch_before_init ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test metadata_macro_api ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test event_before_register ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 3 tests\n#13 8.526 test backtrace::tests::capture_empty ... ok\n#13 8.526 test backtrace::tests::capture_supported ... ok\n#13 8.526 test backtrace::tests::capture_unsupported ... ok\n#13 8.526 \n#13 8.526 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 0 tests\n#13 8.526 \n#13 8.526 test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test capture_supported ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.62s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 ThreadId(2)-capture_supported 409384\n#13 8.526 ThreadId(2)-capture_supported;concurrent::main 32561\n#13 8.526 ThreadId(3);concurrent::main;concurrent::outer 10770129\n#13 8.526 ThreadId(2)-capture_supported;concurrent::main;concurrent::outer 30316397\n#13 8.526 ThreadId(3);concurrent::main;concurrent::outer;concurrent::Inner 50185002\n#13 8.526 \n#13 8.526 test capture_supported ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.13s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 3 tests\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] enabled -> true\n#13 8.526 [tests::futures_01_tests::future_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:650,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1010, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.526 test tests::futures_01_tests::future_error_ends_span ... [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:671,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1028, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.526 ok\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:696,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1040, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"tracing_futures::tests::futures_01_tests\",\n#13 8.526     location: tracing-futures/src/lib.rs:696,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55bdb66c1040, metadata: DynMetadata(0x55bdb66b1ce0) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enabled -> true\n#13 8.526 test tests::futures_01_tests::future_enter_exit_is_reasonable ... ok\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"tracing_futures::tests::futures_01_tests\"; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [tests::futures_01_tests::stream_enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 test tests::futures_01_tests::stream_enter_exit_is_reasonable ... ok\n#13 8.526 \n#13 8.526 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 3 tests\n#13 8.526 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [enter_exit_is_reasonable] enter: foo; id=Id(1);\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] exit: foo; id=Id(1);\n#13 8.526 [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 [enter_exit_is_reasonable] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 [enter_exit_is_reasonable] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [enter_exit_is_reasonable] enabled -> true\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 test enter_exit_is_reasonable ... [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:22,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0010, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 ok\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:95,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0058, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:95,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0058, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:41,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0028, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:95,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0058, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"foo\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:95,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0058, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 [error_ends_span] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.526 [span_on_drop] new_span: name=\"foo\"; target=\"std_future\"; id=Id(1);\n#13 8.526 [error_ends_span] enter: foo; id=Id(1);\n#13 8.526 [span_on_drop] enter: foo; id=Id(1);\n#13 8.526 [error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [error_ends_span] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:54,\n#13 8.526     fields: {message},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0040, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled: Metadata {\n#13 8.526     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:54,\n#13 8.526     fields: {message},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0040, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [error_ends_span] enabled -> true\n#13 8.526 [error_ends_span] enter: foo; id=Id(1);\n#13 8.526 [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:54,\n#13 8.526     fields: {message},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0040, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"event tracing-futures/tests/std_future.rs:54\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Info,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:54,\n#13 8.526     fields: {message},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0040, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(EVENT),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 [error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.526 [error_ends_span] enter: foo; id=Id(1);\n#13 8.526 ----> [span_on_drop] check MockSpan { name: \"foo\" } against actual parent with Id=Id(1)\n#13 8.526 [error_ends_span] exit: foo; id=Id(1);\n#13 8.526 [span_on_drop] exit: foo; id=Id(1);\n#13 8.526 [error_ends_span] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 [span_on_drop] enter: foo; id=Id(1);\n#13 8.526 [span_on_drop] exit: foo; id=Id(1);\n#13 8.526 [span_on_drop] drop_span: foo; id=Id(1); refs=1;\n#13 8.526 [span_on_drop] register_callsite: Metadata {\n#13 8.526     name: \"bar\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:100,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0070, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled: Metadata {\n#13 8.526     name: \"bar\",\n#13 8.526     target: \"std_future\",\n#13 8.526     level: Level(\n#13 8.526         Trace,\n#13 8.526     ),\n#13 8.526     module_path: \"std_future\",\n#13 8.526     location: tracing-futures/tests/std_future.rs:100,\n#13 8.526     fields: {},\n#13 8.526     callsite: Identifier(Pointer { addr: 0x55acb52b0070, metadata: DynMetadata(0x55acb529f8b8) }),\n#13 8.526     kind: Kind(SPAN),\n#13 8.526 }\n#13 8.526 [span_on_drop] enabled -> true\n#13 8.526 test error_ends_span ... [span_on_drop] new_span: name=\"bar\"; target=\"std_future\"; id=Id(2);\n#13 8.526 ok\n#13 8.526 [span_on_drop] enter: bar; id=Id(2);\n#13 8.526 [span_on_drop] event: event tracing-futures/tests/std_future.rs:54;\n#13 8.526 ----> [span_on_drop] check MockSpan { name: \"bar\" } against actual parent with Id=Id(2)\n#13 8.526 [span_on_drop] exit: bar; id=Id(2);\n#13 8.526 [span_on_drop] drop_span: bar; id=Id(2); refs=1;\n#13 8.526 test span_on_drop ... ok\n#13 8.526 \n#13 8.526 test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 1 test\n#13 8.526 test socket::cmsg_buffer_size_for_one_fd ... ok\n#13 8.526 \n#13 8.526 test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 8.526 \n#13 8.526 running 11 tests\n#13 8.526 test internal_null_byte ... FAILED\n#13 8.526 test custom_priorities ... FAILED\n#13 8.526 test journal_fields ... FAILED\n#13 8.526 test multiline_message ... FAILED\n#13 8.526 test multiline_message_trailing_newline ... FAILED\n#13 8.526 test multiple_spans_metadata ... FAILED\n#13 8.526 test simple_metadata ... FAILED\n#13 8.526 test simple_message ... FAILED\n#13 8.526 test span_metadata ... FAILED\n#13 8.526 test spans_field_collision ... FAILED\n#13 8.526 test large_message ... FAILED\n#13 8.526 \n#13 8.526 failures:\n#13 8.526 \n#13 8.526 failures:\n#13 8.526     custom_priorities\n#13 8.526     internal_null_byte\n#13 8.526     journal_fields\n#13 8.526     large_message\n#13 8.526     multiline_message\n#13 8.526     multiline_message_trailing_newline\n#13 8.526     multiple_spans_metadata\n#13 8.526     simple_message\n#13 8.526     simple_metadata\n#13 8.526     span_metadata\n#13 8.526     spans_field_collision\n#13 8.526 \n#13 8.526 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n#13 8.526 \n#13 ERROR: process \"/bin/sh -c cargo test --workspace -- --nocapture\" did not complete successfully: exit code: 101\n------\n > [stage-0  7/15] RUN --mount=type=cache,target=/usr/local/cargo/registry     --mount=type=cache,target=target     cargo test --workspace -- --nocapture:\n8.526     multiline_message\n8.526     multiline_message_trailing_newline\n8.526     multiple_spans_metadata\n8.526     simple_message\n8.526     simple_metadata\n8.526     span_metadata\n8.526     spans_field_collision\n8.526 \n8.526 test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n8.526 \n------\nERROR: failed to solve: process \"/bin/sh -c cargo test --workspace -- --nocapture\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}