{
  "timestamp": "20250829_091854",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756457710",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.74kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:latest\n#2 DONE 0.3s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/ubuntu:latest@sha256:7c06e91f61fa88c08cc74f7e1b7c69ae24910d745357e0dfe1d2c0322aaf20f9\n#4 DONE 0.0s\n\n#5 [ 3/10] RUN apt-get update &&     apt-get install -y --no-install-recommends     build-essential     cmake     pkg-config     libssl-dev     python3     python3-dev     python3-pip     docker.io     golang-go     curl     git     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [ 4/10] WORKDIR /home/cc\n#6 CACHED\n\n#7 [ 2/10] RUN useradd -m cc &&     mkdir -p /home/cc/EnvGym/data/anvil &&     chown -R cc:cc /home/cc\n#7 CACHED\n\n#8 [ 5/10] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none &&     . \"/home/cc/.cargo/env\" &&     rustup toolchain install nightly &&     rustup toolchain install 1.88.0 &&     rustup default 1.88.0\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 414.91kB 0.1s done\n#9 DONE 0.1s\n\n#10 [ 6/10] RUN git clone https://github.com/Z3Prover/z3 &&     cd z3 &&     git checkout z3-4.12.2 &&     python3 scripts/mk_make.py &&     cd build &&     make VERBOSE=1 &&     make install\n#10 0.216 Cloning into 'z3'...\n#10 7.380 Note: switching to 'z3-4.12.2'.\n#10 7.380 \n#10 7.380 You are in 'detached HEAD' state. You can look around, make experimental\n#10 7.380 changes and commit them, and you can discard any commits you make in this\n#10 7.380 state without impacting any branches by switching back to a branch.\n#10 7.380 \n#10 7.380 If you want to create a new branch to retain commits you create, you may\n#10 7.380 do so (now or later) by using -c with the switch command. Example:\n#10 7.380 \n#10 7.380   git switch -c <new-branch-name>\n#10 7.380 \n#10 7.380 Or undo this operation with:\n#10 7.380 \n#10 7.380   git switch -\n#10 7.380 \n#10 7.380 Turn off this advice by setting config variable advice.detachedHead to false\n#10 7.380 \n#10 7.380 HEAD is now at e417f7d78 updated release notes for 12.2\n#10 7.405 /home/cc/z3/scripts/mk_util.py:398: SyntaxWarning: invalid escape sequence '\\['\n#10 7.405   open_pat = re.compile(\"\\[search path for class files: (.*)\\]\")\n#10 7.407 /home/cc/z3/scripts/mk_util.py:816: SyntaxWarning: invalid escape sequence '\\<'\n#10 7.407   system_inc_pat  = re.compile(\"[ \\t]*#include[ \\t]*\\<.*\\>[ \\t]*\")\n#10 7.411 /home/cc/z3/scripts/mk_util.py:1723: SyntaxWarning: invalid escape sequence '\\%'\n#10 7.411   core_csproj_str = \"\"\"<Project Sdk=\"Microsoft.NET.Sdk\">\n#10 7.414 /home/cc/z3/scripts/mk_util.py:2249: SyntaxWarning: invalid escape sequence '\\%'\n#10 7.414   dotnet_proj_str = \"\"\"<Project Sdk=\"Microsoft.NET.Sdk\">\n#10 7.419 /home/cc/z3/scripts/mk_util.py:3165: SyntaxWarning: invalid escape sequence '\\M'\n#10 7.419   f.write('  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\\n')\n#10 7.419 /home/cc/z3/scripts/mk_util.py:3176: SyntaxWarning: invalid escape sequence '\\M'\n#10 7.420   f.write('  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\\n')\n#10 7.420 /home/cc/z3/scripts/mk_util.py:3179: SyntaxWarning: invalid escape sequence '\\M'\n#10 7.420   f.write('    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists(\\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\\')\" Label=\"LocalAppDataPlatform\" />  </ImportGroup>\\n')\n#10 7.420 /home/cc/z3/scripts/mk_util.py:3182: SyntaxWarning: invalid escape sequence '\\$'\n#10 7.421   f.write('    <OutDir Condition=\"\\'$(Configuration)|$(Platform)\\'==\\'Debug|Win32\\'\">$(SolutionDir)\\$(ProjectName)\\$(Configuration)\\</OutDir>\\n')\n#10 7.421 /home/cc/z3/scripts/mk_util.py:3185: SyntaxWarning: invalid escape sequence '\\$'\n#10 7.421   f.write('    <OutDir Condition=\"\\'$(Configuration)|$(Platform)\\'==\\'Release|Win32\\'\">$(SolutionDir)\\$(ProjectName)\\$(Configuration)\\</OutDir>\\n')\n#10 7.421 /home/cc/z3/scripts/mk_util.py:3190: SyntaxWarning: invalid escape sequence '\\$'\n#10 7.422   f.write('        <IntDir>$(ProjectName)\\$(Configuration)\\</IntDir>\\n')\n#10 7.422 /home/cc/z3/scripts/mk_util.py:3193: SyntaxWarning: invalid escape sequence '\\$'\n#10 7.422   f.write('    <IntDir>$(ProjectName)\\$(Configuration)\\</IntDir>\\n')\n#10 7.423 /home/cc/z3/scripts/mk_util.py:3270: SyntaxWarning: invalid escape sequence '\\M'\n#10 7.423   f.write('  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\\n')\n#10 7.423 /home/cc/z3/scripts/mk_util.py:3311: SyntaxWarning: invalid escape sequence '\\M'\n#10 7.424   f.write('  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\\n')\n#10 7.444 /home/cc/z3/scripts/mk_genfile_common.py:142: SyntaxWarning: invalid escape sequence '\\-'\n#10 7.444   words = re.split('[^\\-a-zA-Z0-9_]+', line)\n#10 7.445 /home/cc/z3/scripts/mk_genfile_common.py:230: SyntaxWarning: invalid escape sequence '\\-'\n#10 7.445   words = re.split('[^\\-a-zA-Z0-9_]+', line)\n#10 7.445 /home/cc/z3/scripts/mk_genfile_common.py:318: SyntaxWarning: invalid escape sequence '\\-'\n#10 7.445   words = re.split('[^\\-a-zA-Z0-9_]+', line)\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:444: SyntaxWarning: invalid escape sequence '\\-'\n#10 7.446   words = re.split('[^\\-a-zA-Z0-9_]+', line)\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:577: SyntaxWarning: invalid escape sequence '\\W'\n#10 7.446   words = re.split('\\W+', line)\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:621: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   reg_pat = re.compile('[ \\t]*REG_PARAMS\\(\\'([^\\']*)\\'\\)')\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:622: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   reg_mod_pat = re.compile('[ \\t]*REG_MODULE_PARAMS\\(\\'([^\\']*)\\', *\\'([^\\']*)\\'\\)')\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:623: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   reg_mod_descr_pat = re.compile('[ \\t]*REG_MODULE_DESCRIPTION\\(\\'([^\\']*)\\', *\\'([^\\']*)\\'\\)')\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:701: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   tactic_pat   = re.compile('[ \\t]*ADD_TACTIC\\(.*\\)')\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:702: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   probe_pat    = re.compile('[ \\t]*ADD_PROBE\\(.*\\)')\n#10 7.446 /home/cc/z3/scripts/mk_genfile_common.py:703: SyntaxWarning: invalid escape sequence '\\('\n#10 7.446   simplifier_pat = re.compile('[ \\t]*ADD_SIMPLIFIER\\(.*\\)')\n#10 7.447 /home/cc/z3/scripts/mk_genfile_common.py:783: SyntaxWarning: invalid escape sequence '\\('\n#10 7.447   initializer_pat      = re.compile('[ \\t]*ADD_INITIALIZER\\(\\'([^\\']*)\\'\\)')\n#10 7.447 /home/cc/z3/scripts/mk_genfile_common.py:785: SyntaxWarning: invalid escape sequence '\\('\n#10 7.447   initializer_prio_pat = re.compile('[ \\t]*ADD_INITIALIZER\\(\\'([^\\']*)\\',[ \\t]*(-?[0-9]*)\\)')\n#10 7.447 /home/cc/z3/scripts/mk_genfile_common.py:786: SyntaxWarning: invalid escape sequence '\\('\n#10 7.447   finalizer_pat        = re.compile('[ \\t]*ADD_FINALIZER\\(\\'([^\\']*)\\'\\)')\n#10 8.041 Set Assembly Version (DEFAULT): 4 12 2 0\n#10 8.041 New component: 'util'\n#10 8.041 New component: 'polynomial'\n#10 8.041 New component: 'interval'\n#10 8.041 New component: 'dd'\n#10 8.041 New component: 'simplex'\n#10 8.041 New component: 'hilbert'\n#10 8.041 New component: 'automata'\n#10 8.041 New component: 'params'\n#10 8.041 New component: 'realclosure'\n#10 8.041 New component: 'subpaving'\n#10 8.041 New component: 'ast'\n#10 8.041 New component: 'smt_params'\n#10 8.041 New component: 'parser_util'\n#10 8.041 New component: 'euf'\n#10 8.041 New component: 'grobner'\n#10 8.041 New component: 'sat'\n#10 8.041 New component: 'nlsat'\n#10 8.041 New component: 'lp'\n#10 8.041 New component: 'rewriter'\n#10 8.041 New component: 'bit_blaster'\n#10 8.041 New component: 'normal_forms'\n#10 8.041 New component: 'substitution'\n#10 8.041 New component: 'proofs'\n#10 8.041 New component: 'macros'\n#10 8.041 New component: 'model'\n#10 8.041 New component: 'converters'\n#10 8.041 New component: 'simplifiers'\n#10 8.041 New component: 'tactic'\n#10 8.041 New component: 'mbp'\n#10 8.041 New component: 'qe_lite'\n#10 8.041 New component: 'solver'\n#10 8.041 New component: 'cmd_context'\n#10 8.041 New component: 'smt2parser'\n#10 8.041 New component: 'pattern'\n#10 8.041 New component: 'aig_tactic'\n#10 8.041 New component: 'ackermannization'\n#10 8.041 New component: 'fpa'\n#10 8.041 New component: 'core_tactics'\n#10 8.041 New component: 'arith_tactics'\n#10 8.041 New component: 'solver_assertions'\n#10 8.041 New component: 'subpaving_tactic'\n#10 8.041 New component: 'proto_model'\n#10 8.041 New component: 'smt'\n#10 8.041 New component: 'sat_smt'\n#10 8.041 New component: 'sat_tactic'\n#10 8.041 New component: 'nlsat_tactic'\n#10 8.041 New component: 'bv_tactics'\n#10 8.041 New component: 'fuzzing'\n#10 8.041 New component: 'smt_tactic'\n#10 8.041 New component: 'sls_tactic'\n#10 8.041 New component: 'qe'\n#10 8.041 New component: 'sat_solver'\n#10 8.041 New component: 'fd_solver'\n#10 8.041 New component: 'muz'\n#10 8.041 New component: 'dataflow'\n#10 8.041 New component: 'transforms'\n#10 8.041 New component: 'rel'\n#10 8.041 New component: 'spacer'\n#10 8.041 New component: 'clp'\n#10 8.041 New component: 'tab'\n#10 8.041 New component: 'ddnf'\n#10 8.041 New component: 'bmc'\n#10 8.041 New component: 'fp'\n#10 8.041 New component: 'smtlogic_tactics'\n#10 8.041 New component: 'ufbv_tactic'\n#10 8.041 New component: 'fpa_tactics'\n#10 8.041 New component: 'portfolio'\n#10 8.041 New component: 'opt'\n#10 8.041 New component: 'extra_cmds'\n#10 8.041 New component: 'api'\n#10 8.041 New component: 'shell'\n#10 8.041 New component: 'test'\n#10 8.041 New component: 'api_dll'\n#10 8.041 New component: 'dotnet'\n#10 8.041 New component: 'java'\n#10 8.041 New component: 'ml'\n#10 8.041 New component: 'cpp'\n#10 8.041 Python bindings directory was detected.\n#10 8.041 New component: 'python'\n#10 8.041 New component: 'python_install'\n#10 8.041 New component: 'js'\n#10 8.041 New component: 'cpp_example'\n#10 8.041 New component: 'z3_tptp'\n#10 8.041 New component: 'c_example'\n#10 8.041 New component: 'maxsat'\n#10 8.041 New component: 'dotnet_example'\n#10 8.041 New component: 'java_example'\n#10 8.041 New component: 'ml_example'\n#10 8.041 New component: 'py_example'\n#10 8.041 UpdateVersion: \"Z3 4.12.2.0\"\n#10 8.041 Generating src/util/z3_version.h from src/util/z3_version.h.in\n#10 8.041 Generated 'src/util/z3_version.h'\n#10 8.041 Generated 'src/params/solver_params.hpp'\n#10 8.041 Generated 'src/params/rewriter_params.hpp'\n#10 8.041 Generated 'src/params/bv_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/bool_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/seq_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/tactic_params.hpp'\n#10 8.041 Generated 'src/params/poly_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/pattern_inference_params_helper.hpp'\n#10 8.041 Generated 'src/params/arith_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/array_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/fpa_rewriter_params.hpp'\n#10 8.041 Generated 'src/params/fpa2bv_rewriter_params.hpp'\n#10 8.041 Generated 'src/tactic/sls/sls_params.hpp'\n#10 8.041 Generated 'src/tactic/smtlogics/qfufbv_tactic_params.hpp'\n#10 8.041 Generated 'src/muz/base/fp_params.hpp'\n#10 8.041 Generated 'src/parsers/util/parser_params.hpp'\n#10 8.041 Generated 'src/ackermannization/ackermannize_bv_tactic_params.hpp'\n#10 8.041 Generated 'src/ackermannization/ackermannization_params.hpp'\n#10 8.041 Generated 'src/opt/opt_params.hpp'\n#10 8.041 Generated 'src/math/realclosure/rcf_params.hpp'\n#10 8.041 Generated 'src/math/polynomial/algebraic_params.hpp'\n#10 8.041 Generated 'src/smt/params/smt_params_helper.hpp'\n#10 8.041 Generated 'src/model/model_evaluator_params.hpp'\n#10 8.041 Generated 'src/model/model_params.hpp'\n#10 8.041 Generated 'src/solver/parallel_params.hpp'\n#10 8.041 Generated 'src/solver/combined_solver_params.hpp'\n#10 8.041 Generated 'src/ast/pp_params.hpp'\n#10 8.041 Generated 'src/ast/normal_forms/nnf_params.hpp'\n#10 8.041 Generated 'src/sat/sat_params.hpp'\n#10 8.041 Generated 'src/sat/sat_asymm_branch_params.hpp'\n#10 8.041 Generated 'src/sat/sat_scc_params.hpp'\n#10 8.041 Generated 'src/sat/sat_simplifier_params.hpp'\n#10 8.041 Generated 'src/nlsat/nlsat_params.hpp'\n#10 8.041 Generated 'src/ast/pattern/database.h'\n#10 8.041 Component api\n#10 8.041 Component portfolio\n#10 8.041 Component smtlogic_tactics\n#10 8.041 Component ackermannization\n#10 8.041 Component model\n#10 8.041 Component macros\n#10 8.041 Component rewriter\n#10 8.041 Component ast\n#10 8.041 Component util\n#10 8.041 Component polynomial\n#10 8.041 Component interval\n#10 8.041 Component automata\n#10 8.041 Component params\n#10 8.041 Component solver\n#10 8.041 Component smt_params\n#10 8.041 Component tactic\n#10 8.041 Component simplifiers\n#10 8.041 Component euf\n#10 8.041 Component normal_forms\n#10 8.041 Component bit_blaster\n#10 8.041 Component converters\n#10 8.041 Component substitution\n#10 8.041 Component qe_lite\n#10 8.041 Component mbp\n#10 8.041 Component simplex\n#10 8.041 Component proofs\n#10 8.041 Component sat_solver\n#10 8.041 Component core_tactics\n#10 8.041 Component pattern\n#10 8.041 Component smt2parser\n#10 8.041 Component cmd_context\n#10 8.041 Component parser_util\n#10 8.041 Component aig_tactic\n#10 8.041 Component bv_tactics\n#10 8.041 Component arith_tactics\n#10 8.041 Component sat\n#10 8.041 Component dd\n#10 8.041 Component grobner\n#10 8.041 Component sat_tactic\n#10 8.041 Component sat_smt\n#10 8.041 Component smt\n#10 8.041 Component proto_model\n#10 8.041 Component solver_assertions\n#10 8.041 Component fpa\n#10 8.041 Component lp\n#10 8.041 Component nlsat\n#10 8.041 Component nlsat_tactic\n#10 8.041 Component smt_tactic\n#10 8.041 Component fp\n#10 8.041 Component muz\n#10 8.041 Component qe\n#10 8.041 Component clp\n#10 8.041 Component transforms\n#10 8.041 Component hilbert\n#10 8.041 Component dataflow\n#10 8.041 Component tab\n#10 8.041 Component rel\n#10 8.041 Component bmc\n#10 8.041 Component fd_solver\n#10 8.041 Component ddnf\n#10 8.041 Component spacer\n#10 8.041 Component ufbv_tactic\n#10 8.041 Component fpa_tactics\n#10 8.041 Component sls_tactic\n#10 8.041 Component subpaving_tactic\n#10 8.041 Component subpaving\n#10 8.041 Component realclosure\n#10 8.041 Component opt\n#10 8.041 Component extra_cmds\n#10 8.041 Component shell\n#10 8.041 Generated 'src/shell/install_tactic.cpp'\n#10 8.041 Component api\n#10 8.041 Component portfolio\n#10 8.041 Component smtlogic_tactics\n#10 8.041 Component ackermannization\n#10 8.041 Component model\n#10 8.041 Component macros\n#10 8.041 Component rewriter\n#10 8.041 Component ast\n#10 8.041 Component util\n#10 8.041 Component polynomial\n#10 8.041 Component interval\n#10 8.041 Component automata\n#10 8.041 Component params\n#10 8.041 Component solver\n#10 8.041 Component smt_params\n#10 8.041 Component tactic\n#10 8.041 Component simplifiers\n#10 8.041 Component euf\n#10 8.041 Component normal_forms\n#10 8.041 Component bit_blaster\n#10 8.041 Component converters\n#10 8.041 Component substitution\n#10 8.041 Component qe_lite\n#10 8.041 Component mbp\n#10 8.041 Component simplex\n#10 8.041 Component proofs\n#10 8.041 Component sat_solver\n#10 8.041 Component core_tactics\n#10 8.041 Component pattern\n#10 8.041 Component smt2parser\n#10 8.041 Component cmd_context\n#10 8.041 Component parser_util\n#10 8.041 Component aig_tactic\n#10 8.041 Component bv_tactics\n#10 8.041 Component arith_tactics\n#10 8.041 Component sat\n#10 8.041 Component dd\n#10 8.041 Component grobner\n#10 8.041 Component sat_tactic\n#10 8.041 Component sat_smt\n#10 8.041 Component smt\n#10 8.041 Component proto_model\n#10 8.041 Component solver_assertions\n#10 8.041 Component fpa\n#10 8.041 Component lp\n#10 8.041 Component nlsat\n#10 8.041 Component nlsat_tactic\n#10 8.041 Component smt_tactic\n#10 8.041 Component fp\n#10 8.041 Component muz\n#10 8.041 Component qe\n#10 8.041 Component clp\n#10 8.041 Component transforms\n#10 8.041 Component hilbert\n#10 8.041 Component dataflow\n#10 8.041 Component tab\n#10 8.041 Component rel\n#10 8.041 Component bmc\n#10 8.041 Component fd_solver\n#10 8.041 Component ddnf\n#10 8.041 Component spacer\n#10 8.041 Component ufbv_tactic\n#10 8.041 Component fpa_tactics\n#10 8.041 Component sls_tactic\n#10 8.041 Component subpaving_tactic\n#10 8.041 Component subpaving\n#10 8.041 Component realclosure\n#10 8.041 Component opt\n#10 8.041 Component extra_cmds\n#10 8.041 Component fuzzing\n#10 8.041 Component test\n#10 8.041 Generated 'src/test/install_tactic.cpp'\n#10 8.041 Component api\n#10 8.041 Component portfolio\n#10 8.041 Component smtlogic_tactics\n#10 8.041 Component ackermannization\n#10 8.041 Component model\n#10 8.041 Component macros\n#10 8.041 Component rewriter\n#10 8.041 Component ast\n#10 8.041 Component util\n#10 8.041 Component polynomial\n#10 8.041 Component interval\n#10 8.041 Component automata\n#10 8.041 Component params\n#10 8.041 Component solver\n#10 8.041 Component smt_params\n#10 8.041 Component tactic\n#10 8.041 Component simplifiers\n#10 8.041 Component euf\n#10 8.041 Component normal_forms\n#10 8.041 Component bit_blaster\n#10 8.041 Component converters\n#10 8.041 Component substitution\n#10 8.041 Component qe_lite\n#10 8.041 Component mbp\n#10 8.041 Component simplex\n#10 8.041 Component proofs\n#10 8.041 Component sat_solver\n#10 8.041 Component core_tactics\n#10 8.041 Component pattern\n#10 8.041 Component smt2parser\n#10 8.041 Component cmd_context\n#10 8.041 Component parser_util\n#10 8.041 Component aig_tactic\n#10 8.041 Component bv_tactics\n#10 8.041 Component arith_tactics\n#10 8.041 Component sat\n#10 8.041 Component dd\n#10 8.041 Component grobner\n#10 8.041 Component sat_tactic\n#10 8.041 Component sat_smt\n#10 8.041 Component smt\n#10 8.041 Component proto_model\n#10 8.041 Component solver_assertions\n#10 8.041 Component fpa\n#10 8.041 Component lp\n#10 8.041 Component nlsat\n#10 8.041 Component nlsat_tactic\n#10 8.041 Component smt_tactic\n#10 8.041 Component fp\n#10 8.041 Component muz\n#10 8.041 Component qe\n#10 8.041 Component clp\n#10 8.041 Component transforms\n#10 8.041 Component hilbert\n#10 8.041 Component dataflow\n#10 8.041 Component tab\n#10 8.041 Component rel\n#10 8.041 Component bmc\n#10 8.041 Component fd_solver\n#10 8.041 Component ddnf\n#10 8.041 Component spacer\n#10 8.041 Component ufbv_tactic\n#10 8.041 Component fpa_tactics\n#10 8.041 Component sls_tactic\n#10 8.041 Component subpaving_tactic\n#10 8.041 Component subpaving\n#10 8.041 Component realclosure\n#10 8.041 Component opt\n#10 8.041 Component extra_cmds\n#10 8.041 Component api_dll\n#10 8.041 Generated 'src/api/dll/install_tactic.cpp'\n#10 8.041 Generated 'src/shell/mem_initializer.cpp'\n#10 8.478 /home/cc/z3/scripts/update_api.py:119: SyntaxWarning: invalid escape sequence '\\('\n#10 8.478   pat1 = re.compile(\" *def_Type\\(\\'(.*)\\',[^\\']*\\'(.*)\\',[^\\']*\\'(.*)\\'\\)[ \\t]*\")\n#10 8.478 /home/cc/z3/scripts/update_api.py:120: SyntaxWarning: invalid escape sequence '\\('\n#10 8.478   pat2 = re.compile(\"Z3_DECLARE_CLOSURE\\((.*),(.*), \\((.*)\\)\\)\")\n#10 11.11 Generated 'src/test/mem_initializer.cpp'\n#10 11.11 Generated 'src/api/dll/mem_initializer.cpp'\n#10 11.11 Generated 'src/shell/gparams_register_modules.cpp'\n#10 11.11 Generated 'src/test/gparams_register_modules.cpp'\n#10 11.11 Generated 'src/api/dll/gparams_register_modules.cpp'\n#10 11.11 Generated 'src/api/python/z3/z3consts.py\n#10 11.11 Generated 'src/api/api_log_macros.h'\n#10 11.11 Generated 'src/api/api_log_macros.cpp'\n#10 11.11 Generated 'src/api/api_commands.cpp'\n#10 11.11 Generated 'src/api/python/z3/z3core.py'\n#10 11.11 Listing 'src/api/python/z3'...\n#10 11.11 Compiling 'src/api/python/z3/__init__.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3consts.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3core.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3num.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3poly.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3printer.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3rcf.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3types.py'...\n#10 11.11 Compiling 'src/api/python/z3/z3util.py'...\n#10 11.11 Generated python bytecode\n#10 11.11 Copied '__init__.py'\n#10 11.11 Copied 'z3types.py'\n#10 11.11 Copied 'z3printer.py'\n#10 11.11 Copied 'z3util.py'\n#10 11.11 Copied 'z3num.py'\n#10 11.11 Copied 'z3consts.py'\n#10 11.11 Copied 'z3.py'\n#10 11.11 Copied 'z3core.py'\n#10 11.11 Copied 'z3rcf.py'\n#10 11.11 Copied 'z3poly.py'\n#10 11.11 Copied 'z3consts.cpython-312.pyc'\n#10 11.11 Copied 'z3num.cpython-312.pyc'\n#10 11.11 Copied 'z3core.cpython-312.pyc'\n#10 11.11 Copied 'z3rcf.cpython-312.pyc'\n#10 11.11 Copied 'z3printer.cpython-312.pyc'\n#10 11.11 Copied 'z3poly.cpython-312.pyc'\n#10 11.11 Copied 'z3types.cpython-312.pyc'\n#10 11.11 Copied 'z3.cpython-312.pyc'\n#10 11.11 Copied 'z3util.cpython-312.pyc'\n#10 11.11 Copied '__init__.cpython-312.pyc'\n#10 11.11 Testing ar...\n#10 11.11 Testing g++...\n#10 11.11 Testing gcc...\n#10 11.11 Testing floating point support...\n#10 11.11 Host platform:  Linux\n#10 11.11 C++ Compiler:   g++\n#10 11.11 C Compiler  :   gcc\n#10 11.11 Archive Tool:   ar\n#10 11.11 Arithmetic:     internal\n#10 11.11 Prefix:         /usr\n#10 11.11 64-bit:         True\n#10 11.11 FP math:        SSE2-GCC\n#10 11.11 Python pkg dir: /usr/local/lib/python3.12/dist-packages\n#10 11.11 Python version: 3.12\n#10 11.11 Writing build/Makefile\n#10 11.11 Copied Z3Py example 'socrates.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'proofreplay.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'rc2.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'efsmt.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'mini_quip.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'example.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'parallel.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'simplify_formula.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'all_interval_series.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'hs.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'trafficjam.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'visitor.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'prooflogs.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'mini_ic3.py' to 'build/python'\n#10 11.11 Copied Z3Py example 'union_sort.py' to 'build/python'\n#10 11.11 Makefile was successfully generated.\n#10 11.11   compilation mode: Release\n#10 11.11 Type 'cd build; make' to build Z3\n#10 11.17 src/shell/z3_log_frontend.cpp\n#10 11.70 src/shell/drat_frontend.cpp\n#10 12.80 src/shell/gparams_register_modules.cpp\n#10 13.93 src/shell/smtlib_frontend.cpp\n#10 16.04 src/shell/opt_frontend.cpp\n#10 17.58 src/shell/mem_initializer.cpp\n#10 18.09 src/shell/dimacs_frontend.cpp\n#10 19.55 src/shell/datalog_frontend.cpp\n#10 21.08 src/shell/install_tactic.cpp\n#10 24.28 src/shell/main.cpp\n#10 25.06 src/api/api_bv.cpp\n#10 26.59 src/api/api_special_relations.cpp\n#10 27.74 src/api/z3_replayer.cpp\n#10 29.02 src/api/api_ast_vector.cpp\n#10 30.30 src/api/api_pb.cpp\n#10 31.62 src/api/api_solver.cpp\n#10 34.42 src/api/api_model.cpp\n#10 35.92 src/api/api_datatype.cpp\n#10 37.50 src/api/api_config_params.cpp\n#10 38.67 src/api/api_context.cpp\n#10 40.36 src/api/api_opt.cpp\n#10 42.34 src/api/api_commands.cpp\n#10 43.66 src/api/api_log.cpp\n#10 44.23 src/api/api_quant.cpp\n#10 45.71 src/api/api_ast.cpp\n#10 48.03 src/api/api_parsers.cpp\n#10 49.78 src/api/api_tactic.cpp\n#10 51.93 src/api/api_seq.cpp\n#10 53.64 src/api/api_goal.cpp\n#10 55.06 src/api/api_params.cpp\n#10 56.31 src/api/api_numeral.cpp\n#10 57.87 src/api/api_log_macros.cpp\n#10 59.31 src/api/api_fpa.cpp\n#10 61.29 src/api/api_rcf.cpp\n#10 62.62 src/api/api_ast_map.cpp\n#10 63.98 src/api/api_stats.cpp\n#10 65.15 src/api/api_datalog.cpp\n#10 67.06 src/api/api_algebraic.cpp\n#10 68.71 src/api/api_arith.cpp\n#10 70.08 src/api/api_qe.cpp\n#10 71.43 src/api/api_polynomial.cpp\n#10 72.61 src/api/api_array.cpp\n#10 74.09 src/cmd_context/extra_cmds/subpaving_cmds.cpp\n#10 75.11 src/cmd_context/extra_cmds/polynomial_cmds.cpp\n#10 76.18 src/cmd_context/extra_cmds/proof_cmds.cpp\n#10 78.19 src/cmd_context/extra_cmds/dbg_cmds.cpp\n#10 80.31 src/opt/pb_sls.cpp\n#10 82.86 src/opt/opt_solver.cpp\n#10 85.00 src/opt/maxcore.cpp\n#10 88.48 src/opt/sortmax.cpp\n#10 91.22 src/opt/opt_cores.cpp\n#10 94.37 src/opt/maxlex.cpp\n#10 96.56 src/opt/totalizer.cpp\n#10 97.77 src/opt/opt_parse.cpp\n#10 101.1 src/opt/opt_lns.cpp\n#10 102.9 src/opt/optsmt.cpp\n#10 106.1 src/opt/wmax.cpp\n#10 108.1 src/opt/maxsmt.cpp\n#10 110.3 src/opt/opt_pareto.cpp\n#10 111.3 src/opt/opt_context.cpp\n#10 115.9 src/opt/opt_preprocess.cpp\n#10 119.5 src/opt/opt_cmds.cpp\n#10 121.0 src/tactic/portfolio/solver_subsumption_tactic.cpp\n#10 122.3 src/tactic/portfolio/default_tactic.cpp\n#10 123.2 src/tactic/portfolio/solver2lookahead.cpp\n#10 124.0 src/tactic/portfolio/smt_strategic_solver.cpp\n#10 125.2 src/tactic/fpa/qffp_tactic.cpp\n#10 126.4 src/tactic/fpa/qffplra_tactic.cpp\n#10 127.5 src/tactic/fpa/fpa2bv_tactic.cpp\n#10 129.0 src/tactic/fpa/fpa2bv_model_converter.cpp\n#10 130.0 src/tactic/ufbv/ufbv_rewriter_tactic.cpp\n#10 131.1 src/tactic/ufbv/quasi_macros_tactic.cpp\n#10 132.6 src/tactic/ufbv/ufbv_tactic.cpp\n#10 134.4 src/tactic/ufbv/macro_finder_tactic.cpp\n#10 136.0 src/tactic/smtlogics/qfaufbv_tactic.cpp\n#10 137.8 src/tactic/smtlogics/qfidl_tactic.cpp\n#10 139.7 src/tactic/smtlogics/smt_tactic.cpp\n#10 140.6 src/tactic/smtlogics/qfufbv_ackr_model_converter.cpp\n#10 141.4 src/tactic/smtlogics/qfuf_tactic.cpp\n#10 143.2 src/tactic/smtlogics/qfufbv_tactic.cpp\n#10 145.2 src/tactic/smtlogics/qflra_tactic.cpp\n#10 146.2 src/tactic/smtlogics/qfauflia_tactic.cpp\n#10 148.0 src/tactic/smtlogics/qfnra_tactic.cpp\n#10 148.8 src/tactic/smtlogics/nra_tactic.cpp\n#10 149.7 src/tactic/smtlogics/qflia_tactic.cpp\n#10 151.8 src/tactic/smtlogics/qfbv_tactic.cpp\n#10 153.7 src/tactic/smtlogics/qfnia_tactic.cpp\n#10 155.5 src/tactic/smtlogics/quant_tactics.cpp\n#10 157.4 src/muz/fp/horn_tactic.cpp\n#10 159.2 src/muz/fp/dl_register_engine.cpp\n#10 160.3 src/muz/fp/datalog_parser.cpp\n#10 163.2 src/muz/fp/dl_cmds.cpp\n#10 165.1 src/muz/bmc/dl_bmc_engine.cpp\n#10 168.8 src/muz/ddnf/ddnf.cpp\n#10 171.5 src/muz/tab/tab_context.cpp\n#10 174.7 src/muz/clp/clp_context.cpp\n#10 176.4 src/muz/spacer/spacer_util.cpp\n#10 180.9 src/muz/spacer/spacer_cluster_util.cpp\n#10 183.4 src/muz/spacer/spacer_qe_project.cpp\n#10 186.6 src/muz/spacer/spacer_antiunify.cpp\n#10 189.5 src/muz/spacer/spacer_sym_mux.cpp\n#10 191.6 src/muz/spacer/spacer_unsat_core_plugin.cpp\n#10 193.9 src/muz/spacer/spacer_legacy_mbp.cpp\n#10 195.1 src/muz/spacer/spacer_manager.cpp\n#10 196.8 src/muz/spacer/spacer_cluster.cpp\n#10 199.3 src/muz/spacer/spacer_convex_closure.cpp\n#10 200.9 src/muz/spacer/spacer_context.cpp\n#10 206.9 src/muz/spacer/spacer_quant_generalizer.cpp\n#10 209.3 src/muz/spacer/spacer_matrix.cpp\n#10 210.4 src/muz/spacer/spacer_legacy_mev.cpp\n#10 213.2 src/muz/spacer/spacer_legacy_frames.cpp\n#10 214.8 src/muz/spacer/spacer_farkas_learner.cpp\n#10 216.7 src/muz/spacer/spacer_sem_matcher.cpp\n#10 217.7 src/muz/spacer/spacer_unsat_core_learner.cpp\n#10 218.7 src/muz/spacer/spacer_conjecture.cpp\n#10 220.0 src/muz/spacer/spacer_arith_generalizers.cpp\n#10 222.3 src/muz/spacer/spacer_concretize.cpp\n#10 223.8 src/muz/spacer/spacer_generalizers.cpp\n#10 225.4 src/muz/spacer/spacer_arith_kernel.cpp\n#10 226.5 src/muz/spacer/spacer_expand_bnd_generalizer.cpp\n#10 228.4 src/muz/spacer/spacer_iuc_solver.cpp\n#10 230.1 src/muz/spacer/spacer_global_generalizer.cpp\n#10 232.7 src/muz/spacer/spacer_prop_solver.cpp\n#10 234.3 src/muz/spacer/spacer_mev_array.cpp\n#10 235.6 src/muz/spacer/spacer_sat_answer.cpp\n#10 237.5 src/muz/spacer/spacer_ind_lemma_generalizer.cpp\n#10 238.9 src/muz/spacer/spacer_proof_utils.cpp\n#10 241.3 src/muz/spacer/spacer_mbc.cpp\n#10 243.1 src/muz/spacer/spacer_dl_interface.cpp\n#10 244.8 src/muz/spacer/spacer_callback.cpp\n#10 246.0 src/muz/spacer/spacer_iuc_proof.cpp\n#10 247.4 src/muz/spacer/spacer_pdr.cpp\n#10 249.3 src/muz/rel/dl_lazy_table.cpp\n#10 251.2 src/muz/rel/dl_finite_product_relation.cpp\n#10 254.6 src/muz/rel/check_relation.cpp\n#10 257.2 src/muz/rel/rel_context.cpp\n#10 259.4 src/muz/rel/dl_mk_simple_joins.cpp\n#10 261.9 src/muz/rel/udoc_relation.cpp\n#10 264.9 src/muz/rel/dl_interval_relation.cpp\n#10 267.7 src/muz/rel/dl_product_relation.cpp\n#10 270.7 src/muz/rel/dl_compiler.cpp\n#10 274.1 src/muz/rel/dl_relation_manager.cpp\n#10 277.1 src/muz/rel/dl_check_table.cpp\n#10 278.6 src/muz/rel/dl_external_relation.cpp\n#10 280.3 src/muz/rel/doc.cpp\n#10 282.2 src/muz/rel/dl_sieve_relation.cpp\n#10 284.6 src/muz/rel/karr_relation.cpp\n#10 287.4 src/muz/rel/dl_base.cpp\n#10 289.2 src/muz/rel/aig_exporter.cpp\n#10 291.1 src/muz/rel/dl_table_relation.cpp\n#10 292.7 src/muz/rel/dl_mk_explanations.cpp\n#10 294.9 src/muz/rel/dl_bound_relation.cpp\n#10 297.8 src/muz/rel/dl_instruction.cpp\n#10 300.6 src/muz/rel/dl_table.cpp\n#10 302.2 src/muz/rel/dl_sparse_table.cpp\n#10 305.3 src/muz/rel/dl_mk_similarity_compressor.cpp\n#10 307.0 src/muz/transforms/dl_mk_slice.cpp\n#10 309.7 src/muz/transforms/dl_mk_array_instantiation.cpp\n#10 311.9 src/muz/transforms/dl_mk_unbound_compressor.cpp\n#10 313.7 src/muz/transforms/dl_mk_subsumption_checker.cpp\n#10 315.3 src/muz/transforms/dl_mk_filter_rules.cpp\n#10 316.7 src/muz/transforms/dl_transforms.cpp\n#10 318.0 src/muz/transforms/dl_mk_backwards.cpp\n#10 319.2 src/muz/transforms/dl_mk_synchronize.cpp\n#10 321.3 src/muz/transforms/dl_mk_quantifier_instantiation.cpp\n#10 323.7 src/muz/transforms/dl_mk_coalesce.cpp\n#10 325.2 src/muz/transforms/dl_mk_elim_term_ite.cpp\n#10 326.7 src/muz/transforms/dl_mk_bit_blast.cpp\n#10 329.5 src/muz/transforms/dl_mk_array_blast.cpp\n#10 331.3 src/muz/transforms/dl_mk_scale.cpp\n#10 332.9 src/muz/transforms/dl_mk_coi_filter.cpp\n#10 334.9 src/muz/transforms/dl_mk_separate_negated_tails.cpp\n#10 336.2 src/muz/transforms/dl_mk_array_eq_rewrite.cpp\n#10 337.6 src/muz/transforms/dl_mk_loop_counter.cpp\n#10 339.1 src/muz/transforms/dl_mk_rule_inliner.cpp\n#10 341.3 src/muz/transforms/dl_mk_quantifier_abstraction.cpp\n#10 343.2 src/muz/transforms/dl_mk_unfold.cpp\n#10 344.4 src/muz/transforms/dl_mk_magic_sets.cpp\n#10 346.2 src/muz/transforms/dl_mk_karr_invariants.cpp\n#10 347.9 src/muz/transforms/dl_mk_interp_tail_simplifier.cpp\n#10 350.8 src/muz/transforms/dl_mk_magic_symbolic.cpp\n#10 352.1 src/muz/dataflow/dataflow.cpp\n#10 353.1 src/muz/base/dl_rule_transformer.cpp\n#10 354.3 src/muz/base/dl_boogie_proof.cpp\n#10 355.8 src/muz/base/dl_costs.cpp\n#10 356.8 src/muz/base/bind_variables.cpp\n#10 357.9 src/muz/base/hnf.cpp\n#10 359.7 src/muz/base/rule_properties.cpp\n#10 361.8 src/muz/base/dl_rule_set.cpp\n#10 364.4 src/muz/base/dl_rule_subsumption_index.cpp\n#10 365.6 src/muz/base/dl_context.cpp\n#10 368.5 src/muz/base/dl_util.cpp\n#10 370.4 src/muz/base/dl_rule.cpp\n#10 373.5 src/tactic/fd_solver/smtfd_solver.cpp\n#10 376.6 src/tactic/fd_solver/enum2bv_solver.cpp\n#10 377.8 src/tactic/fd_solver/pb2bv_solver.cpp\n#10 379.2 src/tactic/fd_solver/fd_solver.cpp\n#10 380.1 src/tactic/fd_solver/bounded_int2bv_solver.cpp\n#10 382.2 src/sat/sat_solver/sat_smt_solver.cpp\n#10 385.1 src/sat/sat_solver/inc_sat_solver.cpp\n#10 388.7 src/qe/qsat.cpp\n#10 391.6 src/qe/qe_bv_plugin.cpp\n#10 392.5 src/qe/qe.cpp\n#10 397.2 src/qe/qe_cmd.cpp\n#10 398.3 src/qe/nlqsat.cpp\n#10 401.3 src/qe/qe_datatype_plugin.cpp\n#10 403.2 src/qe/qe_bool_plugin.cpp\n#10 404.2 src/qe/nlarith_util.cpp\n#10 407.0 src/qe/qe_mbi.cpp\n#10 409.7 src/qe/qe_array_plugin.cpp\n#10 411.0 src/qe/qe_mbp.cpp\n#10 412.6 src/qe/qe_arith_plugin.cpp\n#10 416.2 src/qe/qe_dl_plugin.cpp\n#10 417.4 src/qe/qe_tactic.cpp\n#10 418.9 src/tactic/sls/bvsls_opt_engine.cpp\n#10 421.8 src/tactic/sls/sls_tactic.cpp\n#10 423.8 src/tactic/sls/sls_engine.cpp\n#10 427.1 src/smt/tactic/unit_subsumption_tactic.cpp\n#10 428.6 src/smt/tactic/ctx_solver_simplify_tactic.cpp\n#10 430.0 src/smt/tactic/smt_tactic_core.cpp\n#10 431.6 src/tactic/bv/bv_bound_chk_tactic.cpp\n#10 434.1 src/tactic/bv/dt2bv_tactic.cpp\n#10 436.0 src/tactic/bv/bvarray2uf_tactic.cpp\n#10 437.3 src/tactic/bv/bit_blaster_model_converter.cpp\n#10 438.7 src/tactic/bv/bvarray2uf_rewriter.cpp\n#10 441.1 src/tactic/bv/bv1_blaster_tactic.cpp\n#10 443.8 src/tactic/bv/bv_bounds_tactic.cpp\n#10 446.5 src/tactic/bv/bv_size_reduction_tactic.cpp\n#10 448.1 src/tactic/bv/elim_small_bv_tactic.cpp\n#10 450.6 src/tactic/bv/bit_blaster_tactic.cpp\n#10 451.9 src/nlsat/tactic/qfnra_nlsat_tactic.cpp\n#10 453.7 src/nlsat/tactic/nlsat_tactic.cpp\n#10 454.9 src/nlsat/tactic/goal2nlsat.cpp\n#10 456.5 src/sat/tactic/sat_tactic.cpp\n#10 457.9 src/sat/tactic/sat2goal.cpp\n#10 459.7 src/sat/tactic/goal2sat.cpp\n#10 462.7 src/sat/smt/array_model.cpp\n#10 464.7 src/sat/smt/q_eval.cpp\n#10 466.4 src/sat/smt/arith_axioms.cpp\n#10 469.2 src/sat/smt/q_mam.cpp\n#10 472.7 src/sat/smt/arith_internalize.cpp\n#10 476.2 src/sat/smt/bv_solver.cpp\n#10 478.9 src/sat/smt/pb_constraint.cpp\n#10 480.0 src/sat/smt/euf_solver.cpp\n#10 483.6 src/sat/smt/array_axioms.cpp\n#10 486.0 src/sat/smt/bv_invariant.cpp\n#10 487.3 src/sat/smt/q_ematch.cpp\n#10 490.6 src/sat/smt/arith_solver.cpp\n#10 496.3 src/sat/smt/pb_solver.cpp\n#10 500.9 src/sat/smt/user_solver.cpp\n#10 502.7 src/sat/smt/euf_invariant.cpp\n#10 503.9 src/sat/smt/arith_diagnostics.cpp\n#10 506.3 src/sat/smt/euf_proof_checker.cpp\n#10 509.2 src/sat/smt/pb_card.cpp\n#10 510.6 src/sat/smt/bv_theory_checker.cpp\n#10 511.8 src/sat/smt/euf_ackerman.cpp\n#10 513.3 src/sat/smt/bv_internalize.cpp\n#10 516.2 src/sat/smt/q_mbi.cpp\n#10 519.0 src/sat/smt/fpa_solver.cpp\n#10 521.0 src/sat/smt/pb_internalize.cpp\n#10 522.6 src/sat/smt/euf_proof.cpp\n#10 524.7 src/sat/smt/tseitin_theory_checker.cpp\n#10 526.3 src/sat/smt/bv_delay_internalize.cpp\n#10 528.2 src/sat/smt/array_diagnostics.cpp\n#10 529.6 src/sat/smt/recfun_solver.cpp\n#10 531.7 src/sat/smt/euf_local_search.cpp\n#10 532.9 src/sat/smt/xor_solver.cpp\n#10 534.3 src/sat/smt/sat_th.cpp\n#10 535.9 src/sat/smt/arith_sls.cpp\n#10 538.5 src/sat/smt/dt_solver.cpp\n#10 540.8 src/sat/smt/q_clause.cpp\n#10 542.1 src/sat/smt/euf_relevancy.cpp\n#10 543.8 src/sat/smt/q_queue.cpp\n#10 545.3 src/sat/smt/array_internalize.cpp\n#10 546.9 src/sat/smt/bv_ackerman.cpp\n#10 548.2 src/sat/smt/array_solver.cpp\n#10 549.9 src/sat/smt/q_solver.cpp\n#10 552.4 src/sat/smt/pb_pb.cpp\n#10 553.6 src/sat/smt/euf_model.cpp\n#10 556.0 src/sat/smt/atom2bool_var.cpp\n#10 557.5 src/sat/smt/q_model_fixer.cpp\n#10 559.7 src/sat/smt/euf_internalize.cpp\n#10 561.7 src/sat/smt/q_theory_checker.cpp\n#10 563.1 src/smt/smt_lookahead.cpp\n#10 564.6 src/smt/arith_eq_adapter.cpp\n#10 566.1 src/smt/smt_kernel.cpp\n#10 567.5 src/smt/theory_str.cpp\n#10 578.8 src/smt/theory_user_propagator.cpp\n#10 580.7 src/smt/seq_regex.cpp\n#10 583.4 src/smt/smt_conflict_resolution.cpp\n#10 585.9 src/smt/theory_opt.cpp\n#10 586.8 src/smt/theory_array_bapa.cpp\n#10 589.3 src/smt/smt_quantifier.cpp\n#10 591.1 src/smt/theory_dummy.cpp\n#10 592.4 src/smt/smt_checker.cpp\n#10 593.9 src/smt/smt_model_generator.cpp\n#10 595.8 src/smt/theory_lra.cpp\n#10 603.8 src/smt/smt_parallel.cpp\n#10 605.7 src/smt/smt_context_pp.cpp\n#10 607.9 src/smt/smt_statistics.cpp\n#10 607.9 src/smt/watch_list.cpp\n#10 608.6 src/smt/theory_str_mc.cpp\n#10 613.0 src/smt/mam.cpp\n#10 616.6 src/smt/theory_bv.cpp\n#10 620.5 src/smt/smt_consequences.cpp\n#10 624.2 src/smt/smt_relevancy.cpp\n#10 626.0 src/smt/theory_str_regex.cpp\n#10 630.2 src/smt/theory_fpa.cpp\n#10 632.3 src/smt/theory_arith.cpp\n#10 657.8 src/smt/theory_dl.cpp\n#10 659.8 src/smt/qi_queue.cpp\n#10 661.6 src/smt/theory_utvpi.cpp\n#10 666.8 src/smt/theory_array.cpp\n#10 668.4 src/smt/old_interval.cpp\n#10 669.7 src/smt/theory_dense_diff_logic.cpp\n#10 676.8 src/smt/smt_solver.cpp\n#10 678.6 src/smt/smt_justification.cpp\n#10 680.3 src/smt/theory_recfun.cpp\n#10 682.3 src/smt/uses_theory.cpp\n#10 683.1 src/smt/smt_model_finder.cpp\n#10 687.0 src/smt/theory_char.cpp\n#10 689.1 src/smt/smt_quick_checker.cpp\n#10 691.0 src/smt/smt_almost_cg_table.cpp\n#10 691.9 src/smt/smt_value_sort.cpp\n#10 692.7 src/smt/smt_farkas_util.cpp\n#10 694.0 src/smt/theory_wmaxsat.cpp\n#10 696.1 src/smt/smt_model_checker.cpp\n#10 699.1 src/smt/smt_cg_table.cpp\n#10 700.3 src/smt/smt_implied_equalities.cpp\n#10 701.7 src/smt/theory_seq.cpp\n#10 708.0 src/smt/smt_context_stat.cpp\n#10 709.3 src/smt/smt_context_inv.cpp\n#10 710.6 src/smt/theory_pb.cpp\n#10 715.4 src/smt/theory_diff_logic.cpp\n#10 725.5 src/smt/smt_clause.cpp\n#10 726.4 src/smt/theory_array_full.cpp\n#10 728.7 src/smt/theory_special_relations.cpp\n#10 732.2 src/smt/seq_axioms.cpp\n#10 733.6 src/smt/smt_context.cpp\n#10 738.8 src/smt/theory_datatype.cpp\n#10 741.4 src/smt/smt2_extra_cmds.cpp\n#10 742.4 src/smt/seq_eq_solver.cpp\n#10 745.6 src/smt/theory_array_base.cpp\n#10 748.1 src/smt/arith_eq_solver.cpp\n#10 749.8 src/smt/smt_theory.cpp\n#10 751.3 src/smt/smt_clause_proof.cpp\n#10 753.1 src/smt/dyn_ack.cpp\n#10 755.9 src/smt/seq_offset_eq.cpp\n#10 757.3 src/smt/smt_for_each_relevant_expr.cpp\n#10 758.8 src/smt/smt_setup.cpp\n#10 761.1 src/smt/expr_context_simplifier.cpp\n#10 763.2 src/smt/smt_arith_value.cpp\n#10 764.6 src/smt/smt_case_split_queue.cpp\n#10 767.2 src/smt/smt_literal.cpp\n#10 768.1 src/smt/fingerprints.cpp\n#10 769.1 src/smt/seq_ne_solver.cpp\n#10 771.2 src/smt/smt_internalizer.cpp\n#10 774.2 src/smt/smt_enode.cpp\n#10 775.6 src/smt/proto_model/proto_model.cpp\n#10 777.1 src/math/subpaving/tactic/expr2subpaving.cpp\n#10 778.3 src/math/subpaving/tactic/subpaving_tactic.cpp\n#10 779.6 src/solver/assertions/asserted_formulas.cpp\n#10 784.9 src/tactic/arith/pb2bv_model_converter.cpp\n#10 785.9 src/tactic/arith/bv2int_rewriter.cpp\n#10 788.4 src/tactic/arith/eq2bv_tactic.cpp\n#10 791.2 src/tactic/arith/lia2card_tactic.cpp\n#10 793.9 src/tactic/arith/diff_neq_tactic.cpp\n#10 795.3 src/tactic/arith/fm_tactic.cpp\n#10 798.6 src/tactic/arith/purify_arith_tactic.cpp\n#10 801.7 src/tactic/arith/add_bounds_tactic.cpp\n#10 803.3 src/tactic/arith/factor_tactic.cpp\n#10 805.7 src/tactic/arith/fix_dl_var_tactic.cpp\n#10 807.5 src/tactic/arith/pb2bv_tactic.cpp\n#10 810.9 src/tactic/arith/bv2real_rewriter.cpp\n#10 813.9 src/tactic/arith/nla2bv_tactic.cpp\n#10 816.0 src/tactic/arith/probe_arith.cpp\n#10 817.8 src/tactic/arith/recover_01_tactic.cpp\n#10 819.3 src/tactic/arith/lia2pb_tactic.cpp\n#10 821.2 src/tactic/arith/arith_bounds_tactic.cpp\n#10 822.5 src/tactic/arith/normalize_bounds_tactic.cpp\n#10 823.9 src/tactic/arith/degree_shift_tactic.cpp\n#10 826.7 src/tactic/core/euf_completion_tactic.cpp\n#10 828.5 src/tactic/core/pb_preprocess_tactic.cpp\n#10 830.9 src/tactic/core/collect_occs.cpp\n#10 831.9 src/tactic/core/der_tactic.cpp\n#10 833.2 src/tactic/core/blast_term_ite_tactic.cpp\n#10 835.5 src/tactic/core/simplify_tactic.cpp\n#10 836.8 src/tactic/core/reduce_args_tactic.cpp\n#10 839.7 src/tactic/core/occf_tactic.cpp\n#10 841.1 src/tactic/core/propagate_values_tactic.cpp\n#10 842.5 src/tactic/core/elim_term_ite_tactic.cpp\n#10 845.1 src/tactic/core/elim_uncnstr_tactic.cpp\n#10 847.8 src/tactic/core/special_relations_tactic.cpp\n#10 849.3 src/tactic/core/ctx_simplify_tactic.cpp\n#10 851.6 src/tactic/core/symmetry_reduce_tactic.cpp\n#10 854.4 src/tactic/core/injectivity_tactic.cpp\n#10 856.7 src/tactic/core/cofactor_term_ite_tactic.cpp\n#10 858.0 src/tactic/core/split_clause_tactic.cpp\n#10 859.4 src/tactic/core/cofactor_elim_term_ite.cpp\n#10 861.8 src/tactic/core/nnf_tactic.cpp\n#10 863.2 src/tactic/core/tseitin_cnf_tactic.cpp\n#10 865.9 src/tactic/core/collect_statistics_tactic.cpp\n#10 867.6 src/ast/fpa/bv2fpa_converter.cpp\n#10 869.5 src/ast/fpa/fpa2bv_rewriter.cpp\n#10 871.9 src/ast/fpa/fpa2bv_converter.cpp\n#10 877.8 src/ackermannization/ackermannize_bv_tactic.cpp\n#10 879.0 src/ackermannization/ackr_bound_probe.cpp\n#10 880.2 src/ackermannization/lackr_model_converter_lazy.cpp\n#10 881.1 src/ackermannization/ackr_model_converter.cpp\n#10 882.3 src/ackermannization/ackermannize_bv_model_converter.cpp\n#10 883.1 src/ackermannization/lackr.cpp\n#10 884.6 src/ackermannization/ackr_helper.cpp\n#10 885.3 src/ackermannization/lackr_model_constructor.cpp\n#10 886.9 src/tactic/aig/aig.cpp\n#10 889.5 src/tactic/aig/aig_tactic.cpp\n#10 890.8 src/ast/pattern/pattern_inference.cpp\n#10 892.9 src/ast/pattern/expr_pattern_match.cpp\n#10 894.7 src/parsers/smt2/smt2scanner.cpp\n#10 896.2 src/parsers/smt2/marshal.cpp\n#10 897.3 src/parsers/smt2/smt2parser.cpp\n#10 901.1 src/cmd_context/pdecl.cpp\n#10 904.0 src/cmd_context/echo_tactic.cpp\n#10 905.1 src/cmd_context/tactic_manager.cpp\n#10 906.2 src/cmd_context/parametric_cmd.cpp\n#10 907.3 src/cmd_context/tactic_cmds.cpp\n#10 909.5 src/cmd_context/cmd_context_to_goal.cpp\n#10 910.5 src/cmd_context/simplify_cmd.cpp\n#10 911.7 src/cmd_context/eval_cmd.cpp\n#10 912.8 src/cmd_context/cmd_context.cpp\n#10 917.4 src/cmd_context/cmd_util.cpp\n#10 918.5 src/cmd_context/basic_cmds.cpp\n#10 920.6 src/cmd_context/simplifier_cmds.cpp\n#10 922.2 src/solver/combined_solver.cpp\n#10 923.5 src/solver/solver_na2as.cpp\n#10 924.5 src/solver/simplifier_solver.cpp\n#10 926.9 src/solver/check_sat_result.cpp\n#10 927.8 src/solver/parallel_tactical.cpp\n#10 930.1 src/solver/smt_logics.cpp\n#10 930.7 src/solver/mus.cpp\n#10 931.8 src/solver/solver_pool.cpp\n#10 933.6 src/solver/solver_preprocess.cpp\n#10 937.7 src/solver/tactic2solver.cpp\n#10 938.9 src/solver/solver.cpp\n#10 940.3 src/solver/check_logic.cpp\n#10 941.7 src/solver/solver2tactic.cpp\n#10 943.4 src/qe/lite/qe_lite_tactic.cpp\n#10 948.7 src/qe/mbp/mbp_datatypes.cpp\n#10 950.0 src/qe/mbp/mbp_plugin.cpp\n#10 951.2 src/qe/mbp/mbp_arrays.cpp\n#10 954.2 src/qe/mbp/mbp_term_graph.cpp\n#10 957.3 src/qe/mbp/mbp_solve_plugin.cpp\n#10 958.8 src/qe/mbp/mbp_arith.cpp\n#10 961.6 src/tactic/goal_num_occurs.cpp\n#10 962.6 src/tactic/goal_util.cpp\n#10 963.6 src/tactic/probe.cpp\n#10 965.3 src/tactic/goal.cpp\n#10 967.8 src/tactic/tactical.cpp\n#10 970.6 src/tactic/dependency_converter.cpp\n#10 971.7 src/tactic/tactic.cpp\n#10 973.2 src/tactic/goal_shared_occs.cpp\n#10 974.2 src/ast/simplifiers/card2bv.cpp\n#10 975.2 src/ast/simplifiers/bv_bounds_simplifier.cpp\n#10 977.7 src/ast/simplifiers/bit_blaster.cpp\n#10 978.9 src/ast/simplifiers/eliminate_predicates.cpp\n#10 981.6 src/ast/simplifiers/dominator_simplifier.cpp\n#10 983.1 src/ast/simplifiers/solve_context_eqs.cpp\n#10 984.8 src/ast/simplifiers/distribute_forall.cpp\n#10 986.6 src/ast/simplifiers/extract_eqs.cpp\n#10 988.3 src/ast/simplifiers/reduce_args_simplifier.cpp\n#10 991.2 src/ast/simplifiers/dependent_expr_state.cpp\n#10 992.4 src/ast/simplifiers/euf_completion.cpp\n#10 994.2 src/ast/simplifiers/propagate_values.cpp\n#10 995.2 src/ast/simplifiers/bv_slice.cpp\n#10 996.6 src/ast/simplifiers/bound_manager.cpp\n#10 998.1 src/ast/simplifiers/model_reconstruction_trail.cpp\n#10 999.8 src/ast/simplifiers/bound_propagator.cpp\n#10 1001.0 src/ast/simplifiers/bound_simplifier.cpp\n#10 1003.6 src/ast/simplifiers/demodulator_simplifier.cpp\n#10 1005.4 src/ast/simplifiers/linear_equation.cpp\n#10 1006.3 src/ast/simplifiers/max_bv_sharing.cpp\n#10 1008.4 src/ast/simplifiers/solve_eqs.cpp\n#10 1010.5 src/ast/simplifiers/elim_unconstrained.cpp\n#10 1012.5 src/ast/converters/replace_proof_converter.cpp\n#10 1013.4 src/ast/converters/proof_converter.cpp\n#10 1014.2 src/ast/converters/model_converter.cpp\n#10 1015.3 src/ast/converters/expr_inverter.cpp\n#10 1016.8 src/ast/converters/horn_subsume_model_converter.cpp\n#10 1018.2 src/ast/converters/equiv_proof_converter.cpp\n#10 1019.0 src/ast/converters/generic_model_converter.cpp\n#10 1020.2 src/model/array_factory.cpp\n#10 1021.2 src/model/numeral_factory.cpp\n#10 1022.5 src/model/value_factory.cpp\n#10 1023.8 src/model/model_implicant.cpp\n#10 1026.4 src/model/model_pp.cpp\n#10 1027.3 src/model/model_v2_pp.cpp\n#10 1028.2 src/model/model_macro_solver.cpp\n#10 1030.5 src/model/model2expr.cpp\n#10 1031.7 src/model/model_evaluator.cpp\n#10 1034.4 src/model/struct_factory.cpp\n#10 1035.2 src/model/model_core.cpp\n#10 1036.3 src/model/datatype_factory.cpp\n#10 1037.5 src/model/func_interp.cpp\n#10 1038.8 src/model/model_smt2_pp.cpp\n#10 1040.5 src/model/model.cpp\n#10 1043.3 src/ast/macros/quasi_macros.cpp\n#10 1044.8 src/ast/macros/quantifier_macro_info.cpp\n#10 1045.7 src/ast/macros/macro_util.cpp\n#10 1047.6 src/ast/macros/macro_manager.cpp\n#10 1050.2 src/ast/macros/macro_finder.cpp\n#10 1051.8 src/ast/proofs/proof_utils.cpp\n#10 1054.1 src/ast/proofs/proof_checker.cpp\n#10 1056.9 src/ast/substitution/substitution.cpp\n#10 1058.2 src/ast/substitution/substitution_tree.cpp\n#10 1060.2 src/ast/substitution/matcher.cpp\n#10 1061.1 src/ast/substitution/unifier.cpp\n#10 1062.2 src/ast/substitution/demodulator_rewriter.cpp\n#10 1065.1 src/ast/normal_forms/elim_term_ite.cpp\n#10 1065.9 src/ast/normal_forms/nnf.cpp\n#10 1067.6 src/ast/normal_forms/pull_quant.cpp\n#10 1070.0 src/ast/normal_forms/defined_names.cpp\n#10 1071.3 src/ast/normal_forms/name_exprs.cpp\n#10 1073.0 src/ast/rewriter/bit_blaster/bit_blaster_rewriter.cpp\n#10 1076.2 src/ast/rewriter/bit_blaster/bit_blaster.cpp\n#10 1078.7 src/ast/rewriter/bv_rewriter.cpp\n#10 1083.8 src/ast/rewriter/factor_rewriter.cpp\n#10 1086.2 src/ast/rewriter/array_rewriter.cpp\n#10 1088.2 src/ast/rewriter/bit2int.cpp\n#10 1089.5 src/ast/rewriter/cached_var_subst.cpp\n#10 1090.5 src/ast/rewriter/mk_extract_proc.cpp\n#10 1091.2 src/ast/rewriter/inj_axiom.cpp\n#10 1092.1 src/ast/rewriter/bv_bounds.cpp\n#10 1094.7 src/ast/rewriter/recfun_rewriter.cpp\n#10 1095.6 src/ast/rewriter/maximize_ac_sharing.cpp\n#10 1096.6 src/ast/rewriter/distribute_forall.cpp\n#10 1097.5 src/ast/rewriter/seq_rewriter.cpp\n#10 1106.1 src/ast/rewriter/th_rewriter.cpp\n#10 1108.8 src/ast/rewriter/expr_replacer.cpp\n#10 1110.9 src/ast/rewriter/pb2bv_rewriter.cpp\n#10 1114.6 src/ast/rewriter/label_rewriter.cpp\n#10 1116.3 src/ast/rewriter/push_app_ite.cpp\n#10 1117.2 src/ast/rewriter/macro_replacer.cpp\n#10 1119.1 src/ast/rewriter/quant_hoist.cpp\n#10 1120.4 src/ast/rewriter/value_sweep.cpp\n#10 1121.5 src/ast/rewriter/bv_elim.cpp\n#10 1122.6 src/ast/rewriter/mk_simplified_app.cpp\n#10 1123.5 src/ast/rewriter/ast_counter.cpp\n#10 1124.5 src/ast/rewriter/dl_rewriter.cpp\n#10 1125.1 src/ast/rewriter/elim_bounds.cpp\n#10 1126.3 src/ast/rewriter/char_rewriter.cpp\n#10 1127.0 src/ast/rewriter/func_decl_replace.cpp\n#10 1127.9 src/ast/rewriter/bool_rewriter.cpp\n#10 1130.4 src/ast/rewriter/factor_equivs.cpp\n#10 1131.5 src/ast/rewriter/dom_simplifier.cpp\n#10 1133.1 src/ast/rewriter/fpa_rewriter.cpp\n#10 1134.5 src/ast/rewriter/seq_skolem.cpp\n#10 1135.6 src/ast/rewriter/expr_safe_replace.cpp\n#10 1136.8 src/ast/rewriter/hoist_rewriter.cpp\n#10 1138.3 src/ast/rewriter/seq_axioms.cpp\n#10 1140.7 src/ast/rewriter/der.cpp\n#10 1142.9 src/ast/rewriter/seq_eq_solver.cpp\n#10 1144.6 src/ast/rewriter/arith_rewriter.cpp\n#10 1149.1 src/ast/rewriter/datatype_rewriter.cpp\n#10 1149.9 src/ast/rewriter/pb_rewriter.cpp\n#10 1152.1 src/ast/rewriter/enum2bv_rewriter.cpp\n#10 1154.6 src/ast/rewriter/rewriter.cpp\n#10 1156.6 src/ast/rewriter/var_subst.cpp\n#10 1157.8 src/math/lp/dense_matrix.cpp\n#10 1158.4 src/math/lp/nla_divisions.cpp\n#10 1160.6 src/math/lp/matrix.cpp\n#10 1161.4 src/math/lp/int_gcd_test.cpp\n#10 1163.1 src/math/lp/factorization.cpp\n#10 1164.2 src/math/lp/static_matrix.cpp\n#10 1166.0 src/math/lp/random_updater.cpp\n#10 1167.0 src/math/lp/indexed_vector.cpp\n#10 1167.8 src/math/lp/hnf_cutter.cpp\n#10 1170.5 src/math/lp/nra_solver.cpp\n#10 1172.5 src/math/lp/nla_common.cpp\n#10 1173.9 src/math/lp/nla_grobner.cpp\n#10 1176.7 src/math/lp/nex_creator.cpp\n#10 1178.9 src/math/lp/factorization_factory_imp.cpp\n#10 1180.0 src/math/lp/horner.cpp\n#10 1182.2 src/math/lp/nla_intervals.cpp\n#10 1184.8 src/math/lp/nla_powers.cpp\n#10 1186.3 src/math/lp/lp_settings.cpp\n#10 1186.9 src/math/lp/nla_core.cpp\n#10 1191.2 src/math/lp/nla_tangent_lemmas.cpp\n#10 1193.1 src/math/lp/core_solver_pretty_printer.cpp\n#10 1195.5 src/math/lp/lp_primal_core_solver.cpp\n#10 1197.9 src/math/lp/nla_order_lemmas.cpp\n#10 1200.1 src/math/lp/gomory.cpp\n#10 1202.0 src/math/lp/nla_basics_lemmas.cpp\n#10 1204.5 src/math/lp/nla_monotone_lemmas.cpp\n#10 1205.9 src/math/lp/emonics.cpp\n#10 1208.1 src/math/lp/int_cube.cpp\n#10 1209.2 src/math/lp/lp_core_solver_base.cpp\n#10 1210.8 src/math/lp/nla_solver.cpp\n#10 1212.1 src/math/lp/permutation_matrix.cpp\n#10 1212.8 src/math/lp/monomial_bounds.cpp\n#10 1214.5 src/math/lp/int_branch.cpp\n#10 1215.8 src/math/lp/int_solver.cpp\n#10 1218.1 src/math/lp/lar_solver.cpp\n#10 1223.1 src/math/lp/lar_core_solver.cpp\n#10 1224.2 src/math/lp/mon_eq.cpp\n#10 1225.3 src/nlsat/nlsat_types.cpp\n#10 1225.8 src/nlsat/nlsat_clause.cpp\n#10 1226.4 src/nlsat/nlsat_interval_set.cpp\n#10 1227.3 src/nlsat/nlsat_explain.cpp\n#10 1229.5 src/nlsat/nlsat_evaluator.cpp\n#10 1230.4 src/nlsat/nlsat_solver.cpp\n#10 1233.6 src/sat/sat_xor_finder.cpp\n#10 1234.7 src/sat/sat_integrity_checker.cpp\n#10 1235.5 src/sat/sat_prob.cpp\n#10 1236.7 src/sat/sat_ddfw.cpp\n#10 1238.1 src/sat/sat_scc.cpp\n#10 1239.1 src/sat/sat_elim_vars.cpp\n#10 1240.3 src/sat/sat_bcd.cpp\n#10 1241.6 src/sat/sat_cut_simplifier.cpp\n#10 1243.8 src/sat/sat_probing.cpp\n#10 1244.9 src/sat/sat_clause_use_list.cpp\n#10 1245.4 src/sat/sat_lookahead.cpp\n#10 1248.4 src/sat/sat_watched.cpp\n#10 1249.0 src/sat/sat_proof_trim.cpp\n#10 1250.5 src/sat/sat_anf_simplifier.cpp\n#10 1252.1 src/sat/sat_clause.cpp\n#10 1252.8 src/sat/sat_local_search.cpp\n#10 1254.4 src/sat/sat_parallel.cpp\n#10 1255.5 src/sat/sat_simplifier.cpp\n#10 1258.8 src/sat/sat_aig_cuts.cpp\n#10 1261.0 src/sat/sat_clause_set.cpp\n#10 1261.6 src/sat/sat_binspr.cpp\n#10 1262.6 src/sat/sat_elim_eqs.cpp\n#10 1263.6 src/sat/dimacs.cpp\n#10 1264.5 src/sat/sat_cutset.cpp\n#10 1265.7 src/sat/sat_config.cpp\n#10 1266.4 src/sat/sat_lut_finder.cpp\n#10 1267.5 src/sat/sat_drat.cpp\n#10 1269.0 src/sat/sat_cleaner.cpp\n#10 1269.8 src/sat/sat_solver.cpp\n#10 1275.8 src/sat/sat_mus.cpp\n#10 1277.1 src/sat/sat_big.cpp\n#10 1278.2 src/sat/sat_npn3_finder.cpp\n#10 1280.6 src/sat/sat_aig_finder.cpp\n#10 1281.8 src/sat/sat_asymm_branch.cpp\n#10 1283.1 src/sat/sat_model_converter.cpp\n#10 1284.4 src/sat/sat_gc.cpp\n#10 1285.9 src/math/grobner/pdd_solver.cpp\n#10 1287.1 src/math/grobner/grobner.cpp\n#10 1289.7 src/math/grobner/pdd_simplifier.cpp\n#10 1291.5 src/ast/euf/euf_egraph.cpp\n#10 1293.5 src/ast/euf/euf_enode.cpp\n#10 1294.3 src/ast/euf/euf_etable.cpp\n#10 1295.5 src/parsers/util/pattern_validation.cpp\n#10 1296.4 src/parsers/util/simple_parser.cpp\n#10 1297.4 src/parsers/util/scanner.cpp\n#10 1298.5 src/parsers/util/cost_parser.cpp\n#10 1299.3 src/smt/params/theory_str_params.cpp\n#10 1299.7 src/smt/params/theory_bv_params.cpp\n#10 1300.1 src/smt/params/preprocessor_params.cpp\n#10 1300.5 src/smt/params/smt_params.cpp\n#10 1301.5 src/smt/params/theory_seq_params.cpp\n#10 1301.9 src/smt/params/theory_pb_params.cpp\n#10 1302.3 src/smt/params/qi_params.cpp\n#10 1302.8 src/smt/params/theory_arith_params.cpp\n#10 1303.2 src/smt/params/dyn_ack_params.cpp\n#10 1303.7 src/smt/params/theory_array_params.cpp\n#10 1304.1 src/ast/expr_map.cpp\n#10 1304.9 src/ast/datatype_decl_plugin.cpp\n#10 1308.0 src/ast/cost_evaluator.cpp\n#10 1308.7 src/ast/ast_translation.cpp\n#10 1309.8 src/ast/num_occurs.cpp\n#10 1310.6 src/ast/quantifier_stat.cpp\n#10 1311.4 src/ast/occurs.cpp\n#10 1312.3 src/ast/static_features.cpp\n#10 1313.8 src/ast/arith_decl_plugin.cpp\n#10 1315.7 src/ast/expr2var.cpp\n#10 1316.6 src/ast/char_decl_plugin.cpp\n#10 1317.6 src/ast/used_vars.cpp\n#10 1318.4 src/ast/seq_decl_plugin.cpp\n#10 1320.8 src/ast/pb_decl_plugin.cpp\n#10 1322.2 src/ast/expr2polynomial.cpp\n#10 1323.7 src/ast/has_free_vars.cpp\n#10 1324.5 src/ast/recfun_decl_plugin.cpp\n#10 1326.6 src/ast/value_generator.cpp\n#10 1328.0 src/ast/expr_substitution.cpp\n#10 1329.2 src/ast/ast_smt2_pp.cpp\n#10 1331.9 src/ast/ast_ll_pp.cpp\n#10 1333.4 src/ast/shared_occs.cpp\n#10 1334.4 src/ast/func_decl_dependencies.cpp\n#10 1335.5 src/ast/special_relations_decl_plugin.cpp\n#10 1336.2 src/ast/bv_decl_plugin.cpp\n#10 1338.2 src/ast/ast.cpp\n#10 1342.6 src/ast/display_dimacs.cpp\n#10 1343.4 src/ast/for_each_expr.cpp\n#10 1344.5 src/ast/ast_lt.cpp\n#10 1345.2 src/ast/macro_substitution.cpp\n#10 1346.3 src/ast/for_each_ast.cpp\n#10 1347.1 src/ast/expr_abstract.cpp\n#10 1348.1 src/ast/ast_smt_pp.cpp\n#10 1350.5 src/ast/ast_util.cpp\n#10 1351.9 src/ast/ast_pp_dot.cpp\n#10 1352.9 src/ast/reg_decl_plugins.cpp\n#10 1353.7 src/ast/expr_functors.cpp\n#10 1354.5 src/ast/format.cpp\n#10 1355.4 src/ast/ast_printer.cpp\n#10 1356.2 src/ast/expr_stat.cpp\n#10 1356.9 src/ast/array_decl_plugin.cpp\n#10 1358.5 src/ast/act_cache.cpp\n#10 1359.3 src/ast/ast_pp_util.cpp\n#10 1360.4 src/ast/dl_decl_plugin.cpp\n#10 1361.9 src/ast/pp.cpp\n#10 1362.7 src/ast/decl_collector.cpp\n#10 1364.0 src/ast/well_sorted.cpp\n#10 1364.9 src/ast/fpa_decl_plugin.cpp\n#10 1366.7 src/math/subpaving/subpaving_mpf.cpp\n#10 1369.3 src/math/subpaving/subpaving_hwf.cpp\n#10 1371.9 src/math/subpaving/subpaving_mpq.cpp\n#10 1374.7 src/math/subpaving/subpaving_mpff.cpp\n#10 1377.3 src/math/subpaving/subpaving.cpp\n#10 1378.3 src/math/subpaving/subpaving_mpfx.cpp\n#10 1380.9 src/math/realclosure/mpz_matrix.cpp\n#10 1381.6 src/math/realclosure/realclosure.cpp\n#10 1385.9 src/params/pattern_inference_params.cpp\n#10 1386.3 src/params/context_params.cpp\n#10 1386.9 src/math/automata/automaton.cpp\n#10 1388.8 src/math/hilbert/hilbert_basis.cpp\n#10 1391.2 src/math/simplex/bit_matrix.cpp\n#10 1391.8 src/math/simplex/model_based_opt.cpp\n#10 1394.4 src/math/simplex/simplex.cpp\n#10 1397.5 src/math/dd/dd_fdd.cpp\n#10 1398.5 src/math/dd/dd_pdd.cpp\n#10 1402.3 src/math/dd/dd_bdd.cpp\n#10 1404.7 src/math/interval/interval_mpq.cpp\n#10 1406.3 src/math/interval/dep_intervals.cpp\n#10 1408.1 src/math/polynomial/polynomial_cache.cpp\n#10 1408.9 src/math/polynomial/algebraic_numbers.cpp\n#10 1411.6 src/math/polynomial/upolynomial.cpp\n#10 1414.1 src/math/polynomial/upolynomial_factorization.cpp\n#10 1416.0 src/math/polynomial/rpolynomial.cpp\n#10 1416.6 src/math/polynomial/sexpr2upolynomial.cpp\n#10 1417.5 src/math/polynomial/polynomial.cpp\n#10 1423.8 src/util/region.cpp\n#10 1424.0 In file included from ../src/util/region.cpp:53:\n#10 1424.0 ../src/util/region.cpp: In member function 'void* region::allocate(size_t)':\n#10 1424.0 ../src/util/tptr.h:29:62: error: 'uintptr_t' does not name a type\n#10 1424.0    29 | #define ALIGN(T, PTR) reinterpret_cast<T>(((reinterpret_cast<uintptr_t>(PTR) >> PTR_ALIGNMENT) + \\\n#10 1424.0       |                                                              ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:82:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    82 |         m_curr_ptr = ALIGN(char *, new_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/region.cpp:57:1: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    56 | #include \"util/page.h\"\n#10 1424.0   +++ |+#include <cstdint>\n#10 1424.0    57 | \n#10 1424.0 ../src/util/tptr.h:30:38: error: 'uintptr_t' does not name a type\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                      ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:82:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    82 |         m_curr_ptr = ALIGN(char *, new_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:38: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                      ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:82:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    82 |         m_curr_ptr = ALIGN(char *, new_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:67: error: 'uintptr_t' does not name a type\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                                                   ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:82:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    82 |         m_curr_ptr = ALIGN(char *, new_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:67: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                                                   ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:82:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    82 |         m_curr_ptr = ALIGN(char *, new_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:29:62: error: 'uintptr_t' does not name a type\n#10 1424.0    29 | #define ALIGN(T, PTR) reinterpret_cast<T>(((reinterpret_cast<uintptr_t>(PTR) >> PTR_ALIGNMENT) + \\\n#10 1424.0       |                                                              ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:29:62: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    29 | #define ALIGN(T, PTR) reinterpret_cast<T>(((reinterpret_cast<uintptr_t>(PTR) >> PTR_ALIGNMENT) + \\\n#10 1424.0       |                                                              ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:38: error: 'uintptr_t' does not name a type\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                      ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:38: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                      ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:67: error: 'uintptr_t' does not name a type\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                                                   ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 ../src/util/tptr.h:30:67: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n#10 1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n#10 1424.0       |                                                                   ^~~~~~~~~\n#10 1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n#10 1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n#10 1424.0       |                      ^~~~~\n#10 1424.0 make: *** [Makefile:39: util/region.o] Error 1\n#10 ERROR: process \"/bin/sh -c git clone https://github.com/Z3Prover/z3 &&     cd z3 &&     git checkout z3-4.12.2 &&     python3 scripts/mk_make.py &&     cd build &&     make VERBOSE=1 &&     make install\" did not complete successfully: exit code: 2\n------\n > [ 6/10] RUN git clone https://github.com/Z3Prover/z3 &&     cd z3 &&     git checkout z3-4.12.2 &&     python3 scripts/mk_make.py &&     cd build &&     make VERBOSE=1 &&     make install:\n1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n1424.0       |                      ^~~~~\n1424.0 ../src/util/tptr.h:30:67: note: 'uintptr_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?\n1424.0    30 |                          static_cast<uintptr_t>((reinterpret_cast<uintptr_t>(PTR) & TAG_MASK) != 0)) << PTR_ALIGNMENT)\n1424.0       |                                                                   ^~~~~~~~~\n1424.0 ../src/util/region.cpp:89:22: note: in expansion of macro 'ALIGN'\n1424.0    89 |         m_curr_ptr = ALIGN(char *, m_curr_ptr);\n1424.0       |                      ^~~~~\n1424.0 make: *** [Makefile:39: util/region.o] Error 1\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - UndefinedVar: Usage of undefined variable '$HOME' (line 4)\nenvgym.dockerfile:44\n--------------------\n  43 |     USER root\n  44 | >>> RUN git clone https://github.com/Z3Prover/z3 && \\\n  45 | >>>     cd z3 && \\\n  46 | >>>     git checkout z3-4.12.2 && \\\n  47 | >>>     python3 scripts/mk_make.py && \\\n  48 | >>>     cd build && \\\n  49 | >>>     make VERBOSE=1 && \\\n  50 | >>>     make install\n  51 |     USER cc\n--------------------\nERROR: failed to solve: process \"/bin/sh -c git clone https://github.com/Z3Prover/z3 &&     cd z3 &&     git checkout z3-4.12.2 &&     python3 scripts/mk_make.py &&     cd build &&     make VERBOSE=1 &&     make install\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}