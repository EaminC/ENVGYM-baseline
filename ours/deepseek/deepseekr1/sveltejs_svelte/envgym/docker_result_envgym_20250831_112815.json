{
  "timestamp": "20250831_112815",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756639692",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 555B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [base 1/9] FROM docker.io/library/node:20-alpine@sha256:df02558528d3d3d0d621f112e232611aecfee7cbc654f6b375765f72bb262799\n#4 DONE 0.0s\n\n#5 [stage-1 2/4] RUN apk add --no-cache bash\n#5 CACHED\n\n#6 [stage-1 3/4] WORKDIR /app\n#6 CACHED\n\n#7 [internal] load build context\n#7 transferring context: 1.16MB 0.3s done\n#7 DONE 0.3s\n\n#8 [base 5/9] RUN corepack enable &&     corepack prepare pnpm@8.15.7 --activate\n#8 CACHED\n\n#9 [base 2/9] RUN apk add --no-cache --virtual .build-deps     python3     make     g++\n#9 CACHED\n\n#10 [base 3/9] WORKDIR /app\n#10 CACHED\n\n#11 [base 4/9] COPY package.json pnpm-lock.yaml ./\n#11 CACHED\n\n#12 [base 6/9] RUN pnpm install --frozen-lockfile\n#12 CACHED\n\n#13 [base 7/9] COPY . .\n#13 DONE 1.1s\n\n#14 [base 8/9] RUN pnpm build\n#14 0.615 \n#14 0.615 > svelte-monorepo@0.0.1 build /app\n#14 0.615 > pnpm -r --filter=./packages/* build\n#14 0.615 \n#14 1.015 \n#14 1.015 > svelte@5.38.6 build /app/packages/svelte\n#14 1.015 > node scripts/process-messages && rollup -c && pnpm generate:types && node scripts/check-treeshakeability.js\n#14 1.015 \n#14 1.063 node:internal/modules/esm/resolve:873\n#14 1.063   throw new ERR_MODULE_NOT_FOUND(packageName, fileURLToPath(base), null);\n#14 1.063         ^\n#14 1.063 \n#14 1.063 Error [ERR_MODULE_NOT_FOUND]: Cannot find package 'acorn' imported from /app/packages/svelte/scripts/process-messages/index.js\n#14 1.063     at packageResolve (node:internal/modules/esm/resolve:873:9)\n#14 1.063     at moduleResolve (node:internal/modules/esm/resolve:946:18)\n#14 1.063     at defaultResolve (node:internal/modules/esm/resolve:1188:11)\n#14 1.063     at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:642:12)\n#14 1.063     at #cachedDefaultResolve (node:internal/modules/esm/loader:591:25)\n#14 1.063     at ModuleLoader.resolve (node:internal/modules/esm/loader:574:38)\n#14 1.063     at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:236:38)\n#14 1.063     at ModuleJob._link (node:internal/modules/esm/module_job:130:49) {\n#14 1.063   code: 'ERR_MODULE_NOT_FOUND'\n#14 1.063 }\n#14 1.063 \n#14 1.063 Node.js v20.19.4\n#14 1.071 /app/packages/svelte:\n#14 1.071  ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  svelte@5.38.6 build: `node scripts/process-messages && rollup -c && pnpm generate:types && node scripts/check-treeshakeability.js`\n#14 1.071 Exit status 1\n#14 1.072  WARN   Local package.json exists, but node_modules missing, did you mean to install?\n#14 1.091  ELIFECYCLE  Command failed with exit code 1.\n#14 ERROR: process \"/bin/sh -c pnpm build\" did not complete successfully: exit code: 1\n------\n > [base 8/9] RUN pnpm build:\n1.063     at ModuleJob._link (node:internal/modules/esm/module_job:130:49) {\n1.063   code: 'ERR_MODULE_NOT_FOUND'\n1.063 }\n1.063 \n1.063 Node.js v20.19.4\n1.071 /app/packages/svelte:\n1.071  ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  svelte@5.38.6 build: `node scripts/process-messages && rollup -c && pnpm generate:types && node scripts/check-treeshakeability.js`\n1.071 Exit status 1\n1.072  WARN   Local package.json exists, but node_modules missing, did you mean to install?\n1.091  ELIFECYCLE  Command failed with exit code 1.\n------\nenvgym.dockerfile:13\n--------------------\n  11 |     RUN pnpm install --frozen-lockfile\n  12 |     COPY . .\n  13 | >>> RUN pnpm build\n  14 |     RUN apk del .build-deps\n  15 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c pnpm build\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}