{
  "timestamp": "20250828_231251",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756422768",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 431B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/python:3.9-slim\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [1/7] FROM docker.io/library/python:3.9-slim@sha256:914169c7c8398b1b90c0b0ff921c8027445e39d7c25dc440337e56ce0f2566e6\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 405.28kB 0.0s done\n#5 DONE 0.0s\n\n#6 [2/7] WORKDIR /app\n#6 CACHED\n\n#7 [3/7] RUN apt-get update && apt-get install -y     build-essential     curl     tree     cmake     libopenblas-dev     libopenmpi-dev     gfortran     libjpeg-dev     zlib1g-dev\n#7 CACHED\n\n#8 [4/7] COPY requirements.txt ./\n#8 CACHED\n\n#9 [5/7] RUN pip install --no-cache-dir --upgrade pip setuptools\n#9 CACHED\n\n#10 [6/7] RUN pip install --no-cache-dir -v -r requirements.txt\n#10 0.455 Using pip 25.2 from /usr/local/lib/python3.9/site-packages/pip (python 3.9)\n#10 0.537 Collecting torch-geometric==2.3.1 (from -r requirements.txt (line 3))\n#10 0.583   Downloading torch_geometric-2.3.1.tar.gz (661 kB)\n#10 0.601      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 661.6/661.6 kB 108.8 MB/s  0:00:00\n#10 0.786   Installing build dependencies: started\n#10 0.786   Running command pip subprocess to install build dependencies\n#10 1.015   Using pip 25.2 from /usr/local/lib/python3.9/site-packages/pip (python 3.9)\n#10 1.243   Collecting setuptools>=40.8.0\n#10 1.244     Obtaining dependency information for setuptools>=40.8.0 from https://files.pythonhosted.org/packages/a3/dc/17031897dae0efacfea57dfd3a82fdd2a2aeb58e0ff71b77b87e44edc772/setuptools-80.9.0-py3-none-any.whl.metadata\n#10 1.289     Downloading setuptools-80.9.0-py3-none-any.whl.metadata (6.6 kB)\n#10 1.314   Downloading setuptools-80.9.0-py3-none-any.whl (1.2 MB)\n#10 1.341      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 64.8 MB/s  0:00:00\n#10 1.378   Installing collected packages: setuptools\n#10 1.465   Successfully installed setuptools-80.9.0\n#10 1.465   WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.\n#10 1.509   Installing build dependencies: finished with status 'done'\n#10 1.512   Getting requirements to build wheel: started\n#10 1.512   Running command Getting requirements to build wheel\n#10 1.897   /tmp/pip-build-env-dw6d8lhm/overlay/lib/python3.9/site-packages/setuptools/config/_apply_pyprojecttoml.py:61: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#10 1.897   !!\n#10 1.898 \n#10 1.898           ********************************************************************************\n#10 1.899           Please consider removing the following classifiers in favor of a SPDX license expression:\n#10 1.899 \n#10 1.900           License :: OSI Approved :: MIT License\n#10 1.900 \n#10 1.901           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#10 1.901           ********************************************************************************\n#10 1.901 \n#10 1.902   !!\n#10 1.902     dist._finalize_license_expression()\n#10 1.903   /tmp/pip-build-env-dw6d8lhm/overlay/lib/python3.9/site-packages/setuptools/dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#10 1.903   !!\n#10 1.904 \n#10 1.904           ********************************************************************************\n#10 1.905           Please consider removing the following classifiers in favor of a SPDX license expression:\n#10 1.905 \n#10 1.905           License :: OSI Approved :: MIT License\n#10 1.906 \n#10 1.906           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#10 1.907           ********************************************************************************\n#10 1.907 \n#10 1.908   !!\n#10 1.908     self._finalize_license_expression()\n#10 1.908   running egg_info\n#10 1.908   writing torch_geometric.egg-info/PKG-INFO\n#10 1.909   writing dependency_links to torch_geometric.egg-info/dependency_links.txt\n#10 1.909   writing requirements to torch_geometric.egg-info/requires.txt\n#10 1.909   writing top-level names to torch_geometric.egg-info/top_level.txt\n#10 1.923   reading manifest file 'torch_geometric.egg-info/SOURCES.txt'\n#10 1.930   reading manifest template 'MANIFEST.in'\n#10 1.937   warning: no previously-included files matching '*' found under directory 'test'\n#10 1.937   warning: no previously-included files matching '*' found under directory 'examples'\n#10 1.937   warning: no previously-included files matching '*' found under directory 'docs'\n#10 1.938   warning: no previously-included files matching '*' found under directory 'benchmark'\n#10 1.938   adding license file 'LICENSE'\n#10 1.946   writing manifest file 'torch_geometric.egg-info/SOURCES.txt'\n#10 1.966   Getting requirements to build wheel: finished with status 'done'\n#10 1.969   Preparing metadata (pyproject.toml): started\n#10 1.969   Running command Preparing metadata (pyproject.toml)\n#10 2.121   /tmp/pip-build-env-dw6d8lhm/overlay/lib/python3.9/site-packages/setuptools/config/_apply_pyprojecttoml.py:61: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#10 2.121   !!\n#10 2.122 \n#10 2.122           ********************************************************************************\n#10 2.123           Please consider removing the following classifiers in favor of a SPDX license expression:\n#10 2.123 \n#10 2.123           License :: OSI Approved :: MIT License\n#10 2.124 \n#10 2.124           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#10 2.125           ********************************************************************************\n#10 2.125 \n#10 2.126   !!\n#10 2.126     dist._finalize_license_expression()\n#10 2.127   /tmp/pip-build-env-dw6d8lhm/overlay/lib/python3.9/site-packages/setuptools/dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#10 2.127   !!\n#10 2.127 \n#10 2.128           ********************************************************************************\n#10 2.128           Please consider removing the following classifiers in favor of a SPDX license expression:\n#10 2.129 \n#10 2.129           License :: OSI Approved :: MIT License\n#10 2.130 \n#10 2.130           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#10 2.131           ********************************************************************************\n#10 2.131 \n#10 2.131   !!\n#10 2.132     self._finalize_license_expression()\n#10 2.132   running dist_info\n#10 2.132   creating /tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info\n#10 2.133   writing /tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/PKG-INFO\n#10 2.133   writing dependency_links to /tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/dependency_links.txt\n#10 2.133   writing requirements to /tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/requires.txt\n#10 2.133   writing top-level names to /tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/top_level.txt\n#10 2.133   writing manifest file '/tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/SOURCES.txt'\n#10 2.149   reading manifest file '/tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/SOURCES.txt'\n#10 2.149   reading manifest template 'MANIFEST.in'\n#10 2.156   warning: no previously-included files matching '*' found under directory 'test'\n#10 2.156   warning: no previously-included files matching '*' found under directory 'examples'\n#10 2.156   warning: no previously-included files matching '*' found under directory 'docs'\n#10 2.156   warning: no previously-included files matching '*' found under directory 'benchmark'\n#10 2.157   adding license file 'LICENSE'\n#10 2.162   writing manifest file '/tmp/pip-modern-metadata-ez6l93tk/torch_geometric.egg-info/SOURCES.txt'\n#10 2.162   creating '/tmp/pip-modern-metadata-ez6l93tk/torch_geometric-2.3.1.dist-info'\n#10 2.182   Preparing metadata (pyproject.toml): finished with status 'done'\n#10 2.273 Collecting torchvision==0.15.1 (from -r requirements.txt (line 4))\n#10 2.273   Obtaining dependency information for torchvision==0.15.1 from https://files.pythonhosted.org/packages/07/46/961d094cbab8ceac9dfa222012b7a706054a9a72051f932f48a401267af9/torchvision-0.15.1-cp39-cp39-manylinux1_x86_64.whl.metadata\n#10 2.280   Downloading torchvision-0.15.1-cp39-cp39-manylinux1_x86_64.whl.metadata (11 kB)\n#10 2.334 Collecting torchaudio==2.0.1 (from -r requirements.txt (line 5))\n#10 2.334   Obtaining dependency information for torchaudio==2.0.1 from https://files.pythonhosted.org/packages/6d/da/814638d2d8a09fad13f46f6c4b25906f4ac27d324adeb97f2d16644144ac/torchaudio-2.0.1-cp39-cp39-manylinux1_x86_64.whl.metadata\n#10 2.341   Downloading torchaudio-2.0.1-cp39-cp39-manylinux1_x86_64.whl.metadata (1.2 kB)\n#10 2.351 Collecting torch-spline-conv==1.2.2 (from -r requirements.txt (line 6))\n#10 2.357   Downloading torch_spline_conv-1.2.2.tar.gz (25 kB)\n#10 2.381   Preparing metadata (setup.py): started\n#10 2.381   Running command python setup.py egg_info\n#10 2.497   Traceback (most recent call last):\n#10 2.497     File \"<string>\", line 2, in <module>\n#10 2.498     File \"<pip-setuptools-caller>\", line 35, in <module>\n#10 2.498     File \"/tmp/pip-install-jjr0kv1p/torch-spline-conv_f8bd66a0e94f4b1987ebf18b3932a1d0/setup.py\", line 8, in <module>\n#10 2.499       import torch\n#10 2.499   ModuleNotFoundError: No module named 'torch'\n#10 2.515   error: subprocess-exited-with-error\n#10 2.515   \n#10 2.515   × python setup.py egg_info did not run successfully.\n#10 2.515   │ exit code: 1\n#10 2.515   ╰─> See above for output.\n#10 2.515   \n#10 2.515   note: This error originates from a subprocess, and is likely not a problem with pip.\n#10 2.517   full command: /usr/local/bin/python3.9 -c '\n#10 2.517   exec(compile('\"'\"''\"'\"''\"'\"'\n#10 2.517   # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py\n#10 2.517   #\n#10 2.517   # - It imports setuptools before invoking setup.py, to enable projects that directly\n#10 2.517   #   import from `distutils.core` to work with newer packaging standards.\n#10 2.517   # - It provides a clear error message when setuptools is not installed.\n#10 2.517   # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so\n#10 2.517   #   setuptools doesn'\"'\"'t think the script is `-c`. This avoids the following warning:\n#10 2.517   #     manifest_maker: standard file '\"'\"'-c'\"'\"' not found\".\n#10 2.517   # - It generates a shim setup.py, for handling setup.cfg-only projects.\n#10 2.517   import os, sys, tokenize, traceback\n#10 2.517   \n#10 2.517   try:\n#10 2.517       import setuptools\n#10 2.517   except ImportError:\n#10 2.517       print(\n#10 2.517           \"ERROR: Can not execute `setup.py` since setuptools failed to import in \"\n#10 2.517           \"the build environment with exception:\",\n#10 2.517           file=sys.stderr,\n#10 2.517       )\n#10 2.517       traceback.print_exc()\n#10 2.517       sys.exit(1)\n#10 2.517   \n#10 2.517   __file__ = %r\n#10 2.517   sys.argv[0] = __file__\n#10 2.517   \n#10 2.517   if os.path.exists(__file__):\n#10 2.517       filename = __file__\n#10 2.517       with tokenize.open(__file__) as f:\n#10 2.517           setup_py_code = f.read()\n#10 2.517   else:\n#10 2.517       filename = \"<auto-generated setuptools caller>\"\n#10 2.517       setup_py_code = \"from setuptools import setup; setup()\"\n#10 2.517   \n#10 2.517   exec(compile(setup_py_code, filename, \"exec\"))\n#10 2.517   '\"'\"''\"'\"''\"'\"' % ('\"'\"'/tmp/pip-install-jjr0kv1p/torch-spline-conv_f8bd66a0e94f4b1987ebf18b3932a1d0/setup.py'\"'\"',), \"<pip-setuptools-caller>\", \"exec\"))' egg_info --egg-base /tmp/pip-pip-egg-info-5e7u1i3u\n#10 2.517   cwd: /tmp/pip-install-jjr0kv1p/torch-spline-conv_f8bd66a0e94f4b1987ebf18b3932a1d0/\n#10 2.517   Preparing metadata (setup.py): finished with status 'error'\n#10 2.590 error: metadata-generation-failed\n#10 2.590 \n#10 2.590 × Encountered error while generating package metadata.\n#10 2.590 ╰─> See above for output.\n#10 2.590 \n#10 2.590 note: This is an issue with the package mentioned above, not pip.\n#10 2.590 hint: See above for details.\n#10 ERROR: process \"/bin/sh -c pip install --no-cache-dir -v -r requirements.txt\" did not complete successfully: exit code: 1\n------\n > [6/7] RUN pip install --no-cache-dir -v -r requirements.txt:\n2.517   '\"'\"''\"'\"''\"'\"' % ('\"'\"'/tmp/pip-install-jjr0kv1p/torch-spline-conv_f8bd66a0e94f4b1987ebf18b3932a1d0/setup.py'\"'\"',), \"<pip-setuptools-caller>\", \"exec\"))' egg_info --egg-base /tmp/pip-pip-egg-info-5e7u1i3u\n2.517   cwd: /tmp/pip-install-jjr0kv1p/torch-spline-conv_f8bd66a0e94f4b1987ebf18b3932a1d0/\n2.517   Preparing metadata (setup.py): finished with status 'error'\n2.590 error: metadata-generation-failed\n2.590 \n2.590 × Encountered error while generating package metadata.\n2.590 ╰─> See above for output.\n2.590 \n2.590 note: This is an issue with the package mentioned above, not pip.\n2.590 hint: See above for details.\n------\nenvgym.dockerfile:15\n--------------------\n  13 |     COPY requirements.txt ./\n  14 |     RUN pip install --no-cache-dir --upgrade pip setuptools\n  15 | >>> RUN pip install --no-cache-dir -v -r requirements.txt\n  16 |     COPY . .\n  17 |     CMD [\"/bin/bash\"]\n--------------------\nERROR: failed to solve: process \"/bin/sh -c pip install --no-cache-dir -v -r requirements.txt\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}