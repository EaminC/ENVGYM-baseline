{
  "timestamp": "20250828_230331",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756422205",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 254B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/python:3.9-slim\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [1/5] FROM docker.io/library/python:3.9-slim@sha256:914169c7c8398b1b90c0b0ff921c8027445e39d7c25dc440337e56ce0f2566e6\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 126.28kB 0.0s done\n#5 DONE 0.0s\n\n#6 [2/5] WORKDIR /app\n#6 CACHED\n\n#7 [3/5] RUN apt-get update && apt-get install -y build-essential\n#7 CACHED\n\n#8 [4/5] COPY . .\n#8 DONE 0.0s\n\n#9 [5/5] RUN if [ -f requirements.txt ]; then pip install --no-cache-dir -v -r requirements.txt; fi\n#9 1.423 Using pip 23.0.1 from /usr/local/lib/python3.9/site-packages/pip (python 3.9)\n#9 1.557 Collecting torch-geometric==2.3.1\n#9 1.614   Downloading torch_geometric-2.3.1.tar.gz (661 kB)\n#9 1.650      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 661.6/661.6 kB 21.1 MB/s eta 0:00:00\n#9 1.793   Installing build dependencies: started\n#9 1.794   Running command pip subprocess to install build dependencies\n#9 2.386   Collecting setuptools>=40.8.0\n#9 2.442     Downloading setuptools-80.9.0-py3-none-any.whl (1.2 MB)\n#9 2.537        ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 12.8 MB/s eta 0:00:00\n#9 2.590   Collecting wheel\n#9 2.594     Downloading wheel-0.45.1-py3-none-any.whl (72 kB)\n#9 2.601        ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 72.5/72.5 kB 13.0 MB/s eta 0:00:00\n#9 2.715   Installing collected packages: wheel, setuptools\n#9 3.320   Successfully installed setuptools-80.9.0 wheel-0.45.1\n#9 3.321   WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n#9 3.429 \n#9 3.429   [notice] A new release of pip is available: 23.0.1 -> 25.2\n#9 3.429   [notice] To update, run: pip install --upgrade pip\n#9 3.489   Installing build dependencies: finished with status 'done'\n#9 3.492   Getting requirements to build wheel: started\n#9 3.493   Running command Getting requirements to build wheel\n#9 3.660   /tmp/pip-build-env-pz78xb4p/overlay/lib/python3.9/site-packages/setuptools/config/_apply_pyprojecttoml.py:61: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#9 3.660   !!\n#9 3.660 \n#9 3.661           ********************************************************************************\n#9 3.661           Please consider removing the following classifiers in favor of a SPDX license expression:\n#9 3.662 \n#9 3.662           License :: OSI Approved :: MIT License\n#9 3.662 \n#9 3.663           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#9 3.663           ********************************************************************************\n#9 3.664 \n#9 3.664   !!\n#9 3.664     dist._finalize_license_expression()\n#9 3.665   /tmp/pip-build-env-pz78xb4p/overlay/lib/python3.9/site-packages/setuptools/dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#9 3.665   !!\n#9 3.666 \n#9 3.666           ********************************************************************************\n#9 3.666           Please consider removing the following classifiers in favor of a SPDX license expression:\n#9 3.667 \n#9 3.667           License :: OSI Approved :: MIT License\n#9 3.668 \n#9 3.668           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#9 3.668           ********************************************************************************\n#9 3.669 \n#9 3.669   !!\n#9 3.670     self._finalize_license_expression()\n#9 3.670   running egg_info\n#9 3.670   writing torch_geometric.egg-info/PKG-INFO\n#9 3.670   writing dependency_links to torch_geometric.egg-info/dependency_links.txt\n#9 3.671   writing requirements to torch_geometric.egg-info/requires.txt\n#9 3.671   writing top-level names to torch_geometric.egg-info/top_level.txt\n#9 3.685   reading manifest file 'torch_geometric.egg-info/SOURCES.txt'\n#9 3.692   reading manifest template 'MANIFEST.in'\n#9 3.699   warning: no previously-included files matching '*' found under directory 'test'\n#9 3.699   warning: no previously-included files matching '*' found under directory 'examples'\n#9 3.699   warning: no previously-included files matching '*' found under directory 'docs'\n#9 3.700   warning: no previously-included files matching '*' found under directory 'benchmark'\n#9 3.700   adding license file 'LICENSE'\n#9 3.708   writing manifest file 'torch_geometric.egg-info/SOURCES.txt'\n#9 3.725   Getting requirements to build wheel: finished with status 'done'\n#9 3.727   Preparing metadata (pyproject.toml): started\n#9 3.727   Running command Preparing metadata (pyproject.toml)\n#9 3.871   /tmp/pip-build-env-pz78xb4p/overlay/lib/python3.9/site-packages/setuptools/config/_apply_pyprojecttoml.py:61: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#9 3.872   !!\n#9 3.872 \n#9 3.872           ********************************************************************************\n#9 3.873           Please consider removing the following classifiers in favor of a SPDX license expression:\n#9 3.873 \n#9 3.873           License :: OSI Approved :: MIT License\n#9 3.874 \n#9 3.874           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#9 3.874           ********************************************************************************\n#9 3.875 \n#9 3.875   !!\n#9 3.875     dist._finalize_license_expression()\n#9 3.876   /tmp/pip-build-env-pz78xb4p/overlay/lib/python3.9/site-packages/setuptools/dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.\n#9 3.876   !!\n#9 3.876 \n#9 3.877           ********************************************************************************\n#9 3.877           Please consider removing the following classifiers in favor of a SPDX license expression:\n#9 3.878 \n#9 3.878           License :: OSI Approved :: MIT License\n#9 3.878 \n#9 3.879           See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.\n#9 3.879           ********************************************************************************\n#9 3.879 \n#9 3.880   !!\n#9 3.880     self._finalize_license_expression()\n#9 3.880   running dist_info\n#9 3.881   creating /tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info\n#9 3.881   writing /tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/PKG-INFO\n#9 3.881   writing dependency_links to /tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/dependency_links.txt\n#9 3.883   writing requirements to /tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/requires.txt\n#9 3.883   writing top-level names to /tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/top_level.txt\n#9 3.883   writing manifest file '/tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/SOURCES.txt'\n#9 3.900   reading manifest file '/tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/SOURCES.txt'\n#9 3.900   reading manifest template 'MANIFEST.in'\n#9 3.906   warning: no previously-included files matching '*' found under directory 'test'\n#9 3.906   warning: no previously-included files matching '*' found under directory 'examples'\n#9 3.907   warning: no previously-included files matching '*' found under directory 'docs'\n#9 3.907   warning: no previously-included files matching '*' found under directory 'benchmark'\n#9 3.907   adding license file 'LICENSE'\n#9 3.912   writing manifest file '/tmp/pip-modern-metadata-w63lqfl_/torch_geometric.egg-info/SOURCES.txt'\n#9 3.913   creating '/tmp/pip-modern-metadata-w63lqfl_/torch_geometric-2.3.1.dist-info'\n#9 3.932   Preparing metadata (pyproject.toml): finished with status 'done'\n#9 4.063 Collecting torchvision==0.15.1\n#9 4.070   Downloading torchvision-0.15.1-cp39-cp39-manylinux1_x86_64.whl (6.0 MB)\n#9 4.552      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.0/6.0 MB 12.6 MB/s eta 0:00:00\n#9 4.684 Collecting torchaudio==2.0.1\n#9 4.694   Downloading torchaudio-2.0.1-cp39-cp39-manylinux1_x86_64.whl (4.4 MB)\n#9 5.035      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.4/4.4 MB 13.1 MB/s eta 0:00:00\n#9 5.068 Collecting torch-spline-conv==1.2.2\n#9 5.076   Downloading torch_spline_conv-1.2.2.tar.gz (25 kB)\n#9 5.098   Preparing metadata (setup.py): started\n#9 5.098   Running command python setup.py egg_info\n#9 5.303   Traceback (most recent call last):\n#9 5.304     File \"<string>\", line 2, in <module>\n#9 5.304     File \"<pip-setuptools-caller>\", line 34, in <module>\n#9 5.304     File \"/tmp/pip-install-a2grzzxo/torch-spline-conv_f12c061b507d4c71a8069c5163f28463/setup.py\", line 8, in <module>\n#9 5.305       import torch\n#9 5.305   ModuleNotFoundError: No module named 'torch'\n#9 5.322   error: subprocess-exited-with-error\n#9 5.322   \n#9 5.322   × python setup.py egg_info did not run successfully.\n#9 5.322   │ exit code: 1\n#9 5.322   ╰─> See above for output.\n#9 5.322   \n#9 5.322   note: This error originates from a subprocess, and is likely not a problem with pip.\n#9 5.324   full command: /usr/local/bin/python3.9 -c '\n#9 5.324   exec(compile('\"'\"''\"'\"''\"'\"'\n#9 5.324   # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py\n#9 5.324   #\n#9 5.324   # - It imports setuptools before invoking setup.py, to enable projects that directly\n#9 5.324   #   import from `distutils.core` to work with newer packaging standards.\n#9 5.324   # - It provides a clear error message when setuptools is not installed.\n#9 5.324   # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so\n#9 5.324   #   setuptools doesn'\"'\"'t think the script is `-c`. This avoids the following warning:\n#9 5.324   #     manifest_maker: standard file '\"'\"'-c'\"'\"' not found\".\n#9 5.324   # - It generates a shim setup.py, for handling setup.cfg-only projects.\n#9 5.324   import os, sys, tokenize\n#9 5.324   \n#9 5.324   try:\n#9 5.324       import setuptools\n#9 5.324   except ImportError as error:\n#9 5.324       print(\n#9 5.324           \"ERROR: Can not execute `setup.py` since setuptools is not available in \"\n#9 5.324           \"the build environment.\",\n#9 5.324           file=sys.stderr,\n#9 5.324       )\n#9 5.324       sys.exit(1)\n#9 5.324   \n#9 5.324   __file__ = %r\n#9 5.324   sys.argv[0] = __file__\n#9 5.324   \n#9 5.324   if os.path.exists(__file__):\n#9 5.324       filename = __file__\n#9 5.324       with tokenize.open(__file__) as f:\n#9 5.324           setup_py_code = f.read()\n#9 5.324   else:\n#9 5.324       filename = \"<auto-generated setuptools caller>\"\n#9 5.324       setup_py_code = \"from setuptools import setup; setup()\"\n#9 5.324   \n#9 5.324   exec(compile(setup_py_code, filename, \"exec\"))\n#9 5.324   '\"'\"''\"'\"''\"'\"' % ('\"'\"'/tmp/pip-install-a2grzzxo/torch-spline-conv_f12c061b507d4c71a8069c5163f28463/setup.py'\"'\"',), \"<pip-setuptools-caller>\", \"exec\"))' egg_info --egg-base /tmp/pip-pip-egg-info-29qk9n4n\n#9 5.324   cwd: /tmp/pip-install-a2grzzxo/torch-spline-conv_f12c061b507d4c71a8069c5163f28463/\n#9 5.325   Preparing metadata (setup.py): finished with status 'error'\n#9 5.327 error: metadata-generation-failed\n#9 5.327 \n#9 5.327 × Encountered error while generating package metadata.\n#9 5.327 ╰─> See above for output.\n#9 5.327 \n#9 5.327 note: This is an issue with the package mentioned above, not pip.\n#9 5.327 hint: See above for details.\n#9 5.421 \n#9 5.421 [notice] A new release of pip is available: 23.0.1 -> 25.2\n#9 5.421 [notice] To update, run: pip install --upgrade pip\n#9 ERROR: process \"/bin/sh -c if [ -f requirements.txt ]; then pip install --no-cache-dir -v -r requirements.txt; fi\" did not complete successfully: exit code: 1\n------\n > [5/5] RUN if [ -f requirements.txt ]; then pip install --no-cache-dir -v -r requirements.txt; fi:\n5.327 error: metadata-generation-failed\n5.327 \n5.327 × Encountered error while generating package metadata.\n5.327 ╰─> See above for output.\n5.327 \n5.327 note: This is an issue with the package mentioned above, not pip.\n5.327 hint: See above for details.\n5.421 \n5.421 [notice] A new release of pip is available: 23.0.1 -> 25.2\n5.421 [notice] To update, run: pip install --upgrade pip\n------\nenvgym.dockerfile:5\n--------------------\n   3 |     RUN apt-get update && apt-get install -y build-essential\n   4 |     COPY . .\n   5 | >>> RUN if [ -f requirements.txt ]; then pip install --no-cache-dir -v -r requirements.txt; fi\n   6 |     CMD [\"/bin/bash\"]\n--------------------\nERROR: failed to solve: process \"/bin/sh -c if [ -f requirements.txt ]; then pip install --no-cache-dir -v -r requirements.txt; fi\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}