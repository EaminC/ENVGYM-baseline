{
  "timestamp": "20250829_153755",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756481875",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.37kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [1/7] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [2/7] RUN apt-get update && apt-get install -y --no-install-recommends     git     curl     build-essential     procps     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [internal] load build context\n#6 transferring context: 420.73kB 0.0s done\n#6 DONE 0.0s\n\n#7 [3/7] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \"$HOME/.cargo/env\" &&     rustup toolchain install nightly &&     rustup component add rust-src --toolchain nightly &&     rustup component add miri --toolchain nightly &&     rustup component add clippy &&     rustup target add         thumbv6m-none-eabi         thumbv7m-none-eabi         mips64-unknown-linux-gnuabi64         x86_64-unknown-linux-gnu &&     cargo install cargo-hack\n#7 0.286 curl: (77) error setting certificate file: /etc/ssl/certs/ca-certificates.crt\n#7 0.288 /bin/sh: 1: .: cannot open /root/.cargo/env: No such file\n#7 ERROR: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \\\"$HOME/.cargo/env\\\" &&     rustup toolchain install nightly &&     rustup component add rust-src --toolchain nightly &&     rustup component add miri --toolchain nightly &&     rustup component add clippy &&     rustup target add         thumbv6m-none-eabi         thumbv7m-none-eabi         mips64-unknown-linux-gnuabi64         x86_64-unknown-linux-gnu &&     cargo install cargo-hack\" did not complete successfully: exit code: 2\n------\n > [3/7] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \"$HOME/.cargo/env\" &&     rustup toolchain install nightly &&     rustup component add rust-src --toolchain nightly &&     rustup component add miri --toolchain nightly &&     rustup component add clippy &&     rustup target add         thumbv6m-none-eabi         thumbv7m-none-eabi         mips64-unknown-linux-gnuabi64         x86_64-unknown-linux-gnu &&     cargo install cargo-hack:\n0.286 curl: (77) error setting certificate file: /etc/ssl/certs/ca-certificates.crt\n0.288 /bin/sh: 1: .: cannot open /root/.cargo/env: No such file\n------\nenvgym.dockerfile:21\n--------------------\n  20 |     # This ensures that rustup, once installed, is available in the PATH for subsequent commands within the same RUN instruction.\n  21 | >>> RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable && \\\n  22 | >>>     # Source the cargo environment to update the PATH for the current RUN instruction\n  23 | >>>     . \"$HOME/.cargo/env\" && \\\n  24 | >>>     # Install the nightly toolchain and its components (Miri, rust-src)\n  25 | >>>     rustup toolchain install nightly && \\\n  26 | >>>     rustup component add rust-src --toolchain nightly && \\\n  27 | >>>     rustup component add miri --toolchain nightly && \\\n  28 | >>>     # Add the clippy component to the stable toolchain\n  29 | >>>     rustup component add clippy && \\\n  30 | >>>     # Add cross-compilation targets\n  31 | >>>     rustup target add \\\n  32 | >>>         thumbv6m-none-eabi \\\n  33 | >>>         thumbv7m-none-eabi \\\n  34 | >>>         mips64-unknown-linux-gnuabi64 \\\n  35 | >>>         x86_64-unknown-linux-gnu && \\\n  36 | >>>     # Install cargo-hack\n  37 | >>>     cargo install cargo-hack\n  38 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \\\"$HOME/.cargo/env\\\" &&     rustup toolchain install nightly &&     rustup component add rust-src --toolchain nightly &&     rustup component add miri --toolchain nightly &&     rustup component add clippy &&     rustup target add         thumbv6m-none-eabi         thumbv7m-none-eabi         mips64-unknown-linux-gnuabi64         x86_64-unknown-linux-gnu &&     cargo install cargo-hack\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}