{
  "timestamp": "20250829_043135",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756441894",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 4.03kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.3s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [internal] preparing inline document\n#4 DONE 0.0s\n\n#5 [internal] preparing inline document\n#5 DONE 0.0s\n\n#6 [ 1/16] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#6 DONE 0.0s\n\n#7 [ 2/16] RUN apt-get update &&     apt-get install -y --no-install-recommends     build-essential     g++     clang     clang-tools     cmake     git     ninja-build     python3-pip     python3-venv     valgrind     lcov     cppcheck     pkg-config     astyle     wget     unzip     ca-certificates     tar &&     rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [10/16] RUN cd /root/json-verification-project/build &&     cmake .. &&     cmake --build . &&     ./verify_json &&     cd / &&     rm -rf /root/json-verification-project\n#8 CACHED\n\n#9 [ 3/16] WORKDIR /home/cc/EnvGym/data\n#9 CACHED\n\n#10 [ 6/16] RUN mkdir build-install &&     cd build-install &&     cmake .. -DJSON_BuildTests=ON -G Ninja &&     cmake --build . --parallel $(nproc) &&     ctest --output-on-failure -j$(nproc) &&     cmake --install . &&     cd .. &&     rm -rf build-install\n#10 CACHED\n\n#11 [11/16] RUN python3 -m venv venv\n#11 CACHED\n\n#12 [ 9/16] COPY <<EOF /root/json-verification-project/CMakeLists.txt\n#12 CACHED\n\n#13 [ 7/16] RUN mkdir -p /root/json-verification-project/build\n#13 CACHED\n\n#14 [ 4/16] RUN git clone https://github.com/nlohmann/json.git nlohmann_json &&     cd nlohmann_json &&     git checkout v3.12.0\n#14 CACHED\n\n#15 [ 8/16] COPY <<EOF /root/json-verification-project/main.cpp\n#15 CACHED\n\n#16 [ 5/16] WORKDIR /home/cc/EnvGym/data/nlohmann_json\n#16 CACHED\n\n#17 [12/16] RUN . venv/bin/activate &&     pip install --no-cache-dir     -r docs/mkdocs/requirements.txt     -r tools/astyle/requirements.txt     -r tools/generate_natvis/requirements.txt     -r tools/serve_header/requirements.txt     -r cmake/requirements/requirements-cppcheck.txt     -r cmake/requirements/requirements-cpplint.txt     -r cmake/requirements/requirements-reuse.txt\n#17 CACHED\n\n#18 [13/16] RUN wget https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz -O /tmp/codeql.tar.gz &&     tar -xzf /tmp/codeql.tar.gz -C /opt &&     rm /tmp/codeql.tar.gz\n#18 0.209 --2025-08-29 04:31:35--  https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz\n#18 0.214 Resolving github.com (github.com)... 140.82.114.4\n#18 0.241 Connecting to github.com (github.com)|140.82.114.4|:443... connected.\n#18 0.284 HTTP request sent, awaiting response... 404 Not Found\n#18 0.373 2025-08-29 04:31:35 ERROR 404: Not Found.\n#18 0.373 \n#18 ERROR: process \"/bin/sh -c wget https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz -O /tmp/codeql.tar.gz &&     tar -xzf /tmp/codeql.tar.gz -C /opt &&     rm /tmp/codeql.tar.gz\" did not complete successfully: exit code: 8\n------\n > [13/16] RUN wget https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz -O /tmp/codeql.tar.gz &&     tar -xzf /tmp/codeql.tar.gz -C /opt &&     rm /tmp/codeql.tar.gz:\n0.209 --2025-08-29 04:31:35--  https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz\n0.214 Resolving github.com (github.com)... 140.82.114.4\n0.241 Connecting to github.com (github.com)|140.82.114.4|:443... connected.\n0.284 HTTP request sent, awaiting response... 404 Not Found\n0.373 2025-08-29 04:31:35 ERROR 404: Not Found.\n0.373 \n------\nenvgym.dockerfile:108\n--------------------\n 107 |     # Download and install the CodeQL CLI for static analysis\n 108 | >>> RUN wget https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz -O /tmp/codeql.tar.gz && \\\n 109 | >>>     tar -xzf /tmp/codeql.tar.gz -C /opt && \\\n 110 | >>>     rm /tmp/codeql.tar.gz\n 111 |     ENV PATH=\"/opt/codeql:${PATH}\"\n--------------------\nERROR: failed to solve: process \"/bin/sh -c wget https://github.com/github/codeql-cli-binaries/releases/download/v2.19.5/codeql-bundle-linux64.tar.gz -O /tmp/codeql.tar.gz &&     tar -xzf /tmp/codeql.tar.gz -C /opt &&     rm /tmp/codeql.tar.gz\" did not complete successfully: exit code: 8\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}