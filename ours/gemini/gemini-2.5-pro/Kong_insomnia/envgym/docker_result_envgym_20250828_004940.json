{
  "timestamp": "20250828_004940",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756342179",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.57kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 99B done\n#3 DONE 0.0s\n\n#4 [1/7] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 313.49kB 0.1s done\n#5 DONE 0.1s\n\n#6 [3/7] RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n#6 CACHED\n\n#7 [4/7] RUN echo \"export NVM_DIR=\"/root/.nvm\"\" >> /root/.bashrc &&     echo \"[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\" >> /root/.bashrc &&     echo \"[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\" >> /root/.bashrc\n#7 CACHED\n\n#8 [2/7] RUN apt-get update &&     apt-get install -y --no-install-recommends     curl     git     libfontconfig-dev     libcurl4-openssl-dev     ca-certificates     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [5/7] WORKDIR /app\n#9 CACHED\n\n#10 [6/7] COPY . .\n#10 DONE 0.1s\n\n#11 [7/7] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \"\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     echo \"//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}\" > .npmrc &&     npm ci &&     rm .npmrc\"\n#11 ERROR: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \\\\\\\"$NODE_AUTH_TOKEN\\\\\\\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     echo \\\\\\\"//npm.pkg.github.com/:_authToken=\\\\${NODE_AUTH_TOKEN}\\\\\\\" > .npmrc &&     npm ci &&     rm .npmrc\\\"\" did not complete successfully: exit code: 3\n------\n > [7/7] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \"\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     echo \"//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}\" > .npmrc &&     npm ci &&     rm .npmrc\":\n------\nenvgym.dockerfile:46\n--------------------\n  45 |     # It also handles the creation and cleanup of the .npmrc file to avoid leaving secrets in the image layer.\n  46 | >>> RUN /bin/bash -c \"source $NVM_DIR/nvm.sh && \\\n  47 | >>>     nvm install && \\\n  48 | >>>     nvm use && \\\n  49 | >>>     if [ -z \\\"$NODE_AUTH_TOKEN\\\" ]; then \\\n  50 | >>>         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2; \\\n  51 | >>>         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2; \\\n  52 | >>>         exit 1; \\\n  53 | >>>     fi && \\\n  54 | >>>     echo \\\"//npm.pkg.github.com/:_authToken=\\${NODE_AUTH_TOKEN}\\\" > .npmrc && \\\n  55 | >>>     npm ci && \\\n  56 | >>>     rm .npmrc\"\n  57 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \\\\\\\"$NODE_AUTH_TOKEN\\\\\\\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     echo \\\\\\\"//npm.pkg.github.com/:_authToken=\\\\${NODE_AUTH_TOKEN}\\\\\\\" > .npmrc &&     npm ci &&     rm .npmrc\\\"\" did not complete successfully: exit code: 3\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}