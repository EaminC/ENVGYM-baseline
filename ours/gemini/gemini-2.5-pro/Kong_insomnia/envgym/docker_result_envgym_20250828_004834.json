{
  "timestamp": "20250828_004834",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756342113",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.50kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 99B done\n#3 DONE 0.0s\n\n#4 [1/8] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [3/8] RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n#5 CACHED\n\n#6 [4/8] RUN echo \"export NVM_DIR=\"/root/.nvm\"\" >> /root/.bashrc &&     echo \"[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\" >> /root/.bashrc &&     echo \"[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\" >> /root/.bashrc\n#6 CACHED\n\n#7 [2/8] RUN apt-get update &&     apt-get install -y --no-install-recommends     curl     git     libfontconfig-dev     libcurl4-openssl-dev     ca-certificates     && apt-get clean && rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [5/8] WORKDIR /app\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 291.03kB 0.1s done\n#9 DONE 0.1s\n\n#10 [6/8] COPY . .\n#10 DONE 0.2s\n\n#11 [7/8] RUN echo \"//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}\" > .npmrc\n#11 DONE 0.3s\n\n#12 [8/8] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \"\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     npm ci\"\n#12 ERROR: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \\\\\\\"$NODE_AUTH_TOKEN\\\\\\\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     npm ci\\\"\" did not complete successfully: exit code: 3\n------\n > [8/8] RUN /bin/bash -c \"source /root/.nvm/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \"\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     npm ci\":\n------\nenvgym.dockerfile:48\n--------------------\n  47 |     # This is done in a single RUN command to ensure the correct Node.js version is used by npm.\n  48 | >>> RUN /bin/bash -c \"source $NVM_DIR/nvm.sh && \\\n  49 | >>>     nvm install && \\\n  50 | >>>     nvm use && \\\n  51 | >>>     if [ -z \\\"$NODE_AUTH_TOKEN\\\" ]; then \\\n  52 | >>>         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2; \\\n  53 | >>>         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2; \\\n  54 | >>>         exit 1; \\\n  55 | >>>     fi && \\\n  56 | >>>     npm ci\"\n  57 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c /bin/bash -c \\\"source $NVM_DIR/nvm.sh &&     nvm install &&     nvm use &&     if [ -z \\\\\\\"$NODE_AUTH_TOKEN\\\\\\\" ]; then         echo 'Error: Build-time argument NODE_AUTH_TOKEN is not set.' >&2;         echo 'Please build with --build-arg NODE_AUTH_TOKEN=YOUR_GITHUB_PAT' >&2;         exit 1;     fi &&     npm ci\\\"\" did not complete successfully: exit code: 3\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}