{
  "timestamp": "20250828_144334",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756392213",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.95kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/12] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#4 DONE 0.0s\n\n#5 [ 2/12] RUN apt-get update &&     apt-get install -y --no-install-recommends     curl     wget     unzip     git     build-essential &&     apt-get clean && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [ 3/12] RUN mkdir -p /opt/jdk8 &&     wget -q --no-check-certificate \"https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u412-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u412b08.tar.gz\" -O /tmp/jdk8.tar.gz &&     tar -xzf /tmp/jdk8.tar.gz -C /opt/jdk8 --strip-components=1 &&     rm /tmp/jdk8.tar.gz\n#6 CACHED\n\n#7 [ 4/12] RUN mkdir -p /opt/jdk11 &&     wget -q --no-check-certificate \"https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.23+9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.23_9.tar.gz\" -O /tmp/jdk11.tar.gz &&     tar -xzf /tmp/jdk11.tar.gz -C /opt/jdk11 --strip-components=1 &&     rm /tmp/jdk11.tar.gz\n#7 CACHED\n\n#8 [ 6/12] RUN wget -q --no-check-certificate \"https://golang.org/dl/go1.22.3.linux-amd64.tar.gz\" -O /tmp/go.tar.gz &&     tar -C /usr/local -xzf /tmp/go.tar.gz &&     rm /tmp/go.tar.gz\n#8 CACHED\n\n#9 [ 5/12] RUN mkdir -p /opt/jdk17 &&     wget -q --no-check-certificate \"https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.11+9/OpenJDK17U-jdk_x64_linux_hotspot_17.0.11_9.tar.gz\" -O /tmp/jdk17.tar.gz &&     tar -xzf /tmp/jdk17.tar.gz -C /opt/jdk17 --strip-components=1 &&     rm /tmp/jdk17.tar.gz\n#9 CACHED\n\n#10 [ 7/12] RUN mkdir -p /opt/android-sdk/cmdline-tools &&     wget -q --no-check-certificate \"https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip\" -O /tmp/android-tools.zip &&     unzip -q /tmp/android-tools.zip -d /opt/android-sdk/cmdline-tools &&     mv /opt/android-sdk/cmdline-tools/cmdline-tools /opt/android-sdk/cmdline-tools/latest &&     rm /tmp/android-tools.zip\n#10 CACHED\n\n#11 [internal] load build context\n#11 transferring context: 2.65MB 0.2s done\n#11 DONE 0.2s\n\n#12 [ 8/12] RUN mkdir -p /opt/graalvm &&     wget -q -L --no-check-certificate \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.5/graalvm-ce-java17-linux-amd64-22.3.5.tar.gz\" -O /tmp/graalvm.tar.gz &&     tar -xzf /tmp/graalvm.tar.gz -C /opt/graalvm --strip-components=1 &&     rm /tmp/graalvm.tar.gz\n#12 ERROR: process \"/bin/bash -c mkdir -p ${GRAALVM_HOME} &&     wget -q -L --no-check-certificate \\\"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java${GRAALVM_JAVA_VERSION}-linux-amd64-${GRAALVM_VERSION}.tar.gz\\\" -O /tmp/graalvm.tar.gz &&     tar -xzf /tmp/graalvm.tar.gz -C ${GRAALVM_HOME} --strip-components=1 &&     rm /tmp/graalvm.tar.gz\" did not complete successfully: exit code: 8\n------\n > [ 8/12] RUN mkdir -p /opt/graalvm &&     wget -q -L --no-check-certificate \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.5/graalvm-ce-java17-linux-amd64-22.3.5.tar.gz\" -O /tmp/graalvm.tar.gz &&     tar -xzf /tmp/graalvm.tar.gz -C /opt/graalvm --strip-components=1 &&     rm /tmp/graalvm.tar.gz:\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - LegacyKeyValueFormat: \"ENV key=value\" should be used instead of legacy \"ENV key value\" format (line 15)\nenvgym.dockerfile:72\n--------------------\n  71 |     # Install GraalVM\n  72 | >>> RUN mkdir -p ${GRAALVM_HOME} && \\\n  73 | >>>     wget -q -L --no-check-certificate \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java${GRAALVM_JAVA_VERSION}-linux-amd64-${GRAALVM_VERSION}.tar.gz\" -O /tmp/graalvm.tar.gz && \\\n  74 | >>>     tar -xzf /tmp/graalvm.tar.gz -C ${GRAALVM_HOME} --strip-components=1 && \\\n  75 | >>>     rm /tmp/graalvm.tar.gz\n  76 |     \n--------------------\nERROR: failed to solve: process \"/bin/bash -c mkdir -p ${GRAALVM_HOME} &&     wget -q -L --no-check-certificate \\\"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java${GRAALVM_JAVA_VERSION}-linux-amd64-${GRAALVM_VERSION}.tar.gz\\\" -O /tmp/graalvm.tar.gz &&     tar -xzf /tmp/graalvm.tar.gz -C ${GRAALVM_HOME} --strip-components=1 &&     rm /tmp/graalvm.tar.gz\" did not complete successfully: exit code: 8\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}