{
  "timestamp": "20250828_231553",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756422951",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.33kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/13] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 2/13] WORKDIR /home/cc/EnvGym/data/flex\n#5 CACHED\n\n#6 [ 3/13] RUN apt-get update && apt-get install -y --no-install-recommends     build-essential     git     cmake     clang     curl     swig     subversion     pkg-config     ca-certificates     portaudio19-dev     ffmpeg     xvfb     x11vnc     mesa-utils     libgl1-mesa-dev     libsdl-image1.2-dev     libsdl-mixer1.2-dev     libsdl-ttf2.0-dev     libsdl1.2-dev     libsmpeg-dev     libportmidi-dev     libswscale-dev     libavformat-dev     libavcodec-dev     libfreetype6-dev     libasound2-dev     libjack-dev     libsndfile1-dev     libsdl2-dev     libsdl2-image-dev     libsdl2-ttf-dev     libsdl2-gfx-dev     libdirectfb-dev     libst-dev     libsdl-sge-dev     libgmp3-dev     libopenmpi-dev     libeigen3-dev     libboost-all-dev     gdal-bin     libgdal-dev     default-libmysqlclient-dev     libpq-dev     mysql-server &&     apt-get clean && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 4/13] RUN if [ -e /usr/include/locale.h ] && [ ! -e /usr/include/xlocale.h ]; then ln -s /usr/include/locale.h /usr/include/xlocale.h; fi &&     if [ -e /usr/include/eigen3/Eigen ] && [ ! -e /usr/include/Eigen ]; then ln -s /usr/include/eigen3/Eigen /usr/include/Eigen; fi\n#7 CACHED\n\n#8 [internal] load build context\n#8 transferring context: 1.52MB 0.1s done\n#8 DONE 0.1s\n\n#9 [ 5/13] RUN curl -sL \"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\" -o miniconda.sh &&     rm -rf /opt/conda &&     mkdir -p /opt/conda &&     bash miniconda.sh -b -p /opt/conda &&     rm miniconda.sh\n#9 1.453 ERROR: File or directory already exists: '/opt/conda'\n#9 1.453 If you want to update an existing installation, use the -u option.\n#9 ERROR: process \"/bin/sh -c curl -sL \\\"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\\\" -o miniconda.sh &&     rm -rf $CONDA_DIR &&     mkdir -p $CONDA_DIR &&     bash miniconda.sh -b -p $CONDA_DIR &&     rm miniconda.sh\" did not complete successfully: exit code: 1\n------\n > [ 5/13] RUN curl -sL \"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\" -o miniconda.sh &&     rm -rf /opt/conda &&     mkdir -p /opt/conda &&     bash miniconda.sh -b -p /opt/conda &&     rm miniconda.sh:\n1.453 ERROR: File or directory already exists: '/opt/conda'\n1.453 If you want to update an existing installation, use the -u option.\n------\nenvgym.dockerfile:66\n--------------------\n  65 |     ENV CONDA_DIR /opt/conda\n  66 | >>> RUN curl -sL \"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\" -o miniconda.sh && \\\n  67 | >>>     rm -rf $CONDA_DIR && \\\n  68 | >>>     mkdir -p $CONDA_DIR && \\\n  69 | >>>     bash miniconda.sh -b -p $CONDA_DIR && \\\n  70 | >>>     rm miniconda.sh\n  71 |     ENV PATH=$CONDA_DIR/bin:$PATH\n--------------------\nERROR: failed to solve: process \"/bin/sh -c curl -sL \\\"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\\\" -o miniconda.sh &&     rm -rf $CONDA_DIR &&     mkdir -p $CONDA_DIR &&     bash miniconda.sh -b -p $CONDA_DIR &&     rm miniconda.sh\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}